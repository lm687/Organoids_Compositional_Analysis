ggtitle('Exposures for the organoids')+labs(x='')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
rename_rows(exposures, gsub('Sample ', 'PDO', rownames(exposures)))
createBarplot(rename_rows(exposures, gsub('Sample ', 'PDO', rownames(exposures))))
createBarplot
exposures
gsub('Sample ', 'PDO', names(sort(exposures[,1])))
sort(exposures[,1])
rownames(exposures
)
library(grid)
library(gridExtra)
library(dendextend)
library(ggrepel)
library(cowplot)
library(compositions)
library(CompSign)
library(QDNAseq)
library(Biobase)
library(RColorBrewer)
library(dplyr)
library(tidyverse)
library(MASS)
library(pheatmap)
library(ggdendro)
library(readxl)
library(CNTools)
library(GenomicRanges)
source("../../../../other_repos/BriTROC-cnsignatures-bfb69cd72c50/main_functions.R")
source("helper_functions.R")
gsub('Sample ', 'PDO', names(sort(exposures[,1])))
rm(list = ls())
library(grid)
library(gridExtra)
library(dendextend)
library(ggrepel)
library(cowplot)
library(compositions)
library(CompSign)
library(QDNAseq)
library(Biobase)
library(RColorBrewer)
library(dplyr)
library(tidyverse)
library(MASS)
library(pheatmap)
library(ggdendro)
library(readxl)
library(CNTools)
library(GenomicRanges)
source("../../../../other_repos/BriTROC-cnsignatures-bfb69cd72c50/main_functions.R")
source("helper_functions.R")
n <- 60
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unique(unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals))))
chrlen = readRDS("data/chrlen.RDS")
give_short_names = function(i){
if(grepl('TCGA', i)){
paste0(strsplit(i, split = '-')[[1]][1:3], collapse='-')
}else{
i
}
}
clr_vec <- function(x){
log(x) - mean(log(x))
}
clr_mat <- function(X){
.res <- t(apply(X, 1, clr_vec))
stopifnot(dim(.res) == dim(X))
.res
}
org<- as(readRDS("data/organoid_exposures.rds"), 'matrix')
# rownames(org) <- paste0('Sample ', 1:nrow(org))
names_orgs = readxl::read_xlsx("data/NewOrganoidNaming.xlsx")
names_orgs$`new name`[match(rownames(org), paste0(names_orgs$`old name`, 'org'))]
rownames(org) = names_orgs$`new name`[match(rownames(org), paste0(names_orgs$`old name`, 'org'))]
rename_rows = function(i, new_names){
rownames(i) = new_names; return(i)}
createBarplot(rename_rows(org, gsub('Sample ', 'PDO', rownames(org))), remove_labels = FALSE, order_labels = gsub('Sample ', 'PDO', names(sort(org[,1])))) +
scale_fill_brewer(palette="Dark2")+labs(y='Exposure')+
ggtitle('Exposures for the organoids')+labs(x='')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
createBarplot(rename_rows(org, gsub('Sample ', 'PDO', rownames(org))), remove_labels = FALSE, order_labels = gsub('Sample ', 'PDO', names(sort(org[,1])))) +
scale_fill_brewer(palette="Dark2")+labs(y='Exposure')+
ggtitle('Exposures for the organoids')+labs(x='')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
exposures = readRDS("~/Desktop/ascites_exposures.rds")
dim(exposures)
ascites = read.csv("data/asorg_PDO.csv")
ascites
ascites = read.csv("data/asorg_PDO.csv")
exposures = readRDS("~/Desktop/ascites_exposures.rds")
exposures
ascites
book_ascites = readxl::read_xlsx("Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/copy_number_analysis_organoids/data/Book1.xlsx")
book_ascites = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/copy_number_analysis_organoids/data/Book1.xlsx")
book_ascites
rownames(exposures)
rownames(exposures) = book_ascites$organoid[match(rownames(exposures), book_ascites$`JBLAB-number`)]
book_ascites$organoid[match(rownames(exposures), book_ascites$`JBLAB-number`)]
match(rownames(exposures), book_ascites$`JBLAB-number`)
exposures = exposures[match(rownames(exposures), book_ascites$`JBLAB-number`),]
exposures
rownames(exposures)
apply(exposures, 1, is.na)
colSums(apply(exposures, 1, is.na))
colSums(apply(exposures, 1, is.na)) == 7
exposures = exposures[!colSums(apply(exposures, 1, is.na)) == 7,]
exposures
book_ascites$organoid[match(rownames(exposures), book_ascites$`JBLAB-number`)]
rownames(exposures)
match(rownames(exposures), book_ascites$`JBLAB-number`)
exposures
exposures = readRDS("~/Desktop/ascites_exposures.rds")
exposures
ggplot(melt(cbind(org=rownames(exposures), exposures)), aes(x=org, y=value, fill=variable))+geom_bar(stat='identity')
org == exposures
book_ascites = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/copy_number_analysis_organoids/data/Book1.xlsx")
exposures = exposures[match(book_ascites$`JBLAB-number`, rownames(exposures)),]
exposures
rownames(exposures) = book_ascites$organoid[match(book_ascites$`JBLAB-number`, rownames(exposures))]
exposures
exposures
ascites
exposures
rownames(exposures)
gsub('org', '', rownames(exposures))
ascites[gsub('org', '', rownames(exposures)),]
match(gsub('org', '', rownames(exposures)) rownames(ascites))
ascites[match(gsub('org', '', rownames(exposures)), rownames(ascites)),]
match(gsub('org', '', rownames(exposures)), rownames(ascites))
rownames(ascites)
ascites
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),]
exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),] == exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)]
exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)] == exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)]
exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)] == exposures
all.equal(ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)], exposures)
as.matrix(scites[match(gsub('org', '', rownames(exposures)))
)
as.matrix(ascites[match(gsub('org', '', rownames(exposures)))
)
as.matrix(ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)])
matched_ascites = ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)]
matched_ascites[1,] == exposures[1,]
matched_ascites
exposures
exposures[1,]
matched_ascites
exposures[1,]
matched_ascites[1,]
exposures[1,]
##
joint_counts_CN_TPM = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
##
joint_counts_CN_TPM = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN_TPM)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
require(ggplot2)
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1)
joint_counts_CN = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1)
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
system('mkdir ~/Desktop/Vias/figures/')
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("~/Desktop/Vias/figures/joint_counts_CN_TMB_all.pdf")
dev.off()
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("~/Desktop/Vias/figures/joint_counts_CN_TMB_all.pdf", width=10, height=10)
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("~/Desktop/Vias/figures/joint_counts_CN_TMB_all_loglog.pdf", width=10, height=8)
topvariable = readLines("~/Desktop/Vias/top_variable.txt")
topvariable
topvariable = read.table("/Vias/top_variable.txt", comment.char = "#")
topvariable = read.table("~/Desktop//Vias/top_variable.txt", comment.char = "#")
topvariable
head(topvariable)
head(joint_counts_CN)
joint_counts_CN %>% filter(CN.gene_name %in% topvariable)
require(dplyr)
joint_counts_CN %>% filter(CN.gene_name %in% topvariable)
joint_counts_CN$topvariable$V1
topvariable$V1
joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1)
head()
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1), aes(x=CN.value, y=counts.value, col=CN.gene_name))
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1), aes(x=CN.value, y=counts.value, col=CN.gene_name))+
geom_point()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TMB_topvar.pdf")
for(i in topvariable$V1){
ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+ggtitle(i)
}
dev.off()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TMB_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+ggtitle(i))
}
dev.off()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TPM_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+geom_point()+ggtitle(i))
}
dev.off()
warnings()
i=topvariable$V1[1]
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+geom_point()+ggtitle(i))
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+
geom_point()+geom_smooth()+ggtitle(i))
head(joint_counts_CN)
require(ggrepel)
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel())
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
pdf("~/Desktop/Vias/figures/joint_counts_CN_TPM_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
rm(list = ls())
require(ggplot2)
require(ggrepel)
require(dplyr)
joint_counts_CN = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv")
head(deseq_counts)
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',')
head(deseq_counts)
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',', header = T)
head(deseq_counts)
head(melt(deseq_counts))
require(reshape2)
head(melt(deseq_counts))
deseq_counts = (melt(deseq_counts))
colnames(deseq_counts) = c('Gene', 'DESEq.sample', 'DESeq.count')
require(biomaRt)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
ensembl <- useEnsembl(biomart = "genes")
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
ensembl
rownames(deseq_counts)
deseq_counts$Gene
t2g <- getBM(
attributes = c('ensembl_gene_id', 'external_gene_name'),
values = deseq_counts$Gene,
filter = 'ensembl_gene_id',
mart = mart, useCache = FALSE)
t2g <- getBM(
attributes = c('ensembl_gene_id', 'external_gene_name'),
values = deseq_counts$Gene,
filter = 'ensembl_gene_id',
mart = ensembl, useCache = FALSE)
saveRDS(t2g, file = "~/Desktop/t2g.RDS")
entrezgene_id_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
head(entrezgene_id_matched)
head(deseq_counts$Gene)
rm(entrezgene_id_matched)
genename_ensmid_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
genename_ensmid_matched
deseq_counts$Gene = genename_ensmid_matched
joint_counts_CN$CN.gene_name
joint_counts_CN$CN.L1
joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name)
paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name)
head(deseq_counts)
readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming
deseq_counts$DESEq.sample
match(gsub("[.]", "-", deseq_counts$DESEq.sample))
match(gsub("[.]", "-", deseq_counts$DESEq.sample), joint_counts_CN$CN.L1)
gsub("[.]", "-", deseq_counts$DESEq.sample)
joint_counts_CN$CN.L1
renaming
match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)
match(renaming$sampleNameRNAseq, gsub("[.]", "-", deseq_counts$DESEq.sample))
match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)
head(renaming)
renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
joint_counts_CN$CN.gene_name
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
paste0(deseq_counts$DESEq.sample)
paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)
match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene))
deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),]
dim(deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
dim(joint_counts_CN)
head(deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN = cbind.data.frame(joint_counts_CN, deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN[1,]
joint_counts_CN[4,]
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("~/Desktop/Vias/figures/joint_counts_CN_DESeq_all.pdf", width=10, height=10)
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("~/Desktop/Vias/figures/joint_counts_CN_DESeq_all_loglog.pdf", width=10, height=8)
pdf("~/Desktop/Vias/figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
topvariable = read.table("~/Desktop//Vias/top_variable.txt", comment.char = "#")
pdf("~/Desktop/Vias/figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
plot(joint_counts_CN$counts.value, joint_counts_CN$DESeq.count)
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(rnaseqRpkg)
library(biomaRt)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(DESeq2)
library(reshape2)
## Load file output from DESeq2, which has been created with 1_run_DE.sh
load("../objects/deaObjectFile")
deObj = `~response`
DE_results_TCGA = read.table("../objects/differential_all", sep = ',', header = T)
## Load the organoids DE
load("../files/deObject_SampleGroup_sensitive_vs_resistant.RData")
## e.g. JBLAB-19920 is PDO18 and has been excluded based on 3' bias
"JBLAB-19920" %in% colnames(SampleGroup)
length(colnames(SampleGroup)) ## 3' bias have been excluded
## but I am not sure why there are 14 instead of 15
"JBLAB-19939" %in% colnames(SampleGroup) ## the fourth sample with highest 3' bias
DE_results_org = DESeq2::results(SampleGroup)
DE_results_org
##---------------------------------------------------------------------------------------------------------------##
## not look at differential abundance, but simply at gene expression and whether it correlates
## counts for organoids
counts_DESeq_org = read.table("../files/counts_norm.csv", sep = ",", header=T, stringsAsFactors = FALSE)
apply(counts_DESeq_org, 2, function(i) as.numeric(i))
counts_DESeq_org
colnames(counts_DESeq_org)
rownames(counts_DESeq_org) = counts_DESeq_org[,1]; counts_DESeq_org = counts_DESeq_org[,-1]
##---------------------------------------------------------------------------------------------------------------##
## not look at differential abundance, but simply at gene expression and whether it correlates
## counts for organoids
counts_DESeq_org = read.table("../files/counts_norm.csv", sep = ",", header=T, stringsAsFactors = FALSE)
apply(counts_DESeq_org, 2, function(i) as.numeric(i))
rownames(counts_DESeq_org) = counts_DESeq_org[,1]; counts_DESeq_org = counts_DESeq_org[,-1]
colnames(counts_DESeq_org) ## we have more than 18 because we also have normal samples
colnames(counts_DESeq_org)
colnames(counts_DESeq_org) %in% c('JBLAB.19925', 'JBLAB.19936', 'JBLAB.19920', 'JBLAB.19950', 'JBLAB.19953', 'JBLAB.19952',
'JBLAB-19954', 'JBLAB-19955', 'JBLAB-19951')
'JBLAB-19954', 'JBLAB-19955', 'JBLAB-19951')]
counts_DESeq_org = counts_DESeq_org[,!(colnames(counts_DESeq_org) %in% c('JBLAB.19925', 'JBLAB.19936', 'JBLAB.19920', 'JBLAB.19950',
'JBLAB.19953', 'JBLAB.19952',
'JBLAB.19954', 'JBLAB.19955', 'JBLAB.19951'))]
list_to_df = function(a){
.x = apply(a, 2, function(i) as.numeric(i))
rownames(.x) = rownames(a); colnames(.x) = colnames(a)
return(.x)
}
counts_DESeq_org = list_to_df(counts_DESeq_org)
## counts for TCGA
counts_DESeq_TCGA = DESeq2::counts(deObj, normalized=TRUE)
counts_DESeq_TCGA_raw = DESeq2::counts(deObj, normalized=FALSE)
rownames(counts_DESeq_TCGA) = gsub("[.].*", "", rownames(counts_DESeq_TCGA))
rownames(counts_DESeq_TCGA) == rownames(counts_DESeq_org)
## why the difference?
length(rownames(counts_DESeq_org))
length(rownames(counts_DESeq_TCGA))
counts_DESeq_TCGA = counts_DESeq_TCGA[match(rownames(counts_DESeq_org), rownames(counts_DESeq_TCGA)),]
length(rownames(counts_DESeq_org))
length(rownames(counts_DESeq_TCGA))
rownames(counts_DESeq_TCGA) = rownames(counts_DESeq_org) = make.names(gene_conversion$external_gene_name[match(rownames(counts_DESeq_org), gene_conversion$ensembl_gene_id)], unique = T)
subset_genes = c('MYC', 'CCNE1', 'PIK3CA', 'TERT', 'KRAS', 'PTEN', 'RB1', 'AKT1',
'AKT2', 'PARP1', 'PARP2', 'ATM', 'ATR', 'WEE1', 'TOP1', 'TUBB1',
'AKT3', 'CCND1', 'CCND2', 'CCND3', 'CDKN2A', 'CDKN2B', 'MECOM', 'CDK12')
##---------------------------------------------------------------------------------------------------------------##
## Run differential expression with DESeq
# In any case, the contrast argument of the function results takes a character vector of length three: the name of the variable, the name of the factor level for the numerator of the log2 ratio, and the name of the factor level for the denominator. The contrast argument can also take other forms, as described in the help page for results and below
results <- DESeq2::results(deObj, c("response", "complete_remission_or_response", "progressive_disease"),
alpha = 0.05, format = "DataFrame")
rownames_short = sapply(rownames(results), function(i) strsplit(i, '[.]')[[1]][1])
## Re-name
mart <- useMart(biomart = "ensembl", dataset = "hsapiens_gene_ensembl")
gene_conversion <- getBM(attributes = c("external_gene_name", "ensembl_gene_id"),
filters = "ensembl_gene_id", values = rownames_short,
mart = mart)
gene_conversion = gene_conversion[match(rownames_short, gene_conversion$ensembl_gene_id),]
rownames(counts_DESeq_TCGA) = rownames(counts_DESeq_org) = make.names(gene_conversion$external_gene_name[match(rownames(counts_DESeq_org), gene_conversion$ensembl_gene_id)], unique = T)
subset_genes = c('MYC', 'CCNE1', 'PIK3CA', 'TERT', 'KRAS', 'PTEN', 'RB1', 'AKT1',
'AKT2', 'PARP1', 'PARP2', 'ATM', 'ATR', 'WEE1', 'TOP1', 'TUBB1',
'AKT3', 'CCND1', 'CCND2', 'CCND3', 'CDKN2A', 'CDKN2B', 'MECOM', 'CDK12')
df_all_genes <- melt(list(TCGA=counts_DESeq_TCGA,
org=counts_DESeq_org))
df_subset_genes <- melt(list(TCGA=counts_DESeq_TCGA[rownames(counts_DESeq_TCGA) %in% subset_genes,],
org=counts_DESeq_org[rownames(counts_DESeq_org) %in% subset_genes,]))
ggplot(df_all_genes, aes(y=value, x=L1))+geom_boxplot()+geom_jitter()
means_tcga <- rowMeans(counts_DESeq_TCGA)
means_org <- rowMeans(counts_DESeq_org)
means_tcga
pdf("../figures/Sensitive_resistant_figures/colmeans_deseqcounts_correlation_tcga_org.pdf")
plot(log(means_tcga), log(means_org), xlab='DESeq normalised counts from TCGA',ylab='DESeq normalised counts from organoids')
abline(coef=c(0,1), lty='dashed', col='blue')
dev.off()
ggplot()+
geom_violin(data=df_subset_genes %>% filter(L1 == 'TCGA'), aes(x=factor(Var1, levels=names(sort(means_tcga[subset_genes]))),
y=value, col=L1))+
geom_point(data=df_subset_genes %>% filter(L1 == 'org'), aes(x=factor(Var1, levels=names(sort(means_tcga[subset_genes]))),
y=value, col=L1))+
scale_y_continuous(trans='log10')+theme_bw()+labs(x='Genes', y='Normalised DESeq2 counts')
ggsave("../figures/Sensitive_resistant_figures/deseqcounts_correlation_tcga_org_selected_genes.pdf", width = 8)
ggsave("../figures/Sensitive_resistant_figures/deseqcounts_correlation_tcga_org_selected_genes.pdf", width = 12)
ggsave("../figures/Sensitive_resistant_figures/deseqcounts_correlation_tcga_org_selected_genes.pdf", width = 14)
## I should do the same for TPMs
counts_DESeq_TCGA_raw
counts_DESeq_org_raw = read.table("../files/20191218_ViasM_BJ_orgaBrs_tpm.csv", sep = ",", header=T, stringsAsFactors = FALSE)
rownames(counts_DESeq_org_raw) = counts_DESeq_org_raw$gene_id; counts_DESeq_org_raw = counts_DESeq_org_raw[,-c(1:9)]
counts_DESeq_org_raw = list_to_df(counts_DESeq_org_raw)
## Remove the organoids that have a 3' bias, and the normal samples
## PDO14 (JBLAB-19925) PDO16 (JBLAB-19936) PDO18 (JBLAB-19920) and normal (JBLAB-19950, JBLAB-19953, JBLAB-19952
## JBLAB-19954, JBLAB-19955, JBLAB-19951)
counts_DESeq_org_raw = counts_DESeq_org_raw[,!(colnames(counts_DESeq_org_raw) %in% c('JBLAB.19925', 'JBLAB.19936', 'JBLAB.19920', 'JBLAB.19950',
'JBLAB.19953', 'JBLAB.19952',
'JBLAB.19954', 'JBLAB.19955', 'JBLAB.19951'))]
counts_DESeq_TCGA_TPM = sweep(counts_DESeq_TCGA_raw, 2, colSums(counts_DESeq_TCGA_raw), '/')
counts_DESeq_org_TPM = sweep(counts_DESeq_org_raw, 2, colSums(counts_DESeq_org_raw), '/')
rownames(counts_DESeq_TCGA_TPM) = gsub("[.].*", "", rownames(counts_DESeq_TCGA_TPM))
counts_DESeq_TCGA_TPM = counts_DESeq_TCGA_TPM[match(rownames(counts_DESeq_org_TPM), rownames(counts_DESeq_TCGA_TPM)),]
dim(counts_DESeq_TCGA_TPM)[1] == dim(counts_DESeq_org_TPM)[1]
rownames(counts_DESeq_TCGA_TPM) = rownames(counts_DESeq_org_TPM) = make.names(gene_conversion$external_gene_name[match(rownames(counts_DESeq_org_TPM), gene_conversion$ensembl_gene_id)], unique = T)
df_all_genes_TPM <- melt(list(TCGA=counts_DESeq_TCGA_TPM,
org=counts_DESeq_org_TPM))
df_subset_genes_TPM <- df_all_genes_TPM %>% filter(Var1 %in% subset_genes)
means_tcga_TPM <- rowMeans(counts_DESeq_TCGA_TPM)
means_org_TPM <- rowMeans(counts_DESeq_org_TPM)
ggplot()+
geom_violin(data=df_subset_genes_TPM %>% filter(L1 == 'TCGA'), aes(x=factor(Var1, levels=names(sort(means_tcga_TPM[subset_genes]))),
y=value, col=L1))+
geom_point(data=df_subset_genes_TPM %>% filter(L1 == 'org'), aes(x=factor(Var1, levels=names(sort(means_tcga_TPM[subset_genes]))),
y=value, col=L1))+
scale_y_continuous(trans='log10')+theme_bw()+labs(x='Genes', y='TPM')
ggplot()+
geom_violin(data=df_subset_genes_TPM %>% filter(L1 == 'TCGA'), aes(x=factor(Var1, levels=names(sort(means_tcga_TPM[subset_genes]))),
y=value, col=L1))+
geom_point(data=df_subset_genes_TPM %>% filter(L1 == 'org'), aes(x=factor(Var1, levels=names(sort(means_tcga_TPM[subset_genes]))),
y=value, col=L1))+
scale_y_continuous(trans='log10')+theme_bw()+labs(x='Genes', y='TPM')
ggsave("../figures/Sensitive_resistant_figures/TPM_correlation_tcga_org_selected_genes.pdf", width = 14)
table(df_subset_genes_TPM$Var1)
table(df_subset_genes_TPM$)
head(df_subset_genes_TPM)
df_subset_genes_TPM$L1 == 'org'
df_subset_genes_TPM[df_subset_genes_TPM$L1 == 'org',]
df_subset_genes_TPM[df_subset_genes_TPM$L1 == 'org','Var2']
table(df_subset_genes_TPM[df_subset_genes_TPM$L1 == 'org','Var2'])
table(droplevels(df_subset_genes_TPM[df_subset_genes_TPM$L1 == 'org','Var2']))
lne
length(table(droplevels(df_subset_genes_TPM[df_subset_genes_TPM$L1 == 'org','Var2'])))
counts_DESeq_org_raw = read.table("../files/20191218_ViasM_BJ_orgaBrs_tpm.csv", sep = ",", header=T, stringsAsFactors = FALSE)
rownames(counts_DESeq_org_raw) = counts_DESeq_org_raw$gene_id; counts_DESeq_org_raw = counts_DESeq_org_raw[,-c(1:9)]
counts_DESeq_org_raw = list_to_df(counts_DESeq_org_raw)
dim()
dim(counts_DESeq_org_raw)
colnames(counts_DESeq_org_raw)
## Remove the organoids that have a 3' bias, and the normal samples
## PDO14 (JBLAB-19925) PDO16 (JBLAB-19936) PDO18 (JBLAB-19920) and normal (JBLAB-19950, JBLAB-19953, JBLAB-19952
## JBLAB-19954, JBLAB-19955, JBLAB-19951)
counts_DESeq_org_raw = counts_DESeq_org_raw[,!(colnames(counts_DESeq_org_raw) %in% c('JBLAB19925', 'JBLAB19936', 'JBLAB19920', 'JBLAB19950',
'JBLAB19953', 'JBLAB19952',
'JBLAB19954', 'JBLAB19955', 'JBLAB19951'))]
counts_DESeq_TCGA_TPM = sweep(counts_DESeq_TCGA_raw, 2, colSums(counts_DESeq_TCGA_raw), '/')
counts_DESeq_org_TPM = sweep(counts_DESeq_org_raw, 2, colSums(counts_DESeq_org_raw), '/')
rownames(counts_DESeq_TCGA_TPM) = gsub("[.].*", "", rownames(counts_DESeq_TCGA_TPM))
counts_DESeq_TCGA_TPM = counts_DESeq_TCGA_TPM[match(rownames(counts_DESeq_org_TPM), rownames(counts_DESeq_TCGA_TPM)),]
dim(counts_DESeq_TCGA_TPM)[1] == dim(counts_DESeq_org_TPM)[1]
rownames(counts_DESeq_TCGA_TPM) = rownames(counts_DESeq_org_TPM) = make.names(gene_conversion$external_gene_name[match(rownames(counts_DESeq_org_TPM), gene_conversion$ensembl_gene_id)], unique = T)
df_all_genes_TPM <- melt(list(TCGA=counts_DESeq_TCGA_TPM,
org=counts_DESeq_org_TPM))
df_subset_genes_TPM <- df_all_genes_TPM %>% filter(Var1 %in% subset_genes)
means_tcga_TPM <- rowMeans(counts_DESeq_TCGA_TPM)
means_org_TPM <- rowMeans(counts_DESeq_org_TPM)
ggplot()+
geom_violin(data=df_subset_genes_TPM %>% filter(L1 == 'TCGA'), aes(x=factor(Var1, levels=names(sort(means_tcga_TPM[subset_genes]))),
y=value, col=L1))+
geom_point(data=df_subset_genes_TPM %>% filter(L1 == 'org'), aes(x=factor(Var1, levels=names(sort(means_tcga_TPM[subset_genes]))),
y=value, col=L1))+
scale_y_continuous(trans='log10')+theme_bw()+labs(x='Genes', y='TPM')
ggsave("../figures/Sensitive_resistant_figures/TPM_correlation_tcga_org_selected_genes.pdf", width = 14)
pdf("../figures/Sensitive_resistant_figures/colmeans_TPM_correlation_tcga_org.pdf")
plot(log(means_tcga_TPM), log(means_org_TPM), xlab='TPM from TCGA',ylab='TPM from organoids')
abline(coef=c(0,1), lty='dashed', col='blue')
dev.off()
cor(x = means_tcga_TPM[!(is.na(means_tcga_TPM) | is.na(means_org_TPM))], y = means_org_TPM[!(is.na(means_tcga_TPM) | is.na(means_org_TPM))])
table(df_subset_genes_TPM[df_subset_genes_TPM$L1 == 'org','Var2'])
table(droplevels(df_subset_genes_TPM[df_subset_genes_TPM$L1 == 'org','Var2']))
length(table(droplevels(df_subset_genes_TPM[df_subset_genes_TPM$L1 == 'org','Var2'])))
cor(x = means_tcga_TPM[!(is.na(means_tcga_TPM) | is.na(means_org_TPM))], y = means_org_TPM[!(is.na(means_tcga_TPM) | is.na(means_org_TPM))])
