genename_ensmid_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
genename_ensmid_matched
deseq_counts$Gene = genename_ensmid_matched
joint_counts_CN$CN.gene_name
joint_counts_CN$CN.L1
joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name)
paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name)
head(deseq_counts)
readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming
deseq_counts$DESEq.sample
match(gsub("[.]", "-", deseq_counts$DESEq.sample))
match(gsub("[.]", "-", deseq_counts$DESEq.sample), joint_counts_CN$CN.L1)
gsub("[.]", "-", deseq_counts$DESEq.sample)
joint_counts_CN$CN.L1
renaming
match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)
match(renaming$sampleNameRNAseq, gsub("[.]", "-", deseq_counts$DESEq.sample))
match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)
head(renaming)
renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
joint_counts_CN$CN.gene_name
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
paste0(deseq_counts$DESEq.sample)
paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)
match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene))
deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),]
dim(deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
dim(joint_counts_CN)
head(deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN = cbind.data.frame(joint_counts_CN, deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN[1,]
joint_counts_CN[4,]
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("~/Desktop/Vias/figures/joint_counts_CN_DESeq_all.pdf", width=10, height=10)
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("~/Desktop/Vias/figures/joint_counts_CN_DESeq_all_loglog.pdf", width=10, height=8)
pdf("~/Desktop/Vias/figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
topvariable = read.table("~/Desktop//Vias/top_variable.txt", comment.char = "#")
pdf("~/Desktop/Vias/figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
plot(joint_counts_CN$counts.value, joint_counts_CN$DESeq.count)
library(survival)
library(survival)
library(survminer)
library(lubridate)
library(dplyr)
library(ggplot2)
survival<-read.csv("../data/OrganoidSurvival.csv")
ggplot(data = survival) +
geom_bar(mapping = aes(x = PassageNumber,fill=Tissue))
# pdf("04022021_survival.pdf",height = 7, width =10)
s1 <- survfit(formula=Surv(CulturedTime, Death==1) ~Tissue, data = survival, conf.type = "log-log")
ggsurvplot(s1, conf=TRUE,legend.labs = c("Ascites", "Solid", "xenograft"), pval = TRUE, risk.table = TRUE)
# png("survivalRisk.png", height = 7, width =10)
s1 <- survfit(formula=Surv(CulturedTime, Death==1) ~Tissue, data = survival, conf.type = "log-log")
ggsurvplot(km.as.one, conf=TRUE,legend.labs = c("Ascites", "Solid", "xenograft"), pval = TRUE, risk.table = TRUE)
# png("survivalRisk.png", height = 7, width =10)
km.as.one <- survfit(formula=Surv(CulturedTime, Death==1) ~Tissue, data = survival, conf.type = "log-log")
ggsurvplot(km.as.one, conf=TRUE,legend.labs = c("Ascites", "Solid", "xenograft"), pval = TRUE, risk.table = TRUE)
summary(s1)
m <- coxph(formula=Surv(CulturedTime, Death==1)~Tissue, data=survival)
ggforest(m, data = survival)
summary(m)
anova(m)
# pdf("survivalCox.pdf", height = 7, width = 10)
survival %>% ggplot(aes(x = Tissue, y = CulturedTime)) + geom_boxplot(notch = TRUE, aes(colour = Tissue), alpha = 0.8) + geom_point(aes(colour = Tissue), position = position_jitterdodge()) + theme_bw() + labs(x = "Tissue type", y = "Time") + theme(text = element_text(size = 14, family = "sans"), axis.text = element_text(size = 12, family = "sans"), legend.position = "right") + stat_compare_means(method = "wilcox.test", comparisons = survival)+
stat_compare_means(label.y = 50)
library(readr)
library(tidyverse)
library(tidyverse)
library(dplyr)
library(cowplot)
micewlatest = read_csv("../data/19.08.2020_MiceW.csv")
micewlatest.df <- as.data.frame(micewlatest)
plot.micewlatest <- ggplot(micewlatest.df, aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 0.5) +
theme(axis.text.x = element_text(angle= 30, size = 5),strip.text.x = element_text(size = 8, colour = "red"))+
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight") +
facet_wrap(. ~ paste(pdo, mouseNumber), nrow = 2) +
panel_border()
micewlatest.df
plot.micewlatest <- ggplot(micewlatest.df, aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 0.5) +
theme(axis.text.x = element_text(angle= 30, size = 5),strip.text.x = element_text(size = 8, colour = "red"))+
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight") +
facet_wrap(. ~ paste(pdo, mouseNumber), nrow = 2) +
panel_border()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
save_plot("19.08.2020_micew.pdf", plot.micewlatest)
#plots individually
#PDO1
plot.PDO1 <- micewlatest.df %>%
filter(mouseNumber == "472") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 472") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 100)) + scale_y_log10()
plot.PDO1
save_plot("../figures/19.08.2020_micew.pdf", plot.micewlatest)
save_plot("../figures/19.08.2020_micew.pdf", plot.micewlatest)
#plots individually
#PDO1
plot.PDO1 <- micewlatest.df %>%
filter(mouseNumber == "472") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 472") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 100)) + scale_y_log10()
plot.PDO1
plot.PDO1
save_plot("../figures/PDO1.pdf", plot.PDO1)
#PDO2
plot.PDO2 <- micewlatest.df %>%
filter(mouseNumber == "475") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 475") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO2
save_plot("../figures/PDO2.pdf", plot.PDO2)
#PDO3
plot.PDO3 <- micewlatest.df %>%
filter(mouseNumber == "643") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 643") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO3
save_plot("../figures/PDO3.pdf", plot.PDO3)
#PDO4
plot.PDO4 <- micewlatest.df %>%
filter(mouseNumber == "642") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 642") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO4
save_plot("../figures/PDO4.pdf", plot.PDO4)
#PDO5
plot.PDO5 <- micewlatest.df %>%
filter(mouseNumber == "645") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 645") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO5
save_plot("../figures/PDO5.pdf", plot.PDO5)
#PDO8
plot.PDO8 <- micewlatest.df %>%
filter(mouseNumber == "466") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 466") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO8
save_plot("../figures/PDO8.pdf", plot.PDO8)
#PDO10
plot.PDO10 <- micewlatest.df %>%
filter(mouseNumber == "471") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 471") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO10
save_plot("../figures/PDO10.pdf", plot.PDO10)
#PDO12
plot.PDO12 <- micewlatest.df %>%
filter(mouseNumber == "468") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 468") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO12
save_plot("../figures/PDO12.pdf", plot.PDO12)
library(readr)
library(tidyverse)
library(dplyr)
library(cowplot)
micewlatest = read_csv("../data/19.08.2020_MiceW.csv")
micewlatest.df <- as.data.frame(micewlatest)
plot.micewlatest <- ggplot(micewlatest.df, aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 0.5) +
theme(axis.text.x = element_text(angle= 30, size = 5),strip.text.x = element_text(size = 8, colour = "red"))+
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight") +
facet_wrap(. ~ paste(pdo, mouseNumber), nrow = 2) +
panel_border()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
save_plot("../figures/19.08.2020_micew.pdf", plot.micewlatest)
#plots individually
#PDO1
plot.PDO1 <- micewlatest.df %>%
filter(mouseNumber == "472") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 472") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 100)) + scale_y_log10()
plot.PDO1
save_plot("../figures/PDO1.pdf", plot.PDO1)
#PDO2
plot.PDO2 <- micewlatest.df %>%
filter(mouseNumber == "475") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 475") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO2
save_plot("../figures/PDO2.pdf", plot.PDO2)
#PDO3
plot.PDO3 <- micewlatest.df %>%
filter(mouseNumber == "643") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 643") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO3
save_plot("../figures/PDO3.pdf", plot.PDO3)
#PDO4
plot.PDO4 <- micewlatest.df %>%
filter(mouseNumber == "642") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 642") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO4
save_plot("../figures/PDO4.pdf", plot.PDO4)
#PDO5
plot.PDO5 <- micewlatest.df %>%
filter(mouseNumber == "645") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 645") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO5
save_plot("../figures/PDO5.pdf", plot.PDO5)
#PDO8
plot.PDO8 <- micewlatest.df %>%
filter(mouseNumber == "466") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 466") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO8
save_plot("../figures/PDO8.pdf", plot.PDO8)
#PDO10
plot.PDO10 <- micewlatest.df %>%
filter(mouseNumber == "471") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 471") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO10
save_plot("../figures/PDO10.pdf", plot.PDO10)
#PDO12
plot.PDO12 <- micewlatest.df %>%
filter(mouseNumber == "468") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 468") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO12
save_plot("../figures/PDO12.pdf", plot.PDO12)
library(tidyverse)
library(readr)
PDS_PDO <- read_csv("../data/20191107-auc.csv")
View(X20191107_auc)
PDS_PDO$sample <- as.factor(PDS_PDO$sample)
PDS_PDO$sample <- as.factor(PDS_PDO$sample)
PDS_PDO.plot<- ggplot(data = PDS_PDO, aes(auc_ll5.sph, auc_ll5.org, colour = sample))+
geom_point() +
labs(x="Patient-derived spheroids", y="Patient-derived organoids")+
theme_classic() +
geom_smooth(method=lm, se=FALSE)
cor.test(PDS_PDO$auc_ll5.org, PDS_PDO$auc_ll5.sph, method = "pearson", conf.level = 0.95)
plot(PDS_PDO.plot)
passagesorganoids <- read_csv ("../data/AUCdifferentPassagesW.csv")
passagesorganoids$sample <- as.factor(passagesorganoids$sample)
passagesorganoids<-spread(passagesorganoids, key=passage, value=AUC)
passagesorganoid.plot<- ggplot(data = passagesorganoids, aes(early, late, colour = sample))+
geom_point() +
theme_classic() +
geom_smooth(method=lm)
plot(passagesorganoid.plot)
bioreporganoids <- read_csv ("../data/AUCbiolrepW.csv")
bioreporganoids$sample <- as.factor(bioreporganoids$sample)
bioreporganoids<-spread(bioreporganoids, key=replicate, value=AUC)
bioreporganoid.plot<- ggplot(data = bioreporganoids, aes(rep1, rep2, colour = sample))+
geom_point() +
theme_classic() +
geom_smooth(method=lm)
cor.test(bioreporganoids$rep1, bioreporganoids$rep2, method = "pearson", conf.level = 0.95)
plot(bioreporganoid.plot)
install.packages("googlesheets")
googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0")
remove.packages("googlesheets")
install.packages('gsheet')
library(gsheet)
gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file = gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
summary_file$`<!DOCTYPE html>`
summary_file = gsheet2text('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file = gsheet2text('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
summary_file = gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
xtable::xtable(summary_file)
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(rnaseqRpkg)
library(biomaRt)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(DESeq2)
library(reshape2)
## Load file output from DESeq2, which has been created with 1_run_DE.sh
load("../objects/deaObjectFile")
deObj = `~response`
##---------------------------------------------------------------------------------------------------------------##
## Run differential expression with DESeq
# In any case, the contrast argument of the function results takes a character vector of length three: the name of the variable, the name of the factor level for the numerator of the log2 ratio, and the name of the factor level for the denominator. The contrast argument can also take other forms, as described in the help page for results and below
results <- DESeq2::results(deObj, c("response", "complete_remission_or_response", "progressive_disease"),
alpha = 0.05, format = "DataFrame")
rownames_short = sapply(rownames(results), function(i) strsplit(i, '[.]')[[1]][1])
## Re-name
# mart <- useMart(biomart = "ensembl", dataset = "hsapiens_gene_ensembl")
# gene_conversion <- getBM(attributes = c("external_gene_name", "ensembl_gene_id"),
#                  filters = "ensembl_gene_id", values = rownames_short,
#                  mart = mart)
# gene_conversion = gene_conversion[match(rownames_short, gene_conversion$ensembl_gene_id),]
t2g = readRDS("~/Desktop/t2g.RDS")
gene_conversion = t2g[match(rownames_short, t2g$ensembl_gene_id),]
dim(gene_conversion)
dim(results)
results = cbind(gene_conversion, results)
results = results[order(results$log2FoldChange),]
highDA = results[1:20,]
lowDA = highDA[nrow(highDA):(nrow(highDA)-20),]
ggplot(cbind.data.frame(log2fc= results$log2FoldChange, pval=-log10(results$padj)))+
geom_point(aes(x=log2fc, y=pval))
vlcano = function (res) {
df <- data.frame(labls = res$external_gene_name, lfc = res$log2FoldChange, pv = -log10(res$padj),
isDE = ifelse(is.na(res$padj), FALSE, res$padj < 0.05))
colNonSig <- "gray32"
colSig <- "red3"
colOut <- "blue"
dotShape <- 20
upShape <- 24
outShape <- 19
xlim <- c(-1, 1) * quantile(abs(df$lfc[is.finite(df$lfc)]),
probs = 0.995) * 1.1
ylim <- c(0, quantile(df$pv[is.finite(df$pv)], probs = 0.995) *
1.1)
df$vy <- pmin(df$pv, ylim[2])
df$vx <- pmax(xlim[1], pmin(xlim[2], df$lfc))
df$outY <- df$pv > ylim[2]
df$outX <- df$lfc < xlim[1] | df$lfc > xlim[2]
df$outXY <- df$outX & df$outY
dfNonSig <- df[!df$isDE, ]
dfNonSig$vy[is.na(dfNonSig$vy)] = 0
dfSigInlier <- df[df$isDE & !df$outX & !df$outY, ]
dfSigOutlier <- df[df$isDE & (df$outX | df$outY), ]
dfSigOutlier$shape <- ifelse(dfSigOutlier$outXY, outShape,
ifelse(dfSigOutlier$outY, upShape, dotShape))
p <- ggplot() +
geom_point(data = dfNonSig, aes(x = .data$vx,   y = .data$vy),
colour = colNonSig, pch = dotShape) +
geom_point(data = dfSigInlier, aes(x = .data$vx, y = .data$vy),
colour = colSig, shape = dotShape) +
ggrepel::geom_label_repel(data=dfSigInlier, aes(x=  .data$vx, y = .data$vy, label=labls))+
geom_point(data = dfSigOutlier,  aes(x = .data$vx, y = .data$vy),
colour = colOut, shape = dfSigOutlier$shape) +
ggrepel::geom_label_repel(data=dfSigOutlier, aes(x=  .data$vx, y = .data$vy, label=labls))+
theme(legend.position = "none") + ggtitle("Volcano Plot") +
labs(x = "Log of Fold Change", y = "-log10 of FDR")+
ylim(c(0, 1.8))
return(p)
}
vlcano(results)
ggsave("../figures/Sensitive_resistant_figures/volcano_plot.pdf", width = 20, height = 20)
## save results in a different format
for(flename in c('differential_all', 'differential_sig')){
dif_all = read.table(paste0("../objects/", flename), sep = ",", header = TRUE, stringsAsFactors = FALSE)
# if(flename == "differential_all"){
dif_all = cbind(gene_conversion$external_gene_name, dif_all[match(gene_conversion$ensembl_gene_id, sapply(dif_all$X, function(i) strsplit(i, '[.]')[[1]][1])  ),])
dif_all = dif_all[!is.na(dif_all$X),]
# }else if(flename == "differential_sig"){
#   dif_all = cbind(gene_conversion$external_gene_name, dif_all[match(gene_conversion$ensembl_gene_id, sapply(dif_all$X, function(i) strsplit(i, '[.]')[[1]][1])
#   ),])
# }
write.table(x = dif_all, file = paste0("../files/", flename, ".csv"), sep = ",", quote = FALSE)
}
##---------------------------------------------------------------------------------------------------------------##
##---------------------------------------------------------------------------------------------------------------##
## Here I am comparing the TCGA DE and the organoid DE for sensitive vs resistant
DE_results_TCGA = read.table("../objects/differential_all", sep = ',', header = T)
## Load the organoids DE
load("../files/deObject_SampleGroup_sensitive_vs_resistant.RData")
## e.g. JBLAB-19920 is PDO18 and has been excluded based on 3' bias
"JBLAB-19920" %in% colnames(SampleGroup)
length(colnames(SampleGroup)) ## 3' bias have been excluded
## but I am not sure why there are 14 instead of 15
"JBLAB-19939" %in% colnames(SampleGroup) ## the fourth sample with highest 3' bias
DE_results_org = DESeq2::results(SampleGroup)
DE_results_org
plot(DE_results_TCGA$log2FoldChange, -log(DE_results_TCGA$padj), cex=.1, pch=19)
ggplot(droplevels(DE_results_TCGA), aes(x=log2FoldChange, y=-log(padj)))+geom_point(size=0.1)+
lims(y=c(0, 1.5), x=c(-2.5,2.5))
all_DE = cbind.data.frame(TCGA=DE_results_TCGA[match(rownames(DE_results_org), gsub("[.].*", "", DE_results_TCGA$X)),],
org=DE_results_org, gene=rownames(DE_results_org))
all_DE$GeneName=t2g$external_gene_name[match(gsub("[.].*", "", all_DE$TCGA.X), t2g$ensembl_gene_id)]
head(all_DE)
plot(all_DE$TCGA.log2FoldChange, all_DE$org.log2FoldChange)
plot(all_DE$TCGA.padj, all_DE$org.padj)
tier1 = read.table("../files/Census_allFri Feb 12 09 56 06 2021.tsv", sep = "\t", header = TRUE)
tier1$ensembl = sapply(tier1$Synonyms, function(i) gsub("[.].*", "", strsplit(i, ',')[[1]][2]))
ggplot(all_DE, aes(x=TCGA.log2FoldChange, y=org.log2FoldChange))+geom_point(alpha=0.2)
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_log2FC.pdf")
ggplot(all_DE %>% filter(abs(TCGA.log2FoldChange) > quantile(abs(all_DE$TCGA.log2FoldChange), probs = c(.9), na.rm = T)),
aes(x=TCGA.log2FoldChange, y=org.log2FoldChange, label=GeneName))+geom_point(alpha=0.2)+geom_label_repel()
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_log2FC_onlyhighDE.pdf")
ggplot(all_DE %>% filter(gene %in% tier1$ensembl), aes(x=TCGA.log2FoldChange, y=org.log2FoldChange))+geom_point(alpha=0.2)
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_log2FC_onlytier1.pdf")
ggplot(all_DE %>% filter( (TCGA.padj  < 0.001) | (org.padj  < 0.001) ),
aes(x=TCGA.log2FoldChange, y=org.log2FoldChange, label=paste0(signif(TCGA.padj, 3), ' - ', signif(org.padj, 3))))+
geom_point(alpha=0.2)+geom_label_repel()
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_log2FC_onlylowpval.pdf")
ggplot(all_DE, aes(x=TCGA.padj, y=org.padj))+geom_point(alpha=0.2)
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_pvals.pdf")
##---------------------------------------------------------------------------------------------------------------##
##---------------------------------------------------------------------------------------------------------------##
## not look at differential abundance, but simply at gene expression and whether it correlates
## counts for organoids
counts_DESeq_org = read.table("../files/counts_norm.csv", sep = ",", header=T, stringsAsFactors = FALSE)
apply(counts_DESeq_org, 2, function(i) as.numeric(i))
rownames(counts_DESeq_org) = counts_DESeq_org[,1]; counts_DESeq_org = counts_DESeq_org[,-1]
colnames(counts_DESeq_org) ## we have more than 18 because we also have normal samples
## Remove the organoids that have a 3' bias, and the normal samples
## PDO14 (JBLAB-19925) PDO16 (JBLAB-19936) PDO18 (JBLAB-19920) and normal (JBLAB-19950, JBLAB-19953, JBLAB-19952
## JBLAB-19954, JBLAB-19955, JBLAB-19951)
counts_DESeq_org = counts_DESeq_org[,!(colnames(counts_DESeq_org) %in% c('JBLAB.19925', 'JBLAB.19936', 'JBLAB.19920', 'JBLAB.19950',
'JBLAB.19953', 'JBLAB.19952',
'JBLAB.19954', 'JBLAB.19955', 'JBLAB.19951'))]
list_to_df = function(a){
.x = apply(a, 2, function(i) as.numeric(i))
rownames(.x) = rownames(a); colnames(.x) = colnames(a)
return(.x)
}
counts_DESeq_org = list_to_df(counts_DESeq_org)
## counts for TCGA
counts_DESeq_TCGA = DESeq2::counts(deObj, normalized=TRUE)
counts_DESeq_TCGA_raw = DESeq2::counts(deObj, normalized=FALSE)
rownames(counts_DESeq_TCGA) = gsub("[.].*", "", rownames(counts_DESeq_TCGA))
rownames(counts_DESeq_TCGA) == rownames(counts_DESeq_org)
## why the difference?
length(rownames(counts_DESeq_org))
length(rownames(counts_DESeq_TCGA))
counts_DESeq_TCGA = counts_DESeq_TCGA[match(rownames(counts_DESeq_org), rownames(counts_DESeq_TCGA)),]
length(rownames(counts_DESeq_org))
length(rownames(counts_DESeq_TCGA))
rownames(counts_DESeq_TCGA) = rownames(counts_DESeq_org) = make.names(gene_conversion$external_gene_name[match(rownames(counts_DESeq_org), gene_conversion$ensembl_gene_id)], unique = T)
subset_genes = c('MYC', 'CCNE1', 'PIK3CA', 'TERT', 'KRAS', 'PTEN', 'RB1', 'AKT1',
'AKT2', 'PARP1', 'PARP2', 'ATM', 'ATR', 'WEE1', 'TOP1', 'TUBB1',
'AKT3', 'CCND1', 'CCND2', 'CCND3', 'CDKN2A', 'CDKN2B', 'MECOM', 'CDK12')
df_all_genes <- melt(list(TCGA=counts_DESeq_TCGA,
org=counts_DESeq_org))
df_subset_genes <- melt(list(TCGA=counts_DESeq_TCGA[rownames(counts_DESeq_TCGA) %in% subset_genes,],
org=counts_DESeq_org[rownames(counts_DESeq_org) %in% subset_genes,]))
ggplot(df_all_genes, aes(y=value, x=L1))+geom_boxplot()+geom_jitter()
means_tcga <- rowMeans(counts_DESeq_TCGA)
means_org <- rowMeans(counts_DESeq_org)
plot(log(means_tcga), log(means_org), xlab='DESeq normalised counts from TCGA',ylab='DESeq normalised counts from organoids')
abline(coef=c(0,1), lty='dashed', col='blue')
dev.off()
plot(log(means_tcga), log(means_org), xlab='DESeq normalised counts from TCGA',ylab='DESeq normalised counts from organoids')
counts_DESeq_TCGA
dim(counts_DESeq_TCGA)
dim(counts_DESeq_org)
length(means_tcga)
