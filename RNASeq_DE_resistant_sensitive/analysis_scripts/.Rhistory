geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 642") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO4
save_plot("../figures/PDO4.pdf", plot.PDO4)
#PDO5
plot.PDO5 <- micewlatest.df %>%
filter(mouseNumber == "645") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 645") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO5
save_plot("../figures/PDO5.pdf", plot.PDO5)
#PDO8
plot.PDO8 <- micewlatest.df %>%
filter(mouseNumber == "466") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 466") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO8
save_plot("../figures/PDO8.pdf", plot.PDO8)
#PDO10
plot.PDO10 <- micewlatest.df %>%
filter(mouseNumber == "471") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 471") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO10
save_plot("../figures/PDO10.pdf", plot.PDO10)
#PDO12
plot.PDO12 <- micewlatest.df %>%
filter(mouseNumber == "468") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 468") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO12
save_plot("../figures/PDO12.pdf", plot.PDO12)
library(readr)
library(tidyverse)
library(dplyr)
library(cowplot)
micewlatest = read_csv("../data/19.08.2020_MiceW.csv")
micewlatest.df <- as.data.frame(micewlatest)
plot.micewlatest <- ggplot(micewlatest.df, aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 0.5) +
theme(axis.text.x = element_text(angle= 30, size = 5),strip.text.x = element_text(size = 8, colour = "red"))+
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight") +
facet_wrap(. ~ paste(pdo, mouseNumber), nrow = 2) +
panel_border()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
save_plot("../figures/19.08.2020_micew.pdf", plot.micewlatest)
#plots individually
#PDO1
plot.PDO1 <- micewlatest.df %>%
filter(mouseNumber == "472") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 472") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 100)) + scale_y_log10()
plot.PDO1
save_plot("../figures/PDO1.pdf", plot.PDO1)
#PDO2
plot.PDO2 <- micewlatest.df %>%
filter(mouseNumber == "475") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 475") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO2
save_plot("../figures/PDO2.pdf", plot.PDO2)
#PDO3
plot.PDO3 <- micewlatest.df %>%
filter(mouseNumber == "643") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 643") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO3
save_plot("../figures/PDO3.pdf", plot.PDO3)
#PDO4
plot.PDO4 <- micewlatest.df %>%
filter(mouseNumber == "642") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 642") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO4
save_plot("../figures/PDO4.pdf", plot.PDO4)
#PDO5
plot.PDO5 <- micewlatest.df %>%
filter(mouseNumber == "645") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 645") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO5
save_plot("../figures/PDO5.pdf", plot.PDO5)
#PDO8
plot.PDO8 <- micewlatest.df %>%
filter(mouseNumber == "466") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 466") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO8
save_plot("../figures/PDO8.pdf", plot.PDO8)
#PDO10
plot.PDO10 <- micewlatest.df %>%
filter(mouseNumber == "471") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 471") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO10
save_plot("../figures/PDO10.pdf", plot.PDO10)
#PDO12
plot.PDO12 <- micewlatest.df %>%
filter(mouseNumber == "468") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 468") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO12
save_plot("../figures/PDO12.pdf", plot.PDO12)
library(tidyverse)
library(readr)
PDS_PDO <- read_csv("../data/20191107-auc.csv")
View(X20191107_auc)
PDS_PDO$sample <- as.factor(PDS_PDO$sample)
PDS_PDO$sample <- as.factor(PDS_PDO$sample)
PDS_PDO.plot<- ggplot(data = PDS_PDO, aes(auc_ll5.sph, auc_ll5.org, colour = sample))+
geom_point() +
labs(x="Patient-derived spheroids", y="Patient-derived organoids")+
theme_classic() +
geom_smooth(method=lm, se=FALSE)
cor.test(PDS_PDO$auc_ll5.org, PDS_PDO$auc_ll5.sph, method = "pearson", conf.level = 0.95)
plot(PDS_PDO.plot)
passagesorganoids <- read_csv ("../data/AUCdifferentPassagesW.csv")
passagesorganoids$sample <- as.factor(passagesorganoids$sample)
passagesorganoids<-spread(passagesorganoids, key=passage, value=AUC)
passagesorganoid.plot<- ggplot(data = passagesorganoids, aes(early, late, colour = sample))+
geom_point() +
theme_classic() +
geom_smooth(method=lm)
plot(passagesorganoid.plot)
bioreporganoids <- read_csv ("../data/AUCbiolrepW.csv")
bioreporganoids$sample <- as.factor(bioreporganoids$sample)
bioreporganoids<-spread(bioreporganoids, key=replicate, value=AUC)
bioreporganoid.plot<- ggplot(data = bioreporganoids, aes(rep1, rep2, colour = sample))+
geom_point() +
theme_classic() +
geom_smooth(method=lm)
cor.test(bioreporganoids$rep1, bioreporganoids$rep2, method = "pearson", conf.level = 0.95)
plot(bioreporganoid.plot)
install.packages("googlesheets")
googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0")
remove.packages("googlesheets")
install.packages('gsheet')
library(gsheet)
gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file = gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
summary_file$`<!DOCTYPE html>`
summary_file = gsheet2text('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file = gsheet2text('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
summary_file = gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
xtable::xtable(summary_file)
require(GSVA)
require(GSVAdata)
c2BroadSets
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
data(c2BroadSets) ## from GSVAdata
c2BroadSets
c2BroadSets$NAKAMURA_CANCER_MICROENVIRONMENT_UP
c2BroadSets
c2BroadSets$NAKAMURA_CANCER_MICROENVIRONMENT_DN
names(c2BroadSets)
names(c2BroadSets)[grep('microenvironment', names(c2BroadSets))]
View(names(c2BroadSets))
vignette(gsvaData)
vignette("gsvaData")
vignette("GSVAData")
vignette
vignette("GSVAdata")
?GSVAdata
#--------------------------------------------------------------------------------#
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(ggrepel)
library(reshape2)
library(readxl)
require(jcolors)
library(biomaRt)
require(GSVA)
require(GSVAdata)
library(lsa) ## for cosine similarity
source("other_scripts/functions.R")
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
normalised_counts = read.csv("../files/counts_norm.csv", stringsAsFactors = FALSE)
rownames(normalised_counts) = normalised_counts[,1]
normalised_counts = normalised_counts[,-1]
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
# Renaming
renaming1 = read_excel("../files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming_NC = renaming1[match( gsub('[.]', '', colnames(normalised_counts)), gsub('-', '', renaming1$sampleNameRNAseq)),]
colnames(normalised_counts)[!is.na(renaming_NC$PDO)] = renaming_NC$PDO[!is.na(renaming_NC$PDO)]
colnames(normalised_counts)
## Remove normal samples
normalised_counts = normalised_counts[,!grepl('FT', colnames(normalised_counts))]
normalised_counts = normalised_counts[rowSums(normalised_counts)>0,]
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
## 3' bias
bias3prime = read_xlsx("../files/PDOnameProperSample_sWGS_RNAseq_3bias.xlsx")
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
prcomp_normalisedcounts = prcomp(t(normalised_counts), scale. = TRUE, center = TRUE)
eigs_normalisedcounts <- prcomp_normalisedcounts$sdev^2
round(eigs_normalisedcounts/sum(eigs_normalisedcounts)*100)
ggplot(cbind.data.frame(prcomp_normalisedcounts$x,
col=bias3prime$`3'Bias`[match(rownames(prcomp_normalisedcounts$x),bias3prime$PDO)],
label=rownames(prcomp_normalisedcounts$x)),
aes(x=PC1, y=PC2, col=col, label=label))+
geom_label_repel()+
geom_point()
ggsave("../figures/PCA_RNASeq/3primebias_PCA_counts.pdf", width = 6.5, height = 5)
ggplot(cbind.data.frame(prcomp_normalisedcounts$x,
col=bias3prime$`3'Bias`[match(rownames(prcomp_normalisedcounts$x),bias3prime$PDO)],
label=rownames(prcomp_normalisedcounts$x),
pc1=prcomp_normalisedcounts$x[,1]),
aes(x=factor(label, levels=bias3prime$PDO[order(bias3prime$`3'Bias`)]),
y=col, fill=pc1))+
geom_bar(stat = "identity")
ggsave("../figures/PCA_RNASeq/3primebias_barplot_counts.pdf", width = 9.5, height = 5)
rm(prcomp_normalisedcounts)
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
## Removing samples with 3' bias
normalised_counts = normalised_counts[,!(colnames(normalised_counts) %in% c('PDO14', 'PDO16', 'PDO18'))]
normalised_counts = normalised_counts[rowSums(normalised_counts)>0,]
prcomp_normalisedcounts = prcomp(t(normalised_counts), scale. = TRUE, center = TRUE)
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
## TAMSeq
TAMSeq = read_xlsx("../files/SupplementaryTable1.xlsx")
TAMSeq[,'org'] = renaming1$PDO[match(TAMSeq$name, renaming1$ID)]
TAMSeq = dcast(TAMSeq[,c(8, 20)], org~`Symbol (Gene ID)`)
TAMSeq = TAMSeq[match(colnames(normalised_counts), TAMSeq$org),]
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
genes <- TPM$gene_id
t2g <- getBM(
attributes = c('ensembl_gene_id', 'entrezgene_id', 'external_gene_name'),
values = rownames(normalised_counts),
filter = 'ensembl_gene_id',
mart = mart, useCache = FALSE)
entrezgene_id_matched_normalisedcounts = t2g[match(rownames(normalised_counts), t2g$ensembl_gene_id),'entrezgene_id']
naming_id_matched_normalisedcounts = t2g[match(rownames(normalised_counts), t2g$ensembl_gene_id),]
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
data(c2BroadSets) ## from GSVAdata
#--------------------------------------------------------------------------------#
## same with normalised counts
TPM_data_entrez_NC = normalised_counts[!is.na(entrezgene_id_matched_normalisedcounts),]
entrezgene_id_matched_normalisedcounts = entrezgene_id_matched_normalisedcounts[!is.na(entrezgene_id_matched_normalisedcounts)]
TPM_data_entrez_NC = TPM_data_entrez_NC[!duplicated(entrezgene_id_matched_normalisedcounts),]
entrezgene_id_matched_normalisedcounts = entrezgene_id_matched_normalisedcounts[!duplicated(entrezgene_id_matched_normalisedcounts)]
rownames(TPM_data_entrez_NC) = entrezgene_id_matched_normalisedcounts
results_Gsva_counts <- gsva(expr = as(TPM_data_entrez_NC, 'matrix'), gset.idx.list = c2BroadSets, min.sz=10, max.sz=500, verbose=TRUE)
pca_with_gsva_annotation_NC = cbind.data.frame(prcomp_normalisedcounts$x, t(results_Gsva_counts[,match(colnames(results_Gsva_counts), rownames(prcomp_normalisedcounts$x))]),
labels=rownames(prcomp_normalisedcounts$x),
TAMSeq)
ggplot(pca_with_gsva_annotation_NC, aes(x=PC1, y=PC2, col=KAUFFMANN_DNA_REPAIR_GENES, label=labels))+
geom_point()+
geom_label_repel()+
scale_color_jcolors_contin("pal3", reverse = TRUE)+labs(col = "Threshold", shape="Amount")+
ggtitle('KAUFFMANN_DNA_REPAIR_GENES')
ggsave("../figures/PCA_RNASeq/PCA_counts_subset_KAUFFMANN_DNA_REPAIR_GENES.png", width = 6.5, height = 5)
ggplot(pca_with_gsva_annotation_NC, aes(x=PC1, y=PC2, col=OUELLET_CULTURED_OVARIAN_CANCER_INVASIVE_VS_LMP_UP, label=labels))+
geom_point()+
geom_label_repel()+
scale_color_jcolors_contin("pal3", reverse = TRUE, bias = 2.25)+labs(col = "Threshold", shape="Amount")+
ggtitle('OUELLET_CULTURED_OVARIAN_CANCER_INVASIVE_VS_LMP_UP')
ggsave("../figures/PCA_RNASeq/PCA_counts_subset_OUELLET_CULTURED_OVARIAN_CANCER_INVASIVE_VS_LMP_UP.png", width = 6.5, height = 5)
saveRDS(pca_with_gsva_annotation_NC, "../objects/fig4_pca_with_gsva_annotation_NC.RDS")
means_tcga
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(rnaseqRpkg)
library(biomaRt)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(DESeq2)
library(reshape2)
## Load file output from DESeq2, which has been created with 1_run_DE.sh
load("../objects/deaObjectFile")
deObj = `~response`
##---------------------------------------------------------------------------------------------------------------##
## Run differential expression with DESeq
# In any case, the contrast argument of the function results takes a character vector of length three: the name of the variable, the name of the factor level for the numerator of the log2 ratio, and the name of the factor level for the denominator. The contrast argument can also take other forms, as described in the help page for results and below
# results <- DESeq2::results(deObj, c("response", "complete_remission_or_response", "progressive_disease"),
#                   alpha = 0.05, format = "DataFrame")
# saveRDS(results, file = "../objects/resultsDESeq_TCGA.RDS")
results <- readRDS("../objects/resultsDESeq_TCGA.RDS")
rownames_short = sapply(rownames(results), function(i) strsplit(i, '[.]')[[1]][1])
## Re-name
# mart <- useMart(biomart = "ensembl", dataset = "hsapiens_gene_ensembl")
# gene_conversion <- getBM(attributes = c("external_gene_name", "ensembl_gene_id", "entrezgene_id"),
#                  filters = "ensembl_gene_id", values = rownames_short,
#                  mart = mart)
# gene_conversion = gene_conversion[match(rownames_short, gene_conversion$ensembl_gene_id),]
saveRDS(object = gene_conversion, file = "~/Desktop/t2g2.RDS")
t2g = readRDS("~/Desktop/t2g2.RDS")
# t2g = readRDS("~/Desktop/t2g.RDS")
gene_conversion = t2g[match(rownames_short, t2g$ensembl_gene_id),]
dim(gene_conversion)
dim(results)
results = cbind(gene_conversion, results)
results = results[order(results$log2FoldChange),]
highDA = results[1:20,]
lowDA = highDA[nrow(highDA):(nrow(highDA)-20),]
ggplot(cbind.data.frame(log2fc= results$log2FoldChange, pval=-log10(results$padj)))+
geom_point(aes(x=log2fc, y=pval))
vlcano = function (res) {
df <- data.frame(labls = res$external_gene_name, lfc = res$log2FoldChange, pv = -log10(res$padj),
isDE = ifelse(is.na(res$padj), FALSE, res$padj < 0.05))
colNonSig <- "gray32"
colSig <- "red3"
colOut <- "blue"
dotShape <- 20
upShape <- 24
outShape <- 19
xlim <- c(-1, 1) * quantile(abs(df$lfc[is.finite(df$lfc)]),
probs = 0.995) * 1.1
ylim <- c(0, quantile(df$pv[is.finite(df$pv)], probs = 0.995) *
1.1)
df$vy <- pmin(df$pv, ylim[2])
df$vx <- pmax(xlim[1], pmin(xlim[2], df$lfc))
df$outY <- df$pv > ylim[2]
df$outX <- df$lfc < xlim[1] | df$lfc > xlim[2]
df$outXY <- df$outX & df$outY
dfNonSig <- df[!df$isDE, ]
dfNonSig$vy[is.na(dfNonSig$vy)] = 0
dfSigInlier <- df[df$isDE & !df$outX & !df$outY, ]
dfSigOutlier <- df[df$isDE & (df$outX | df$outY), ]
dfSigOutlier$shape <- ifelse(dfSigOutlier$outXY, outShape,
ifelse(dfSigOutlier$outY, upShape, dotShape))
p <- ggplot() +
geom_point(data = dfNonSig, aes(x = .data$vx,   y = .data$vy),
colour = colNonSig, pch = dotShape) +
geom_point(data = dfSigInlier, aes(x = .data$vx, y = .data$vy),
colour = colSig, shape = dotShape) +
ggrepel::geom_label_repel(data=dfSigInlier, aes(x=  .data$vx, y = .data$vy, label=labls))+
geom_point(data = dfSigOutlier,  aes(x = .data$vx, y = .data$vy),
colour = colOut, shape = dfSigOutlier$shape) +
ggrepel::geom_label_repel(data=dfSigOutlier, aes(x=  .data$vx, y = .data$vy, label=labls))+
theme(legend.position = "none") + ggtitle("Volcano Plot") +
labs(x = "Log of Fold Change", y = "-log10 of FDR")+
ylim(c(0, 1.8))
return(p)
}
vlcano(results)
ggsave("../figures/Sensitive_resistant_figures/volcano_plot.pdf", width = 20, height = 20)
## save results in a different format
for(flename in c('differential_all', 'differential_sig')){
dif_all = read.table(paste0("../objects/", flename), sep = ",", header = TRUE, stringsAsFactors = FALSE)
# if(flename == "differential_all"){
dif_all = cbind(gene_conversion$external_gene_name, dif_all[match(gene_conversion$ensembl_gene_id, sapply(dif_all$X, function(i) strsplit(i, '[.]')[[1]][1])  ),])
dif_all = dif_all[!is.na(dif_all$X),]
# }else if(flename == "differential_sig"){
#   dif_all = cbind(gene_conversion$external_gene_name, dif_all[match(gene_conversion$ensembl_gene_id, sapply(dif_all$X, function(i) strsplit(i, '[.]')[[1]][1])
#   ),])
# }
write.table(x = dif_all, file = paste0("../files/", flename, ".csv"), sep = ",", quote = FALSE)
}
##---------------------------------------------------------------------------------------------------------------##
##---------------------------------------------------------------------------------------------------------------##
## Here I am comparing the TCGA DE and the organoid DE for sensitive vs resistant
DE_results_TCGA = read.table("../objects/differential_all", sep = ',', header = T)
## Load the organoids DE
load("../files/deObject_SampleGroup_sensitive_vs_resistant.RData")
## e.g. JBLAB-19920 is PDO18 and has been excluded based on 3' bias
"JBLAB-19920" %in% colnames(SampleGroup)
length(colnames(SampleGroup)) ## 3' bias have been excluded. No!!! one has been left
## but I am not sure why there are 14 instead of 15
"JBLAB-19939" %in% colnames(SampleGroup) ## the fourth sample with highest 3' bias
# remove_na = function(i)i[!is.na(i)]
# SampleGroup <- SampleGroup[,-remove_na(match(c('JBLAB-19920', 'JBLAB-19925', 'JBLAB-19936'), SampleGroup$SampleName))]
# SampleGroup = DESeq2::DESeq(SampleGroup)
# DE_results_org = DESeq2::results(SampleGroup)
# saveRDS(DE_results_org, file = "../objects/resultsDESeq_org.RDS")
DE_results_org <- readRDS("../objects/resultsDESeq_org.RDS")
# saveRDS(SampleGroup, file = "../objects/SampleGroup_org_no3primebias.RDS")
SampleGroup <- readRDS("../objects/SampleGroup_org_no3primebias.RDS")
DE_results_org
plot(DE_results_TCGA$log2FoldChange, -log(DE_results_TCGA$padj), cex=.1, pch=19)
ggplot(droplevels(DE_results_TCGA), aes(x=log2FoldChange, y=-log(padj)))+geom_point(size=0.1)+
lims(y=c(0, 1.5), x=c(-2.5,2.5))
all_DE = cbind.data.frame(TCGA=DE_results_TCGA[match(rownames(DE_results_org), gsub("[.].*", "", DE_results_TCGA$X)),],
org=DE_results_org, gene=rownames(DE_results_org))
all_DE$GeneName=t2g$external_gene_name[match(gsub("[.].*", "", all_DE$TCGA.X), t2g$ensembl_gene_id)]
head(all_DE)
plot(all_DE$TCGA.log2FoldChange, all_DE$org.log2FoldChange)
plot(all_DE$TCGA.padj, all_DE$org.padj)
tier1 = read.table("../files/Census_allFri Feb 12 09 56 06 2021.tsv", sep = "\t", header = TRUE)
tier1$ensembl = sapply(tier1$Synonyms, function(i) gsub("[.].*", "", strsplit(i, ',')[[1]][2]))
ggplot(all_DE, aes(x=TCGA.log2FoldChange, y=org.log2FoldChange))+geom_point(alpha=0.2)
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_log2FC.pdf")
ggplot(all_DE %>% filter(abs(TCGA.log2FoldChange) > quantile(abs(all_DE$TCGA.log2FoldChange), probs = c(.9), na.rm = T)),
aes(x=TCGA.log2FoldChange, y=org.log2FoldChange, label=GeneName))+geom_point(alpha=0.2)+geom_label_repel()
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_log2FC_onlyhighDE.pdf")
ggplot(all_DE %>% filter(gene %in% tier1$ensembl), aes(x=TCGA.log2FoldChange, y=org.log2FoldChange))+geom_point(alpha=0.2)
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_log2FC_onlytier1.pdf")
ggplot(all_DE %>% filter( (TCGA.padj  < 0.001) | (org.padj  < 0.001) ),
aes(x=TCGA.log2FoldChange, y=org.log2FoldChange, label=paste0(signif(TCGA.padj, 3), ' - ', signif(org.padj, 3))))+
geom_point(alpha=0.2)+geom_label_repel()
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_log2FC_onlylowpval.pdf")
ggplot(all_DE, aes(x=TCGA.padj, y=org.padj))+geom_point(alpha=0.2)
ggsave("../figures/Sensitive_resistant_figures/tcga_org_comparison_pvals.pdf")
##---------------------------------------------------------------------------------------------------------------##
##---------------------------------------------------------------------------------------------------------------##
## not look at differential abundance, but simply at gene expression and whether it correlates
## counts for organoids
counts_DESeq_org = read.table("../files/counts_norm.csv", sep = ",", header=T, stringsAsFactors = FALSE)
apply(counts_DESeq_org, 2, function(i) as.numeric(i))
rownames(counts_DESeq_org) = counts_DESeq_org[,1]; counts_DESeq_org = counts_DESeq_org[,-1]
colnames(counts_DESeq_org) ## we have more than 18 because we also have normal samples
## Remove the organoids that have a 3' bias, and the normal samples
## PDO14 (JBLAB-19925) PDO16 (JBLAB-19936) PDO18 (JBLAB-19920) and normal (JBLAB-19950, JBLAB-19953, JBLAB-19952
## JBLAB-19954, JBLAB-19955, JBLAB-19951)
counts_DESeq_org = counts_DESeq_org[,!(colnames(counts_DESeq_org) %in% c('JBLAB.19925', 'JBLAB.19936', 'JBLAB.19920', 'JBLAB.19950',
'JBLAB.19953', 'JBLAB.19952',
'JBLAB.19954', 'JBLAB.19955', 'JBLAB.19951'))]
list_to_df = function(a){
.x = apply(a, 2, function(i) as.numeric(i))
rownames(.x) = rownames(a); colnames(.x) = colnames(a)
return(.x)
}
counts_DESeq_org = list_to_df(counts_DESeq_org)
## counts for TCGA
counts_DESeq_TCGA = DESeq2::counts(deObj, normalized=TRUE)
counts_DESeq_TCGA_raw = DESeq2::counts(deObj, normalized=FALSE)
rownames(counts_DESeq_TCGA) = gsub("[.].*", "", rownames(counts_DESeq_TCGA))
rownames(counts_DESeq_TCGA) == rownames(counts_DESeq_org)
## why the difference?
length(rownames(counts_DESeq_org))
length(rownames(counts_DESeq_TCGA))
counts_DESeq_TCGA = counts_DESeq_TCGA[match(rownames(counts_DESeq_org), rownames(counts_DESeq_TCGA)),]
length(rownames(counts_DESeq_org))
length(rownames(counts_DESeq_TCGA))
rownames(counts_DESeq_TCGA) = rownames(counts_DESeq_org) = make.names(gene_conversion$external_gene_name[match(rownames(counts_DESeq_org), gene_conversion$ensembl_gene_id)], unique = T)
subset_genes = c('MYC', 'CCNE1', 'PIK3CA', 'TERT', 'KRAS', 'PTEN', 'RB1', 'AKT1',
'AKT2', 'PARP1', 'PARP2', 'ATM', 'ATR', 'WEE1', 'TOP1', 'TUBB1',
'AKT3', 'CCND1', 'CCND2', 'CCND3', 'CDKN2A', 'CDKN2B', 'MECOM', 'CDK12')
df_all_genes <- melt(list(TCGA=counts_DESeq_TCGA,
org=counts_DESeq_org))
df_subset_genes <- melt(list(TCGA=counts_DESeq_TCGA[rownames(counts_DESeq_TCGA) %in% subset_genes,],
org=counts_DESeq_org[rownames(counts_DESeq_org) %in% subset_genes,]))
ggplot(df_all_genes, aes(y=value, x=L1))+geom_boxplot()+geom_jitter()
means_tcga <- rowMeans(counts_DESeq_TCGA)
means_org <- rowMeans(counts_DESeq_org)
ConsensusTMB_OV = read.table("https://raw.githubusercontent.com/cansysbio/ConsensusTME/master/Consensus_Signatures/OV_Consensus_Signatures.txt", header = T)
genes_TMB_OV = unique(unlist(ConsensusTMB_OV))
colours_TME_tcga_org_cor = match(names(means_tcga), genes_TMB_OV)
colours_TME_tcga_org_cor[!is.na(colours_TME_tcga_org_cor)] = 'TME'
colours_TME_tcga_org_cor[is.na(colours_TME_tcga_org_cor)] = 'Other'
df_colmeans_deseqcounts_correlation_tcga_org <- cbind.data.frame(means_tcga, means_org, TME=colours_TME_tcga_org_cor)
df_colmeans_deseqcounts_correlation_tcga_org = df_colmeans_deseqcounts_correlation_tcga_org[colSums(apply(df_colmeans_deseqcounts_correlation_tcga_org, 1, is.na)) == 0,]
saveRDS(df_colmeans_deseqcounts_correlation_tcga_org, "../")
saveRDS(df_colmeans_deseqcounts_correlation_tcga_org, "../objects/fig4_df_colmeans_deseqcounts_correlation_tcga_org.RDS")
ggplot(df_colmeans_deseqcounts_correlation_tcga_org,
aes(x=means_tcga, y=means_org, col=TME))+geom_point()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, lty='dashed')+facet_wrap(.~TME)+
theme(legend.position = "bottom")+ggtitle('Comparison of DESeq counts between TCGA\nand organoid samples')+
theme_bw()+labs(x='DESEq count means for TCGA', y='DESEq count means for organoid samples')
df_colmeans_deseqcounts_correlation_tcga_org
saveRDS(df_colmeans_deseqcounts_correlation_tcga_org, "../objects/fig4_df_colmeans_deseqcounts_correlation_tcga_org.RDS")
ggplot(df_colmeans_deseqcounts_correlation_tcga_org,
aes(x=means_tcga, y=means_org, col=TME))+geom_point()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, lty='dashed')+facet_wrap(.~TME)+
theme(legend.position = "bottom")+ggtitle('Comparison of DESeq counts between TCGA\nand organoid samples')+
theme_bw()+labs(x='DESEq count means for TCGA', y='DESEq count means for organoid samples')
pca_with_gsva_annotation_NC
