elegend$gtable$widths[3] <- unit(500, 'bigpts')
elegend$gtable$widths[4] <- unit(500, 'bigpts')
plot_grid(elegend$gtable)
elegend$gtable$widths[3] <- unit(100, 'bigpts')
elegend$gtable$widths[4] <- unit(500, 'bigpts')
plot_grid(elegend$gtable)
elegend$gtable$widths[3] <- unit(0100, 'bigpts')
elegend$gtable$widths[4] <- unit(500, 'bigpts')
plot_grid(elegend$gtable)
elegend$gtable$widths[3] <- unit(0, 'bigpts')
elegend$gtable$widths[4] <- unit(500, 'bigpts')
plot_grid(elegend$gtable)
elegend$gtable$grobs
elegend$gtable$grobs[[1]]$vp
elegend$gtable$grobs[[1]]$gp
elegend$gtable$grobs[[1]]$children
elegend$gtable$grobs[[1]]$children$GRID.rect.14024
elegend$gtable$grobs[[1]]$children$GRID.rect.14024$width
elegend$gtable$grobs[[1]]$children$GRID.text.14025$label
elegend$gtable$grobs[[1]]$children$GRID.text.14025$label[c(F,T)]
elegend$gtable$grobs[[1]]$children$GRID.text.14025$label[c(T,F)]
elegend$gtable$grobs[[1]]$children$GRID.text.14025$label[c(T,F)] = ""
plot_grid(elegend$gtable)
e <- pheatmap(ssgsea_repair, legend = F)
elegend <- pheatmap(ssgsea_repair, legend = T)
name_rect <- names(elegend$gtable$grobs[[6]]$children)[grep('rect', names(elegend$gtable$grobs[[6]]$children))]
name_text <- names(elegend$gtable$grobs[[6]]$children)[grep('text', names(elegend$gtable$grobs[[6]]$children))]
plot_grid(elegend$gtable$grobs[[6]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_rect]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_text]])
plt <- elegend$gtable$grobs[[6]]$children[[name_rect]]
plt$y <- plt$x
plt$x <- elegend$gtable$grobs[[6]]$children[[name_rect]]$y
plt$width <- plt$height
plt$height <- elegend$gtable$grobs[[6]]$children[[name_rect]]$width
plot_grid(plt)
plt2 <- elegend$gtable$grobs[[6]]$children[[name_text]]
plt2$y <- plt2$x
plt2$x <- elegend$gtable$grobs[[6]]$children[[name_text]]$y - unit(10, "bigpts")
plt2$width <- plt2$height
plt2$height <- elegend$gtable$grobs[[6]]$children[[name_text]]$width
plot_grid(plt2)
plot_grid(plt)
plot_grid(plt2)
elegend$gtable$grobs[[6]]$children[[name_rect]] = plt
elegend$gtable$grobs[[6]]$children[[name_text]] = plt2
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$heights[2] <- unit(0, 'bigpts')
elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL
elegend$gtable$layout <- elegend$gtable$layout[6,]
elegend$gtable$layout[4] = 2
elegend$gtable$widths[3] <- unit(0, 'bigpts')
elegend$gtable$widths[5] <- unit(0, 'bigpts')
elegend$gtable$heights[4] <- unit(2, 'bigpts')
elegend$gtable$heights[5] <- unit(0, 'bigpts')
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$widths[3] <- unit(0, 'bigpts')
# elegend$gtable$widths[4] <- unit(500, 'bigpts')
elegend$gtable$vp$gp$fontsize = 6
elegend$gtable$layout
# elegend$gtable$layout[1] = 2
# elegend$gtable$layout[2] = 5
# elegend$gtable$layout[5] = 8
elegend$gtable$vp$width = unit(2, "npc")
elegend$gtable$vp$x = unit(0.3, "npc")
elegend$gtable$grobs[[1]]$children$GRID.rect.14024$width
elegend$gtable$grobs[[1]]$children$GRID.text.14025$label[c(T,F)] = ""
plot_grid(elegend$gtable)
elegend$gtable$layout
elegend$gtable$widths
e_composite <- plot_grid(e[[4]],
elegend$gtable, nrow = 2, rel_heights = c(4, 0.5))
e_composite
pdf("fig3_v4.pdf", width = 10, height = 6.5)
plot_grid(plot_grid(a, b0, b, rel_widths=c(3,2,2), ncol=3, labels=c('a', 'b')), plot_grid(c, d, e_composite, labels=c('c', 'd', 'e'),
ncol=3, rel_widths=c(1.8,1.6,2.5)),
nrow=2, rel_heights = c(1.8, 2))
dev.off()
elegend$gtable$grobs[[1]]$children$GRID.text.14025$label
e <- pheatmap(ssgsea_repair, legend = F)
elegend <- pheatmap(ssgsea_repair, legend = T)
name_rect <- names(elegend$gtable$grobs[[6]]$children)[grep('rect', names(elegend$gtable$grobs[[6]]$children))]
name_text <- names(elegend$gtable$grobs[[6]]$children)[grep('text', names(elegend$gtable$grobs[[6]]$children))]
plot_grid(elegend$gtable$grobs[[6]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_rect]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_text]])
plt <- elegend$gtable$grobs[[6]]$children[[name_rect]]
plt$y <- plt$x
plt$x <- elegend$gtable$grobs[[6]]$children[[name_rect]]$y
plt$width <- plt$height
plt$height <- elegend$gtable$grobs[[6]]$children[[name_rect]]$width
plot_grid(plt)
plt2 <- elegend$gtable$grobs[[6]]$children[[name_text]]
plt2$y <- plt2$x
plt2$x <- elegend$gtable$grobs[[6]]$children[[name_text]]$y - unit(10, "bigpts")
plt2$width <- plt2$height
plt2$height <- elegend$gtable$grobs[[6]]$children[[name_text]]$width
plot_grid(plt2)
plot_grid(plt)
plot_grid(plt2)
elegend$gtable$grobs[[6]]$children[[name_rect]] = plt
elegend$gtable$grobs[[6]]$children[[name_text]] = plt2
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$heights[2] <- unit(0, 'bigpts')
elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL
elegend$gtable$layout <- elegend$gtable$layout[6,]
elegend$gtable$layout[4] = 2
elegend$gtable$widths[3] <- unit(0, 'bigpts')
elegend$gtable$widths[5] <- unit(0, 'bigpts')
elegend$gtable$heights[4] <- unit(2, 'bigpts')
elegend$gtable$heights[5] <- unit(0, 'bigpts')
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$widths[3] <- unit(0, 'bigpts')
# elegend$gtable$widths[4] <- unit(500, 'bigpts')
elegend$gtable$vp$gp$fontsize = 6
elegend$gtable$layout
# elegend$gtable$layout[1] = 2
# elegend$gtable$layout[2] = 5
# elegend$gtable$layout[5] = 8
elegend$gtable$vp$width = unit(2, "npc")
elegend$gtable$vp$x = unit(0.3, "npc")
elegend$gtable$grobs[[1]]$children[[name_text]]$label[c(T,F)] = ""
plot_grid(elegend$gtable)
elegend$gtable$layout
elegend$gtable$widths
e_composite <- plot_grid(e[[4]],
elegend$gtable, nrow = 2, rel_heights = c(4, 0.5))
e_composite
pdf("fig3_v4.pdf", width = 10, height = 6.5)
plot_grid(plot_grid(a, b0, b, rel_widths=c(3,2,2), ncol=3, labels=c('a', 'b')), plot_grid(c, d, e_composite, labels=c('c', 'd', 'e'),
ncol=3, rel_widths=c(1.8,1.6,2.5)),
nrow=2, rel_heights = c(1.8, 2))
dev.off()
e_composite <- plot_grid(e[[4]],
elegend$gtable, nrow = 2, rel_heights = c(4, 0.8))
e_composite
pdf("fig3_v4.pdf", width = 10, height = 6.5)
plot_grid(plot_grid(a, b0, b, rel_widths=c(3,2,2), ncol=3, labels=c('a', 'b')), plot_grid(c, d, e_composite, labels=c('c', 'd', 'e'),
ncol=3, rel_widths=c(1.8,1.6,2.5)),
nrow=2, rel_heights = c(1.8, 2))
dev.off()
# elegend$gtable$widths[4] <- unit(500, 'bigpts')
elegend$gtable$vp$gp$fontsize = 4
e_composite <- plot_grid(e[[4]],
elegend$gtable, nrow = 2, rel_heights = c(4, 0.8))
e_composite
pdf("fig3_v4.pdf", width = 10, height = 6.5)
plot_grid(plot_grid(a, b0, b, rel_widths=c(3,2,2), ncol=3, labels=c('a', 'b')), plot_grid(c, d, e_composite, labels=c('c', 'd', 'e'),
ncol=3, rel_widths=c(1.8,1.6,2.5)),
nrow=2, rel_heights = c(1.8, 2))
dev.off()
elegend$gtable$vp$gp$fontsize
elegend$gtable$grob
elegend$gtable$grobs[[1]]$vp
elegend$gtable$grobs[[1]]$children$GRID.text.14937$gp$fontsize
e <- pheatmap(ssgsea_repair, legend = F)
elegend <- pheatmap(ssgsea_repair, legend = T)
name_rect <- names(elegend$gtable$grobs[[6]]$children)[grep('rect', names(elegend$gtable$grobs[[6]]$children))]
name_text <- names(elegend$gtable$grobs[[6]]$children)[grep('text', names(elegend$gtable$grobs[[6]]$children))]
plot_grid(elegend$gtable$grobs[[6]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_rect]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_text]])
plt <- elegend$gtable$grobs[[6]]$children[[name_rect]]
plt$y <- plt$x
plt$x <- elegend$gtable$grobs[[6]]$children[[name_rect]]$y
plt$width <- plt$height
plt$height <- elegend$gtable$grobs[[6]]$children[[name_rect]]$width
plot_grid(plt)
plt2 <- elegend$gtable$grobs[[6]]$children[[name_text]]
plt2$y <- plt2$x
plt2$x <- elegend$gtable$grobs[[6]]$children[[name_text]]$y - unit(10, "bigpts")
plt2$width <- plt2$height
plt2$height <- elegend$gtable$grobs[[6]]$children[[name_text]]$width
plot_grid(plt2)
plot_grid(plt)
plot_grid(plt2)
elegend$gtable$grobs[[6]]$children[[name_rect]] = plt
elegend$gtable$grobs[[6]]$children[[name_text]] = plt2
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$heights[2] <- unit(0, 'bigpts')
elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL
elegend$gtable$layout <- elegend$gtable$layout[6,]
elegend$gtable$layout[4] = 2
elegend$gtable$widths[3] <- unit(0, 'bigpts')
elegend$gtable$widths[5] <- unit(0, 'bigpts')
elegend$gtable$heights[4] <- unit(2, 'bigpts')
elegend$gtable$heights[5] <- unit(0, 'bigpts')
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$widths[3] <- unit(0, 'bigpts')
# elegend$gtable$widths[4] <- unit(500, 'bigpts')
elegend$gtable$grobs[[1]]$children[[name_text]]$gp$fontsize = 40
elegend$gtable$layout
# elegend$gtable$layout[1] = 2
# elegend$gtable$layout[2] = 5
# elegend$gtable$layout[5] = 8
elegend$gtable$vp$width = unit(2, "npc")
elegend$gtable$vp$x = unit(0.3, "npc")
elegend$gtable$grobs[[1]]$children[[name_text]]$label[c(T,F)] = ""
plot_grid(elegend$gtable)
elegend$gtable$layout
elegend$gtable$widths
e_composite <- plot_grid(e[[4]],
elegend$gtable, nrow = 2, rel_heights = c(4, 0.8))
e_composite
pdf("fig3_v4.pdf", width = 10, height = 6.5)
plot_grid(plot_grid(a, b0, b, rel_widths=c(3,2,2), ncol=3, labels=c('a', 'b')), plot_grid(c, d, e_composite, labels=c('c', 'd', 'e'),
ncol=3, rel_widths=c(1.8,1.6,2.5)),
nrow=2, rel_heights = c(1.8, 2))
dev.off()
e <- pheatmap(ssgsea_repair, legend = F)
elegend <- pheatmap(ssgsea_repair, legend = T)
name_rect <- names(elegend$gtable$grobs[[6]]$children)[grep('rect', names(elegend$gtable$grobs[[6]]$children))]
name_text <- names(elegend$gtable$grobs[[6]]$children)[grep('text', names(elegend$gtable$grobs[[6]]$children))]
plot_grid(elegend$gtable$grobs[[6]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_rect]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_text]])
plt <- elegend$gtable$grobs[[6]]$children[[name_rect]]
plt$y <- plt$x
plt$x <- elegend$gtable$grobs[[6]]$children[[name_rect]]$y
plt$width <- plt$height
plt$height <- elegend$gtable$grobs[[6]]$children[[name_rect]]$width
plot_grid(plt)
plt2 <- elegend$gtable$grobs[[6]]$children[[name_text]]
plt2$y <- plt2$x
plt2$x <- elegend$gtable$grobs[[6]]$children[[name_text]]$y - unit(10, "bigpts")
plt2$width <- plt2$height
plt2$height <- elegend$gtable$grobs[[6]]$children[[name_text]]$width
plot_grid(plt2)
plot_grid(plt)
plot_grid(plt2)
elegend$gtable$grobs[[6]]$children[[name_rect]] = plt
elegend$gtable$grobs[[6]]$children[[name_text]] = plt2
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$heights[2] <- unit(0, 'bigpts')
elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL
elegend$gtable$layout <- elegend$gtable$layout[6,]
elegend$gtable$layout[4] = 2
elegend$gtable$widths[3] <- unit(0, 'bigpts')
elegend$gtable$widths[5] <- unit(0, 'bigpts')
elegend$gtable$heights[4] <- unit(2, 'bigpts')
elegend$gtable$heights[5] <- unit(0, 'bigpts')
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$widths[3] <- unit(0, 'bigpts')
# elegend$gtable$widths[4] <- unit(500, 'bigpts')
elegend$gtable$grobs[[1]]$children[[name_text]]$gp$fontsize = 4
elegend$gtable$layout
# elegend$gtable$layout[1] = 2
# elegend$gtable$layout[2] = 5
# elegend$gtable$layout[5] = 8
elegend$gtable$vp$width = unit(2, "npc")
elegend$gtable$vp$x = unit(0.3, "npc")
elegend$gtable$grobs[[1]]$children[[name_text]]$label[c(T,F)] = ""
plot_grid(elegend$gtable)
elegend$gtable$layout
elegend$gtable$widths
e_composite <- plot_grid(e[[4]],
elegend$gtable, nrow = 2, rel_heights = c(4, 0.8))
e_composite
pdf("fig3_v4.pdf", width = 10, height = 6.5)
plot_grid(plot_grid(a, b0, b, rel_widths=c(3,2,2), ncol=3, labels=c('a', 'b')), plot_grid(c, d, e_composite, labels=c('c', 'd', 'e'),
ncol=3, rel_widths=c(1.8,1.6,2.5)),
nrow=2, rel_heights = c(1.8, 2))
dev.off()
elegend <- pheatmap(ssgsea_repair, legend = T)
name_rect <- names(elegend$gtable$grobs[[6]]$children)[grep('rect', names(elegend$gtable$grobs[[6]]$children))]
name_text <- names(elegend$gtable$grobs[[6]]$children)[grep('text', names(elegend$gtable$grobs[[6]]$children))]
plot_grid(elegend$gtable$grobs[[6]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_rect]])
plot_grid(elegend$gtable$grobs[[6]]$children[[name_text]])
plt <- elegend$gtable$grobs[[6]]$children[[name_rect]]
plt$y <- plt$x
plt$x <- elegend$gtable$grobs[[6]]$children[[name_rect]]$y
plt$width <- plt$height
plt$height <- elegend$gtable$grobs[[6]]$children[[name_rect]]$width
plot_grid(plt)
plt2 <- elegend$gtable$grobs[[6]]$children[[name_text]]
plt2$y <- plt2$x
plt2$x <- elegend$gtable$grobs[[6]]$children[[name_text]]$y - unit(10, "bigpts")
plt2$width <- plt2$height
plt2$height <- elegend$gtable$grobs[[6]]$children[[name_text]]$width
plot_grid(plt2)
plot_grid(plt)
plot_grid(plt2)
elegend$gtable$grobs[[6]]$children[[name_rect]] = plt
elegend$gtable$grobs[[6]]$children[[name_text]] = plt2
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$heights[2] <- unit(0, 'bigpts')
elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL; elegend$gtable$grobs[[1]] <- NULL
elegend$gtable$layout <- elegend$gtable$layout[6,]
elegend$gtable$layout[4] = 2
elegend$gtable$widths[3] <- unit(0, 'bigpts')
elegend$gtable$widths[5] <- unit(0, 'bigpts')
elegend$gtable$heights[4] <- unit(2, 'bigpts')
elegend$gtable$heights[5] <- unit(0, 'bigpts')
elegend$gtable$widths[1] <- unit(0, 'bigpts')
elegend$gtable$widths[3] <- unit(0, 'bigpts')
# elegend$gtable$widths[4] <- unit(500, 'bigpts')
elegend$gtable$grobs[[1]]$children[[name_text]]$gp$fontsize = 4
elegend$gtable$layout
# elegend$gtable$layout[1] = 2
# elegend$gtable$layout[2] = 5
# elegend$gtable$layout[5] = 8
elegend$gtable$vp$width = unit(2, "npc")
elegend$gtable$vp$x = unit(0.3, "npc")
# elegend$gtable$grobs[[1]]$children[[name_text]]$label[c(T,F)] = ""
plot_grid(elegend$gtable)
elegend$gtable$layout
elegend$gtable$widths
e_composite <- plot_grid(e[[4]],
elegend$gtable, nrow = 2, rel_heights = c(4, 0.8))
e_composite
pdf("fig3_v4.pdf", width = 10, height = 6.5)
plot_grid(plot_grid(a, b0, b, rel_widths=c(3,2,2), ncol=3, labels=c('a', 'b')), plot_grid(c, d, e_composite, labels=c('c', 'd', 'e'),
ncol=3, rel_widths=c(1.8,1.6,2.5)),
nrow=2, rel_heights = c(1.8, 2))
dev.off()
# elegend$gtable$widths[4] <- unit(500, 'bigpts')
elegend$gtable$grobs[[1]]$children[[name_text]]$gp$fontsize = 6
e_composite <- plot_grid(e[[4]],
elegend$gtable, nrow = 2, rel_heights = c(4, 0.8))
e_composite
pdf("fig3_v4.pdf", width = 10, height = 6.5)
plot_grid(plot_grid(a, b0, b, rel_widths=c(3,2,2), ncol=3, labels=c('a', 'b')), plot_grid(c, d, e_composite, labels=c('c', 'd', 'e'),
ncol=3, rel_widths=c(1.8,1.6,2.5)),
nrow=2, rel_heights = c(1.8, 2))
dev.off()
#--------------------------------------------------------------------------------#
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(ggrepel)
library(reshape2)
library(readxl)
require(jcolors)
library(biomaRt)
require(GSVA)
require(GSVAdata)
require(pheatmap)
library(ReactomePA)
library(DESeq2)
library(lsa) ## for cosine similarity
source("other_scripts/functions.R")
gene_to_ensembl <- function(genename){
t2g_GRCh38$ensembl_gene_id[match(genename, t2g_GRCh38$external_gene_name)]
}
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
raw_counts0 = read.csv("../../RNASeq_and_CN/20191218_ViasM_BJ_orgaBrs/RnaSeqPip/counts/counts_raw_subsetno3pbias.csv", stringsAsFactors = FALSE)
rownames(raw_counts0) = raw_counts0[,1]; raw_counts0 <- raw_counts0[,-1]
normalised_counts = read.csv("../files/counts_norm.csv", stringsAsFactors = FALSE)
rownames(normalised_counts) = normalised_counts[,1]
normalised_counts = normalised_counts[,-1]
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
# Renaming
renaming1 = read_excel("../files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming_NC = renaming1[match( gsub('[.]', '', colnames(normalised_counts)), gsub('-', '', renaming1$sampleNameRNAseq)),]
colnames(normalised_counts)[!is.na(renaming_NC$PDO)] = renaming_NC$PDO[!is.na(renaming_NC$PDO)]
colnames(normalised_counts)
## Remove normal samples
normalised_counts = normalised_counts[,!grepl('FT', colnames(normalised_counts))]
normalised_counts = normalised_counts[rowSums(normalised_counts)>0,]
#--------------------------------------------------------------------------------#
normalised_counts
##------------------------------------------------------------------------------------------------------------##
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
require(ggplot2)
require(ggrepel)
require(dplyr)
require(reshape2)
require(jcolors)
require(biomaRt)
require(gridExtra)
library(jcolors)
library(parallel)
library(latex2exp)
library(GSVA)
library(GSVAdata)
library(DESeq2)
##------------------------------------------------------------------------------------------------------------##
## Note: any plots containing nearestGeneCN/cordfAll is wrong, as it had been computed with the incorrect organoid renaming
include_14_orgs = FALSE
include_11_orgs = TRUE
##------------------------------------------------------------------------------------------------------------##
##' 3' bias samples to remove
renaming = readxl::read_xlsx("../../../RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
if(include_14_orgs){
remove_samples = (c('PDO14', 'PDO16', 'PDO18'))
}else if(include_11_orgs){
remove_samples = (c('PDO14', 'PDO16', 'PDO18',
'PDO13', 'PDO4', 'PDO9',
'PDO17', 'FT10', 'FT7', 'FT7-bis'))
}
remove_samples_with_normal_fal = cbind.data.frame(PDO=remove_samples,
ID=renaming$ID[match(remove_samples, renaming$PDO)],
RNASeq=renaming$sampleNameRNAseq[match(remove_samples, renaming$PDO)])
remove_samples = remove_samples_with_normal_fal[grepl('PDO', remove_samples_with_normal_fal$PDO),]
##------------------------------------------------------------------------------------------------------------##
##------------------------------------------------------------------------------------------------------------##
joint_counts_CN0 = readRDS("../output/output_GRCh37_with_14_orgs/joint_counts_CN_TPM_20210506104217.RDS")
joint_counts_CN = joint_counts_CN0
joint_counts_CN = joint_counts_CN %>% filter( !(counts.Var1 %in% remove_samples[2,]))
topvariable = read.table("../../top_variable.txt", comment.char = "#")
## now add DESeq counts
## recompute them, depending on which organoids we are including
if(include_14_orgs){
deseq_counts0 = read.table("../../../RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',', header = T)
deseq_counts = deseq_counts0
# deseq_counts_renormalised: without the 3'- biased samples
deseq_counts_renormalised0 <- read.table("../../../RNASeq_and_CN/20191218_ViasM_BJ_orgaBrs/RnaSeqPip/counts/counts_raw.csv", sep = ",", header = T)
deseq_counts_renormalised0 <- deseq_counts_renormalised0[,!(renaming$PDO[match(colnames(deseq_counts_renormalised0), gsub("-", ".", renaming$sampleNameRNAseq))] %in% remove_samples[1,])]
rownames(deseq_counts_renormalised0) <- deseq_counts_renormalised0[,1]; deseq_counts_renormalised0[,1] <- NULL
deseq_counts_renormalised0 <- DESeq2::DESeqDataSetFromMatrix(deseq_counts_renormalised0, colData=data.frame(org_bool=grepl('PDO', renaming$PDO[match(colnames(deseq_counts_renormalised0), gsub("-", ".", renaming$sampleNameRNAseq))])), design = ~org_bool)
deseq_counts_renormalised0 <- estimateSizeFactors(deseq_counts_renormalised0)
deseq_counts_renormalised0 <- estimateDispersions(deseq_counts_renormalised0,fitType="local")
deseq_counts_renormalised0 <- DESeq2::counts(deseq_counts_renormalised0, normalized=T)
}else if(include_11_orgs){
raw_counts0 = read.csv("../../../RNASeq_and_CN/20191218_ViasM_BJ_orgaBrs/RnaSeqPip/counts/counts_raw.csv", stringsAsFactors = FALSE)
rownames(raw_counts0) = raw_counts0[,1]; raw_counts0 <- raw_counts0[,-1]
colnames(raw_counts0) <- renaming$PDO[match(gsub('[.]', '-', colnames(raw_counts0)),
renaming$sampleNameRNAseq)]
raw_counts0 = raw_counts0[,!(colnames(raw_counts0) %in% remove_samples_with_normal_fal$PDO)]
## here we normalising with only 3 FT samples without 3' bias
renormalised_counts_obj <- DESeq2::DESeqDataSetFromMatrix(countData = raw_counts0,
colData = cbind.data.frame(Sample=colnames(raw_counts0),
Group=grepl('PDO', colnames(raw_counts0))),
design = ~ Group)
renormalised_counts_obj <- DESeq2::estimateSizeFactors(renormalised_counts_obj)
saveRDS(renormalised_counts_obj, "../../20191218_ViasM_BJ_orgaBrs/output/fig3_renormalised_counts_obj_11orgs.RDS")
renormalised_counts <- DESeq2::counts(renormalised_counts_obj, normalized=T)
deseq_counts_renormalised0 <- renormalised_counts
deseq_counts <- deseq_counts_renormalised0
}else{
stop('set include_11_orgs or include_14_orgs to T')
}
deseq_counts = (melt(deseq_counts))
colnames(deseq_counts) = c('Gene', 'DESEq.sample', 'DESeq.count')
## Gene name conversion
# mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl", host="grch37.ensembl.org", ))
# # # ensembl <- useEnsembl(biomart = "genes")
# ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = mart)
#
# t2g <- getBM(
#   attributes = c('ensembl_gene_id', 'external_gene_name'),
#   values = deseq_counts$Gene,
#   filter = 'ensembl_gene_id',
#   mart = ensembl, useCache = FALSE)
# saveRDS(t2g, file = "~/Desktop/t2g_GRCh37.RDS")
t2g_37 = readRDS("../../../copy_number_analysis_organoids/robjects/t2g_GRCh37.RDS")
t2g_38 = readRDS("../../../copy_number_analysis_organoids/robjects/t2g2.RDS")
EnsDb.Hsapiens.v87 <- ensembldb::EnsDb("../../../RNASeq_and_CN/20191218_ViasM_BJ_orgaBrs/Data/Homo_sapiens.GRCh37.87.sqlite")
ag <- ensembldb::genes(EnsDb.Hsapiens.v87, filter=list(AnnotationFilter::GeneBiotypeFilter('protein_coding')), return.type="DataFrame")
genename_ensmid_matched = t2g_38[match(deseq_counts$Gene, t2g_38$ensembl_gene_id),'external_gene_name']
deseq_counts$Gene = genename_ensmid_matched
deseq_counts = deseq_counts[!is.na(deseq_counts$Gene),]
if(include_14_orgs){
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
}else if(include_11_orgs){
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$PDO)]
}
joint_counts_CN = cbind.data.frame(joint_counts_CN, deseq_counts[match(paste0(joint_counts_CN$counts.Var1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
plot(joint_counts_CN$counts.value, joint_counts_CN$DESeq.count)
# saveRDS(joint_counts_CN, file = "../output/joint_counts_CN.RDS")
corDfAll_do_not_use_values = read.csv("../GexVsCnGwDeseq2/corStatTable.csv")
# corDfAll_do_not_use_values = readRDS("../output/corDfAll.RDS") ## this is likely to be with incorrect PDO
joint_counts_CN$PDO = renaming$PDO[match(joint_counts_CN$counts.Var1, renaming$ID)]
## remove samples with 3' bias
joint_counts_CN = joint_counts_CN[!(joint_counts_CN$PDO %in% remove_samples$PDO),]
# which_all_na <- apply(apply(joint_counts_CN, 1, is.na), 2, all)
# table(is.na(joint_counts_CN_TPM_subset$counts.value))
# table(is.na(joint_counts_CN_TPM_subset$counts.DESeq.count))
# length(table(corDfAll$GeneName))
# length(table(joint_counts_CN_TPM_subset$nearestGeneCN.gene)) ## ?? we're losing genes?
# length(table(joint_counts_CN_subset$nearestGeneCN.gene)) ## ?? we're losing genes?
length(table(topvariable))
## only highly variable expressed genes
joint_counts_CN = joint_counts_CN %>% group_by(counts.Var2) %>% mutate(var_deseq=var(DESeq.count))
thres_var_GE = quantile(joint_counts_CN$var_deseq, na.rm = T, prob=0.9)
high_GEvar=joint_counts_CN %>% filter(DESeq.count > 0) %>%
filter(var_deseq > thres_var_GE)
## Link this to my weighted copy number for all genes
# joint_counts_CN = readRDS("../output/joint_counts_CN.RDS")
# joint_counts_CN = joint_counts_CN %>% filter( !(counts.Var1 %in% remove_samples[2,]))
dim(joint_counts_CN)
# x = joint_counts_CN[match(paste0(joint_counts_CN$counts.Var1, joint_counts_CN$counts.Var2),
#       paste0(joint_counts_CN$counts.Var1, joint_counts_CN$counts.Var2)),]
# plot(x$counts.value, joint_counts_CN$counts.value)
#
# head(joint_counts_CN[is.na(x$counts.value),])
# head(x[is.na(x$counts.value),])
head(corDfAll)
corDfAll_df = (melt(cbind.data.frame(gene=rownames(corDfAll),
corDfAll[,grepl('segVal_', colnames(corDfAll))])))
corDfAll_df$gene = sapply(corDfAll_df$gene, function(i) strsplit(i, '::')[[1]][2])
corDfAll_df$variable = gsub("segVal_", "", corDfAll_df$variable)
head(corDfAll_df)
# joint_counts_CN_subset = cbind.data.frame(nearestGeneCN=corDfAll_df,
#    joint_counts_CN[match(paste0(corDfAll_df$gene, corDfAll_df$variable),
#                          paste0(joint_counts_CN$counts.Var2, joint_counts_CN$counts.Var1)),])
joint_counts_CN_subset = joint_counts_CN %>% filter(CN.gene_name %in% corDfAll_do_not_use_values$GeneName)
ZWINT <- joint_counts_CN %>% filter(CN.gene_name == 'ZWINT')
ggplot(ZWINT, aes(x=log2(CN.value), y=DESeq.count, label=PDO))+geom_point()+
geom_label_repel(alpha=0.2)+
ggtitle('ZWINT')+labs(x='Absolute CN (log2)', y='DESeq2 counts')
TP53 <- joint_counts_CN %>% filter(CN.gene_name == 'TP53')
ggplot(TP53, aes(x=log2(CN.value), y=DESeq.count, label=PDO))+geom_point()+
geom_label_repel(alpha=0.2)+
ggtitle('TP53')+labs(x='Absolute CN (log2)', y='DESeq2 counts')
ggsave("../../figures_GRCh37/TP53.pdf", height = 4, width = 4)
system('open ../../figures_GRCh37/')
