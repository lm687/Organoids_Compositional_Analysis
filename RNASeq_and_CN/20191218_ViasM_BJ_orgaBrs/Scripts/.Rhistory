ggplot(df_gene_characteristics %>% filter(Gene %in% (unique(joint_counts_CN_subset$CN.gene_name))) %>%
filter(df_average_bottomCN.average_comparison_CN_DESeq > min_x,
r2_normCNnormDESeq > min_y),
aes(x=df_average_bottomCN.average_comparison_CN_DESeq,
y=r2_normCNnormDESeq))+
geom_point()+
geom_label_repel(aes(label=label_top20, col=label_top20_col), size=3)+
theme_bw()+labs(y='Averaged higher CN and higher GE', x=TeX('R^2 between CN and GE'))+coord_flip()+
lims(x=c(min_x, 1), y=c(min_y, 1))+facet_wrap(.~drop(factor(chrom, levels=c(1:22))), drop = T)+
guides(col=FALSE)
ggsave("../../figures_GRCh37/fig3d_chromosomes_highlyvarsubset.pdf", width = 12, height = 10)
# pdf("../../figures_GRCh37/scatterplot_top20genes.pdf", width = 5, height = 5)
for(top20gene in xls_out2_highlyvar$Gene[1:20]){
pdf(paste0("../../figures_GRCh37/scatterplot_top20genes/scatterplot_top20genes_highlyvarsubset_",
top20gene, ".pdf"), width = 5, height = 5)
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == top20gene),
aes(x=CN.value, y=DESeq.count, label=PDO))+geom_point()+geom_label_repel(alpha=0.2)+
ggtitle(top20gene))
dev.off()
}
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% xls_out2_highlyvar$Gene[1:20]),
aes(x=CN.value, y=DESeq.count, label=PDO))+geom_point()+geom_label_repel(alpha=0.2)+
facet_wrap(.~factor(Gene, levels=xls_out2_highlyvar$Gene[1:20]), scales = "free")+
theme(strip.text = element_text(size=14))
ggsave("../../figures_GRCh37/scatterplot_alltop20genes.pdf", width = 13, height = 13)
#setwd("~/Documents/PhD/other_repos/Vias_Brenton/RNASeq_and_CN/20191218_ViasM_BJ_orgaBrs/Scripts/")
# old <- readRDS("../output/output_GRCh38_incorrect/joint_counts_CN_TPM_20210301210511.RDS")
# new <- readRDS("../output/output_GRCh37/joint_counts_CN_TPM_20210414211439.RDS")
#
# old_bot3 <- readRDS("../output/output_GRCh38_incorrect/fig3_df_average_bottomCN.RDS")
# dim(old_bot3)
#
# require(scales)
# mtch <- match(paste0(new$counts.Var1, new$counts.Var2), paste0(old$counts.Var1, old$counts.Var2))
#
# pdf("~/Desktop/comparison_CNvalues_genes_intactgenenames_loglog.pdf")
# plot(log(old$CN.value[mtch]),
#      log(new$CN.value), pch=19, col=alpha('black', 0.05))
# dev.off()
## find most highly amplified genes
## use the original joint_counts_CN, as we want to keep all samples
joint_counts_CN0$chrom = ag$seq_name[match(joint_counts_CN0$CN.gene_name, ag$gene_name)]
most_highly_amplified = joint_counts_CN0 %>% group_by(CN.gene_name) %>% summarise(mean_CN_org= mean(CN.value))
most_highly_amplified <- most_highly_amplified[order(most_highly_amplified$mean_CN_org, decreasing = T),]
most_highly_amplified_genes_list <- most_highly_amplified$CN.gene_name[1:20]
joint_counts_CN0$PDO = renaming$PDO[match(joint_counts_CN0$CN.L1, renaming$ID)] ## because PDO was created with RNASeq data, so if there's none we didn't have the PDO name
joint_counts_CN0_MHA = joint_counts_CN0 %>% filter(CN.gene_name %in% most_highly_amplified_genes_list)
give_order_colsums <- function(f){
unlist(f[order(f[,2], decreasing = T),1])
}
ggplot(joint_counts_CN0_MHA,
aes(y=log2(CN.value), x=factor(CN.gene_name, levels=rev(most_highly_amplified_genes_list)),
fill=factor(chrom, levels=sort(as.numeric(unique(chrom))))))+
geom_bar(stat = "identity")+coord_flip()+
facet_wrap(.~factor(PDO2, levels = give_order_colsums(joint_counts_CN0_MHA %>% group_by(PDO2) %>% summarise(sum(CN.value)))), nrow=1)+
geom_hline(yintercept = log(2), col='blue')+
labs(x='Gene name', y='CN (log2)', fill='Chromosome')
ggsave("../../figures_GRCh37/most_highly_amplified.pdf", height = 7, width = 10)
# xxx <- joint_counts_CN %>% filter(CN.gene_name %in% most_highly_amplified_genes_list)
# table(xxx$PDO2)
# table(joint_counts_CN$CN.L1)
# > table(xxx$PDO2)
#
# PDO1 PDO10 PDO11 PDO12 PDO13 PDO14 PDO15 PDO16 PDO17 PDO18  PDO2  PDO3  PDO4  PDO5  PDO6  PDO7  PDO8
# 20    20    20    20    20     1    20     1    20     1    20    20    20    20    20    20    20
# PDO9
# 20
# > table(joint_counts_CN$CN.L1)
#
# 118947org 118976org 119025org 119058org 119127org 119148org 119178org 151723org 151761org 151773org
# 19430     19430      1028     19430     19430     19430     19430     19430     19430     19430
# 23868org  32070org  32077org  50495org  54059org  54276org  54288org  54327org
# 19430      1028     19430     19430     19430     19430      1028     19430
table(joint_counts_CN$CN.L1)
table(joint_counts_CN$counts.Var1)
View(joint_counts_CN %>% filter(CN.L1 == '119025org'))
library(RColorBrewer)
n <- length(unique(joint_counts_CN$PDO))
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
ggplot(joint_counts_CN0 %>% filter(CN.gene_name %in% subset_genes_of_interest),
aes(x=CN.gene_name, y=CN.value))+geom_violin()+
geom_jitter(aes(col=PDO))+
# geom_label(aes(label=PDO))+
facet_wrap(.~CN.gene_name, scales = "free")+
scale_colour_manual(values = col_vector)+
geom_hline(yintercept = 2, lty='dashed', col='blue')+theme_bw()
ggsave("../../figures_GRCh37/genes_of_interest_CN.pdf", width = 7)
ggplot(joint_counts_CN0 %>% filter(CN.gene_name %in% subset_genes_of_interest),
aes(x=CN.gene_name, y=CN.value))+geom_violin()+
geom_jitter(aes(col=PDO))+
# geom_label(aes(label=PDO))+
facet_wrap(.~CN.gene_name, scales = "free_x")+
scale_colour_manual(values = col_vector)+
scale_y_continuous(trans = "log2")+
geom_hline(yintercept = 2, lty='dashed', col='blue')+theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggsave("../../figures_GRCh37/genes_of_interest_CN_v2.pdf", width = 7, height = 7)
ggplot(joint_counts_CN0 %>% filter(CN.gene_name %in% subset_genes_of_interest),
aes(x=CN.gene_name, y=CN.value))+
geom_jitter(aes(col=PDO))+
geom_text_repel(aes(label=gsub('PDO', '', PDO), col=PDO),
# position = position_jitterdodge(),
segment.color = NA, max.overlaps = 30, size=2)+
# geom_label(aes(label=PDO))+
facet_wrap(.~CN.gene_name, scales = "free_x")+
scale_colour_manual(values = col_vector)+
scale_y_continuous(trans = "log2")+
geom_hline(yintercept = 2, lty='dashed', col='blue')+theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggsave("../../figures_GRCh37/genes_of_interest_CN_v3.pdf", width = 7, height = 7)
#'First, a group of genes including PARP2, TERT ATR and AKT1 show an inverse genomic
#'expression pattern than KRAS and TOP1. Secondly, and orthogonal to the previous genes,
#' PIK3CA and ATM are expressed with inverse relation to PARP1, CCNE1 and PTEN.
#' Organoids derived from the same patient do not cluster together in regard to the
#'transcriptome.
genes_rnaseq <- joint_counts_CN %>% filter(CN.gene_name %in% c('PARP2', 'TERT', 'ATR', 'AKT1', 'KRAS', 'TOP1',
'PIK3CA', 'ATM', 'PARP1', 'CCNE1', 'PTEN'))
ggplot(genes_rnaseq, aes(x=Gene, y=DESeq.count))+geom_bar(stat = "identity")+facet_wrap(.~PDO)
genes_rnaseq2 <- dcast(genes_rnaseq[,c('Gene', 'DESeq.count', 'PDO')], PDO~Gene, value.var = 'DESeq.count')
rownames(genes_rnaseq2) <- genes_rnaseq2[,1]; genes_rnaseq2 <- genes_rnaseq2[,-1]
pairs(genes_rnaseq2, pch=18)
ggplot(joint_counts_CN %>% filter(CN.gene_name == "LRP1B"), aes(x=PDO, y=DESeq.count, group=1))+geom_line()+
scale_y_continuous(trans = "log2")
#-----------------------------------------------------------------------------------------------#
## Link RNASeq to drug response
joint_counts_CN$pairs_pdo[joint_counts_CN$PDO %in% c('PDO3', 'PDO9')] = 'PDO3-PDO9'
joint_counts_CN$pairs_pdo[joint_counts_CN$PDO %in% c('PDO5', 'PDO6')] = 'PDO5-PDO6'
joint_counts_CN$pairs_pdo[joint_counts_CN$PDO %in% c('PDO7', 'PDO8')] = 'PDO7-PDO8'
gene_subsets_iterate_list = list(AZD8186_Vistusertib_Capivasertib_AZD8835=c('PI3', 'AKT1', 'MTOR'),
Olaparib=c('PARP1','PARP2'),
AZD0156='ATM',
Ceralasertib='ATR',
Adavosertib='WEE1',
Doxorubicin='TOP2A',
Paclitaxel=NA,
Gemcitabine=c('RRM1', 'RRM2B', 'RRM2B', 'DCK', 'CDA', 'Slc29a1', 'Slc29a2', 'Slc28a1', 'Slc28a3'),
Oxaliplatin=NA,
APR246='TP53')
pdf("../../figures_GRCh37/geneexpression_and_drugsusceptibility.pdf", width = 8, height = 4)
for(gene_subsets_iterate_it in 1:length(gene_subsets_iterate_list)){
gene_subsets_iterate = gene_subsets_iterate_list[[gene_subsets_iterate_it]]
if(is.na(gene_subsets_iterate)){
print(ggplot()+ggtitle(names(gene_subsets_iterate_list)[gene_subsets_iterate_it]))
}else{
print(ggplot(joint_counts_CN %>% filter(CN.gene_name %in% gene_subsets_iterate) %>%
filter(PDO %in% c('PDO3', 'PDO9', 'PDO5', 'PDO6', 'PDO7', 'PDO8')),
aes(x=interaction(PDO, CN.gene_name), y=DESeq.count, group=CN.gene_name, col=CN.gene_name))+
geom_point()+geom_line()+facet_wrap(.~pairs_pdo, scales = "free_x")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
ggtitle(names(gene_subsets_iterate_list)[gene_subsets_iterate_it])+
labs(x=''))
}
}
dev.off()
joint_counts_CN_dcast <- dcast(joint_counts_CN[!duplicated(joint_counts_CN),] %>%
dplyr::select(PDO, DESeq.count, CN.gene_name) %>%
filter(!is.na(DESeq.count) & !is.na(CN.gene_name)) %>%
distinct(),
value.var = "DESeq.count", formula = CN.gene_name~PDO)
joint_counts_CN_dcast_TPM <- dcast(joint_counts_CN[!duplicated(joint_counts_CN),] %>%
dplyr::select(PDO, counts.value, CN.gene_name) %>%
filter(!is.na(counts.value) & !is.na(CN.gene_name)) %>%
distinct(),
value.var = "counts.value", formula = CN.gene_name~PDO)
rownames(joint_counts_CN_dcast) = joint_counts_CN_dcast[,1]; joint_counts_CN_dcast[,1] <- NULL
rownames(joint_counts_CN_dcast_TPM) = joint_counts_CN_dcast_TPM[,1]; joint_counts_CN_dcast_TPM[,1] <- NULL
plot(joint_counts_CN_dcast$PDO3, joint_counts_CN_dcast$PDO9)
plot(joint_counts_CN_dcast$PDO5, joint_counts_CN_dcast$PDO6)
plot(joint_counts_CN_dcast$PDO7, joint_counts_CN_dcast$PDO8)
plot((joint_counts_CN_dcast$PDO6), (joint_counts_CN_dcast$PDO10))
# pairs(joint_counts_CN_dcast)
cor_rnaseq <- cor(joint_counts_CN_dcast %>% filter(rownames(joint_counts_CN_dcast) %in% coding_genes$external_gene_name))
cor_rnaseq_TPM <- cor(joint_counts_CN_dcast_TPM)
pdf("../../figures_GRCh37/heatmap_correlation_rnaseq.pdf")
print(pheatmap::pheatmap(cor_rnaseq))
dev.off()
## makes you think that the values might have been reshuffled e.g. PDO10 (119178org) and PDO6 seem to be very similar
# pheatmap::pheatmap(cor_rnaseq_TPM)
plot(joint_counts_CN$DESeq.count, joint_counts_CN$counts.value)
dcast_2 <- dcast(deseq_counts, Gene~DESEq.sample, value.var = "DESeq.count", fun.aggregate = mean)
plot(dcast_2$`119148org`, dcast_2$`119178org`)
deseq_counts0 <- read.table("../../../RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',', header = T)
renaming[renaming$PDO %in% c('PDO6', 'PDO10'),]
plot(deseq_counts0$JBLAB.19902, deseq_counts0$JBLAB.19907)
## working on the hypothesis that JBLAB.19907 is actually PDO5, and not PDO10:
JBLAB.19907
## get the gene expression from PDO10 and the copy number from PDO5, to see if there is a good correlation
pdo_current_name <- 'PDO10'
pdo_of_interest <- 'PDO8'
pdo5_CN <- joint_counts_CN[joint_counts_CN$PDO == pdo_of_interest,c('CN.gene_name', 'scaled_centered_weighted_CN')] %>% filter(!is.na(CN.gene_name))
possiblepdo5_GE <- joint_counts_CN[joint_counts_CN$PDO == pdo_current_name,c('CN.gene_name', 'scaled_centered_DESeq')] %>% filter(!is.na(CN.gene_name))
currentpdo5_GE <- joint_counts_CN[joint_counts_CN$PDO == pdo_of_interest,c('CN.gene_name', 'scaled_centered_DESeq')] %>% filter(!is.na(CN.gene_name))
grid.arrange(ggplot(cbind.data.frame(cn=pdo5_CN$scaled_centered_weighted_CN,
ge=unlist(possiblepdo5_GE[match(unlist(pdo5_CN[,'CN.gene_name']),
unlist(possiblepdo5_GE[,'CN.gene_name'])),'scaled_centered_DESeq'])), aes(x=cn, y=ge))+geom_point()+geom_smooth()+
ggtitle(paste0('Suggested ', pdo_of_interest, '(current ', pdo_current_name, ')')),
ggplot(cbind.data.frame(cn=pdo5_CN$scaled_centered_weighted_CN,
ge=unlist(currentpdo5_GE[match(unlist(pdo5_CN[,'CN.gene_name']),
unlist(currentpdo5_GE[,'CN.gene_name'])),'scaled_centered_DESeq'])),
aes(x=cn, y=ge))+geom_point()+geom_smooth()+
ggtitle(paste0('Current ', pdo_of_interest)), nrow=1)
##' for each RNASeq vector, and for each CN vector, match the names of any two organoids and compute the
##' correlation of GE of organoid 1 with the CN of organoid 2
orgs <- unique(joint_counts_CN0$PDO)[!is.na(unique(joint_counts_CN0$PDO))]
joint_counts_CN0 = cbind.data.frame(joint_counts_CN0,
deseq_counts[match(paste0(joint_counts_CN0$counts.Var1, joint_counts_CN0$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN0 = joint_counts_CN0 %>%
group_by(CN.gene_name) %>%
mutate(scaled_centered_weighted_CN = exp(scale(log(CN.value))),
scaled_centered_weighted_CN_mean = (scale((CN.value))),
scaled_centered_DESeq = scale(DESeq.count),
scaled_centered_TPM = scale(counts.value)
)
cors_GE_CN <- outer(orgs, orgs, Vectorize(function(pdo_A, pdo_B){
cat(pdo_A, '\t')
cat(pdo_B, '\n')
.x1 <- joint_counts_CN0 %>% filter(PDO == pdo_A) %>% filter(!is.na(scaled_centered_weighted_CN))
.x2 <- joint_counts_CN0 %>% filter(PDO == pdo_B)
.x2 <- .x2[match(paste0(.x1$CN.gene_name), paste0(.x2$CN.gene_name)),] %>% filter(!is.na(scaled_centered_DESeq))
.x1 <- .x1[match(paste0(.x2$CN.gene_name), paste0(.x1$CN.gene_name)),]
cor(.x1$scaled_centered_weighted_CN, .x2$scaled_centered_DESeq)
}))
rownames(cors_GE_CN) <- colnames(cors_GE_CN) <- orgs
pdf("../../figures_GRCh37/heatmap_correlation_rnaseq_CN_GE.pdf")
print(pheatmap::pheatmap(cors_GE_CN, cluster_rows = F, cluster_cols = F))
dev.off()
# joint_counts_CN$
ggplot(joint_counts_CN_normalised_highlyvar, aes(x=nearestGeneCN.value,
y=counts.counts.value))+
geom_point(alpha=0.9)+
geom_smooth()+
facet_wrap(.~factor(counts.Var1,
levels=c( "119058org", "119148org", "151723org", "151761org", "151773org", "23868org",  "32077org",
"50495org", "54059org",  "54276org", '118976org', '119127org', '54327org', '119178org','118947org' )),
nrow=2, scales = "free")
# xx <- joint_counts_CN[!duplicated(joint_counts_CN),] %>%
#   dplyr::select(PDO, DESeq.count, CN.gene_name) %>%
#   filter(!is.na(DESeq.count) & !is.na(CN.gene_name)) %>% distinct()
# sum(duplicated(xx))
# sum(duplicated(joint_counts_CN))
# sum(duplicated(joint_counts_CN[!duplicated(joint_counts_CN),]))
# frequency_genes <- joint_counts_CN %>% filter(!duplicated(joint_counts_CN))%>%
#   dplyr::select(PDO, DESeq.count, CN.gene_name) %>%
#   ungroup() %>% filter(!is.na(DESeq.count)) %>% dplyr::select(CN.gene_name) %>% table() %>% sort(decreasing = T)
#
# names(frequency_genes[frequency_genes>15])
# NPIPA7
# joint_counts_CN %>% filter(CN.gene_name == 'NPIPA7', PDO=='PDO3')
tacna <- read.table("~/Desktop/Degree of TACNA50/TCGA_degree_of_TACNA50.txt", sep = "\t",
header=T, comment.char="#",
na.strings=".", stringsAsFactors=FALSE,
quote="", fill=FALSE)
colnames(tacna)
ggplot((df_gene_characteristics[,!duplicated(t(df_gene_characteristics))] %>%
filter(df_average_bottomCN.Gene %in% tacna$SYMBOL[tacna$Degree.of.TACNA > .9])),
aes(y=r2_normCNnormDESeq, x=df_average_bottomCN.average_comparison_CN_DESeq,
col=log2(averageDESeq2)))+
geom_point()+
geom_line(aes(group=r2_raw_DESeq2.Gene), alpha=0.1)+
scale_y_continuous(trans = "log2")+
geom_smooth()+geom_density_2d()
ggsave("../../figures_GRCh37/r2normCNnormDESeq_vs_averagebottomCN_highTACNA.pdf", width = 6, height = 6)
ggplot((df_gene_characteristics[,!duplicated(t(df_gene_characteristics))]),
aes(y=r2_normCNnormDESeq, x=df_average_bottomCN.average_comparison_CN_DESeq,
col=log2(averageDESeq2)))+
geom_point(alpha=0.2)+
geom_line(aes(group=r2_raw_DESeq2.Gene), alpha=0.1)+
scale_y_continuous(trans = "log2")+
geom_smooth()+geom_density_2d()
ggsave("../../figures_GRCh37/r2normCNnormDESeq_vs_averagebottomCN_2.pdf", width = 6, height = 6)
ggplot(joint_counts_CN %>% filter(CN.value > 2, !is.na(PDO)), aes(x=scaled_centered_weighted_CN,
y=scaled_centered_DESeq))+
geom_smooth()+geom_density_2d()+facet_wrap(.~PDO)
ggsave("../../figures_GRCh37/scatterplot_normCNweighted_normDESeq_contour.pdf", width = 6, height = 6)
ggplot(joint_counts_CN %>% filter(CN.value > 2, !is.na(PDO),
CN.gene_name %in% tacna$SYMBOL[tacna$Degree.of.TACNA > .9]), aes(x=scaled_centered_weighted_CN,
y=scaled_centered_DESeq))+
geom_smooth()+geom_density_2d()+facet_wrap(.~PDO)
ggsave("../../figures_GRCh37/scatterplot_normCNweighted_normDESeq_contour_highTACNA.pdf", width = 6, height = 6)
ggplot(joint_counts_CN %>%filter(CN.gene_name == 'TTK'), aes(x=CN.L1, y=counts.value))+geom_point()
auc <- read.table("../../../survival_analysis/data/20200419-AUC-organoids_PFI.csv", sep = ',', header = T)
auc <- read.table("../../../survival_analysis/data/20200419-AUC-organoids.csv", sep = ',', header = T)
MAD1 <- joint_counts_CN %>% filter(CN.gene_name == 'MAD1L1')
MAD1_and_drugs <- cbind.data.frame(MAD1, auc[match(MAD1$PDO, renaming$PDO[match( auc$id, gsub("org", "", renaming$ID),)]),])[,c('DESeq.count', "auc_ll5.AZD8186",
"auc_ll5.AZD2014", "auc_ll5.AZD5363",
"auc_ll5.AZD6738",     "auc_ll5.AZD1775",
"auc_ll5.Paclitaxel",  "auc_ll5.Oxaliplatin",
"auc_ll5.Doxorubicin", "auc_ll5.Gemcitabine",
"auc_ll5.APR.246")]
pairs(MAD1_and_drugs)
deseq_counts_match_with_renormalised <- deseq_counts0[,match(colnames(deseq_counts_renormalised0), colnames(deseq_counts0))]
rownames(deseq_counts_match_with_renormalised) <- rownames(deseq_counts_renormalised0)
deseq_counts_match_with_renormalised <- deseq_counts_match_with_renormalised[match(rownames(deseq_counts_renormalised0), rownames(deseq_counts_match_with_renormalised)),]
dim(deseq_counts_match_with_renormalised)
dim(deseq_counts_renormalised0)
plot(log(unlist(as.vector(deseq_counts_match_with_renormalised))), log(unlist(as.vector(deseq_counts_renormalised0))))
abline(coef=c(0,1), col='blue')
df_pdo3_pdo9 <- data.frame(PDO3=(deseq_counts0[,gsub('-', '.', renaming$sampleNameRNAseq[renaming$PDO == 'PDO3'])]),
PDO9=(deseq_counts0[,gsub('-', '.', renaming$sampleNameRNAseq[renaming$PDO == 'PDO9'])]))
rownames(df_pdo3_pdo9) = deseq_counts0$X
df_pdo3_pdo9$off_diag_1 <- log(df_pdo3_pdo9[,1])-log(df_pdo3_pdo9[,2]) > 2
df_pdo3_pdo9$off_diag_2 <- log(df_pdo3_pdo9[,1])-log(df_pdo3_pdo9[,2]) < -2
df_pdo3_pdo9$col = interaction(df_pdo3_pdo9$off_diag_1, df_pdo3_pdo9$off_diag_2)
data(c2BroadSets) ## from GSVAdata`
df_pdo3_pdo9$HRD = ifelse(rownames(df_pdo3_pdo9) %in% t2g_38$ensembl_gene_id[match(geneIds(c2BroadSets['KEGG_HOMOLOGOUS_RECOMBINATION']@.Data[[1]]), t2g_38$entrezgene_id)],
yes = t2g_38$external_gene_name[match(rownames(df_pdo3_pdo9), t2g_38$ensembl_gene_id)], no = NA)
remove_na <- function(i){
.x <- i[!is.na(i)]
names(.x) <- names(i)[!is.na(i)]
.x
}
ggplot(df_pdo3_pdo9, aes(x=PDO3, y=PDO9, col=col, label=HRD))+geom_point()+
scale_x_continuous(trans = 'log2')+scale_y_continuous(trans = 'log2')+
geom_abline(slope = 1, intercept = 0, lty='dashed')+
scale_fill_manual(values = c('blue', 'red', 'green'))+
geom_label_repel()
ggsave("../../figures_GRCh37/PDO3_PDO9_HRD.pdf")
library(goseq)
goResults_upper <- goseq(nullp((remove_na(setNames(object = as.numeric(df_pdo3_pdo9$off_diag_1), nm = rownames(df_pdo3_pdo9)))),
"hg19", "ensGene"), "hg19","ensGene", test.cats=c("GO:BP"))
goResults_lower <- goseq(nullp((remove_na(setNames(object = as.numeric(df_pdo3_pdo9$off_diag_2), nm = rownames(df_pdo3_pdo9)))),
"hg19", "ensGene"), "hg19","ensGene", test.cats=c("GO:BP"))
pdf("../../figures_GRCh37/PDO3_PDO9_GO.pdf", width = 10, height = 4)
grid.arrange(goResults_upper %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")+
ggtitle('Upper diagonal genes (enriched in PDO9)'),
goResults_lower %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")+
ggtitle('Lower diagonal genes (enriched in PDO3)'),
nrow=1)
dev.off()
genes_pdo3_pdo9_upper <- deseq_counts0[match(remove_na(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_1]), deseq_counts0$X),gsub('-', '.', renaming$sampleNameRNAseq[match(remove_na(unique(joint_counts_CN$PDO)), renaming$PDO)])]
genes_pdo3_pdo9_lower <- deseq_counts0[match(remove_na(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_2]), deseq_counts0$X),gsub('-', '.', renaming$sampleNameRNAseq[match(remove_na(unique(joint_counts_CN$PDO)), renaming$PDO)])]
colnames(genes_pdo3_pdo9_upper) <- renaming$PDO[match(gsub("[.]", "-", colnames(genes_pdo3_pdo9_upper)), renaming$sampleNameRNAseq)]
colnames(genes_pdo3_pdo9_lower) <- renaming$PDO[match(gsub("[.]", "-", colnames(genes_pdo3_pdo9_lower)), renaming$sampleNameRNAseq)]
pheatmap(as.matrix(log(genes_pdo3_pdo9_upper+0.01)))
pheatmap(as.matrix(log(genes_pdo3_pdo9_lower+0.01)))
# library(topGO)
# sampleGOdata <- new("topGOdata",
#                     description = "Simple session", ontology = "BP",
#                     allGenes = setNames(rep(1, sum(df_pdo3_pdo9$off_diag_1 | df_pdo3_pdo9$off_diag_2, na.rm = T)),
#                                         remove_na(c(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_1],
#                                            rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_2]))),
#                     geneSel = function(i){i %in% remove_na(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_1])},
#                     nodeSize = 10,
#                     annot = annFUN.db, affyLib = affyLib)
give_goterm_list_of_genes <- function(genes_in_list_ens, genes_not_in_list_ens){
require(topGO)
.xentrez_list = t2g_38[match(genes_in_list_ens, t2g_38$ensembl_gene_id),'entrezgene_id']
.xentrez_list = .xentrez_list[!is.na(.xentrez_list)]
.xentrez = t2g_38[match(genes_not_in_list_ens, t2g_38$ensembl_gene_id),'entrezgene_id']
.xentrez = .xentrez[!is.na(.xentrez)]
.xres_gosimenrich = GOSim::GOenrichment(genesOfInterest = as.character(.xentrez_list), allgenes = as.character(.xentrez))
.xres_gosimenrich
}
gosim_upper <- give_goterm_list_of_genes(genes_in_list_ens = remove_na(c(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_1])),
genes_not_in_list_ens = remove_na(c(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_1], rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_2])))
gosim_lower <- give_goterm_list_of_genes(genes_in_list_ens = remove_na(c(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_2])),
genes_not_in_list_ens = remove_na(c(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_1], rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_2])))
gosim_upper$GOTerms$Term[order(gosim_upper$p.values)]
gosim_lower$GOTerms$Term[order(gosim_lower$p.values)]
gosim_upper$GOTerms$go_id[order(gosim_upper$p.values)[1]]
gosim_upper$GOTerms$Term[order(gosim_upper$p.values)[1]]
gosim_upper$GOTerms$Term[order(gosim_upper$p.values)[1]]
df_pdo3_pdo9[,"Genes_GO:0045471_ethanol"] = ifelse(rownames(df_pdo3_pdo9) %in% t2g_38$ensembl_gene_id[match(gosim_upper$genes[[gosim_upper$GOTerms$go_id[order(gosim_upper$p.values)][1]]], t2g_38$entrezgene_id)],
yes = t2g_38$external_gene_name[match(rownames(df_pdo3_pdo9), t2g_38$ensembl_gene_id)], no=NA)
df_pdo3_pdo9[,"Genes_GO:0021700"] = ifelse(rownames(df_pdo3_pdo9) %in% t2g_38$ensembl_gene_id[match(gosim_lower$genes[[1]], t2g_38$entrezgene_id)],
yes = t2g_38$external_gene_name[match(rownames(df_pdo3_pdo9), t2g_38$ensembl_gene_id)], no=NA)
df_pdo3_pdo9[,"Genes_allgo_upper"] = ifelse(rownames(df_pdo3_pdo9) %in% t2g_38$ensembl_gene_id[match(unlist(sapply(1:length(gosim_upper$GOTerms$go_id), function(j) gosim_upper$genes[[j]])), t2g_38$entrezgene_id)],
yes = t2g_38$external_gene_name[match(rownames(df_pdo3_pdo9), t2g_38$ensembl_gene_id)], no=NA)
df_pdo3_pdo9[,"Genes_allgo_lower"] = ifelse(rownames(df_pdo3_pdo9) %in% t2g_38$ensembl_gene_id[match(unlist(sapply(1:length(gosim_lower$GOTerms$go_id), function(j) gosim_lower$genes[[j]])), t2g_38$entrezgene_id)],
yes = t2g_38$external_gene_name[match(rownames(df_pdo3_pdo9), t2g_38$ensembl_gene_id)], no=NA)
ggplot(df_pdo3_pdo9, aes(x=PDO3, y=PDO9, col=col, label=`Genes_GO:0021700`))+geom_point()+
scale_x_continuous(trans = 'log2')+scale_y_continuous(trans = 'log2')+
geom_abline(slope = 1, intercept = 0, lty='dashed')+
scale_fill_manual(values = c('blue', 'red', 'green'))+
geom_label_repel()
ggplot(df_pdo3_pdo9, aes(x=PDO3, y=PDO9, col=col, label=`Genes_allgo_upper`))+geom_point()+
scale_x_continuous(trans = 'log2')+scale_y_continuous(trans = 'log2')+
geom_abline(slope = 1, intercept = 0, lty='dashed')+
scale_fill_manual(values = c('blue', 'red', 'green'))+
geom_label_repel()
ggplot(df_pdo3_pdo9, aes(x=PDO3, y=PDO9, col=col, label=`Genes_allgo_lower`))+geom_point()+
scale_x_continuous(trans = 'log2')+scale_y_continuous(trans = 'log2')+
geom_abline(slope = 1, intercept = 0, lty='dashed')+
scale_fill_manual(values = c('blue', 'red', 'green'))+
geom_label_repel()
ggplot(df_pdo3_pdo9, aes(x=PDO3, y=PDO9, col=col, label=`Genes_GO:0045471_ethanol`))+geom_point()+
scale_x_continuous(trans = 'log2')+scale_y_continuous(trans = 'log2')+
geom_abline(slope = 1, intercept = 0, lty='dashed')+
scale_fill_manual(values = c('blue', 'red', 'green'))+
geom_label_repel()
# library(KEGGREST)
# KEGGREST::keggList()
library(ReactomePA)
enrichment_reactome_upper <- ReactomePA::enrichPathway(gene = remove_na(t2g_38$entrezgene_id[match(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_1], t2g_38$ensembl_gene_id)]),
organism = "human")
enrichment_reactome_lower <- ReactomePA::enrichPathway(gene = remove_na(t2g_38$entrezgene_id[match(rownames(df_pdo3_pdo9)[df_pdo3_pdo9$off_diag_2], t2g_38$ensembl_gene_id)]),
organism = "human")
enrichment_reactome_upper@result
summary(enrichment_reactome_upper)[,1:6]
summary(enrichment_reactome_lower)[,1:6]
##---------
## Correlation of CN status in all genome
# dcast_joint_counts_CN0 <- joint_counts_CN0[,c('CN.gene_name', 'CN.value', 'CN.L1')]
# dcast_joint_counts_CN0 = outer(unique(dcast_joint_counts_CN0$CN.gene_name),
#                                unique(dcast_joint_counts_CN0$CN.gene_name),
#                                Vectorize(function(i,j){
#   .x1 <- dcast_joint_counts_CN0 %>% filter(CN.gene_name == i) %>% dplyr::select(CN.value)
#   .x2 <- dcast_joint_counts_CN0 %>% filter(CN.gene_name == j) %>% dplyr::select(CN.value)
#   return(cor(x = .x2[,1], y = .x1[match(rownames(.x2), rownames(.x1)),1]))
#                                             }))
deseq_counts$chrom = ag$seq_name[match(deseq_counts$Gene, ag$gene_name)]
head(deseq_counts)
table(deseq_counts$chrom)
deseq_counts$PDO= renaming$PDO[match(deseq_counts$DESEq.sample, renaming$ID)]
ggplot(deseq_counts, aes(x=PDO, y=DESeq.count))+geom_boxplot()
ggplot(deseq_counts %>% filter(grepl('PDO', PDO)),
aes(x=PDO, y=DESeq.count))+geom_boxplot()
ggsave("../../figures_GRCh37/counts_persample_DESeq2.pdf", width=10, height=10)
ggplot(joint_counts_CN, aes(x=PDO, y=counts.value))+geom_boxplot()
ggsave("../../figures_GRCh37/counts_persample_TPM.pdf", width=10, height=10)
ggplot(joint_counts_CN0, aes(x=PDO, y=counts.value))+geom_boxplot()
ggsave("../../figures_GRCh37/counts_persample_TPM_2.pdf", width=10, height=10)
ggplot( joint_counts_CN %>% filter(CN.gene_name == 'CDK12'), aes(x=log2(CN.value), y=DESeq.count, label=PDO))+geom_point()+
geom_label_repel(alpha=0.2)+
ggtitle('CDK12')+labs(x='Absolute CN (log2)', y='DESeq2 counts')
ggsave("../../figures_GRCh37/CDK12.pdf", height = 4, width = 4)
# MYC is said to have a correlation of almost 1
df_gene_characteristics[df_gene_characteristics$Gene == 'MYC',]
ggplot((df_gene_characteristics[,!duplicated(t(df_gene_characteristics))] %>%
filter(df_average_bottomCN.Gene %in% tacna$SYMBOL[tacna$Degree.of.TACNA > .9])),
aes(y=r2_normCNnormDESeq, x=df_average_bottomCN.average_comparison_CN_DESeq,
col=log2(averageDESeq2)))+
geom_point()+
geom_line(aes(group=r2_raw_DESeq2.Gene), alpha=0.1)+
scale_y_continuous(trans = "log2")+
geom_smooth()+geom_density_2d()
# MYC is said to have a correlation of almost 1
df_gene_characteristics[df_gene_characteristics$Gene == 'MYC','r2_normCNnormDESeq']
ggplot((df_gene_characteristics[,!duplicated(t(df_gene_characteristics))] %>%
filter(df_average_bottomCN.Gene %in% tacna$SYMBOL[tacna$Degree.of.TACNA > .9])),
aes(y=r2_normCNnormDESeq, x=df_average_bottomCN.average_comparison_CN_DESeq,
col=log2(averageDESeq2)))+
geom_point()+
geom_line(aes(group=r2_raw_DESeq2.Gene), alpha=0.1)+
scale_y_continuous(trans = "log2")+
geom_smooth()+geom_density_2d()
ggplot((df_gene_characteristics[,!duplicated(t(df_gene_characteristics))]),
aes(y=r2_normCNnormDESeq, x=df_average_bottomCN.average_comparison_CN_DESeq,
col=log2(averageDESeq2)))+
geom_point(alpha=0.2)+
geom_line(aes(group=r2_raw_DESeq2.Gene), alpha=0.1)+
scale_y_continuous(trans = "log2")+
geom_smooth()+geom_density_2d()
dev.off()
ggplot((df_gene_characteristics[,!duplicated(t(df_gene_characteristics))]),
aes(y=r2_normCNnormDESeq, x=df_average_bottomCN.average_comparison_CN_DESeq,
col=log2(averageDESeq2)))+
geom_point(alpha=0.2)+
geom_line(aes(group=r2_raw_DESeq2.Gene), alpha=0.1)+
scale_y_continuous(trans = "log2")+
geom_smooth()+geom_density_2d()
ggplot(joint_counts_CN %>% filter(CN.value > 2, !is.na(PDO)), aes(x=scaled_centered_weighted_CN,
y=scaled_centered_DESeq))+
geom_smooth()+geom_density_2d()+facet_wrap(.~PDO)
ggplot(df_gene_characteristics,
aes(x=cor_normCNnormDESeq, y=averageCN,
# label=ifelse( (log(averageCN) > 1) & (cor_normCNnormDESeq > 0.8), yes = Gene, no = NA  )))+
label=ifelse( (log(averageCN) > 1.5) & (cor_normCNnormDESeq > 0.5), yes = Gene, no = NA  )))+
geom_point(alpha=0.2)+
geom_density_2d()+
scale_y_continuous(trans = "log2")+
geom_label_repel(max.overlaps = 30)+theme_bw()+
labs(x='Correlation between CN and GE', y='Average copy number')
df_gene_characteristics[df_gene_characteristics$Gene == 'MYC',cor_normCNnormDESeq]
df_gene_characteristics[df_gene_characteristics$Gene == 'MYC','cor_normCNnormDESeq']
MYCdf_gene_characteristics <- df_gene_characteristics[df_gene_characteristics$Gene == 'MYC',]
MYCdf_gene_characteristics
MYCcorr_centered =  joint_counts_CN[,!duplicated(colnames(joint_counts_CN))] %>%
filter(Gene == 'MYC') %>% summarise(cor(scaled_centered_weighted_CN, scaled_centered_DESeq))
MYCcorr_centered
joint_counts_CN$scaled_centered_weighted_CN[joint_counts_CN$Gene == 'MYC',]
joint_counts_CN$scaled_centered_DESeq[joint_counts_CN$Gene == 'MYC',]
remove_na(joint_counts_CN$scaled_centered_weighted_CN[joint_counts_CN$Gene == 'MYC',])
remove_na(joint_counts_CN$scaled_centered_DESeq[joint_counts_CN$Gene == 'MYC',])
plot(remove_na(joint_counts_CN$scaled_centered_weighted_CN[joint_counts_CN$Gene == 'MYC',]),
remove_na(joint_counts_CN$scaled_centered_DESeq[joint_counts_CN$Gene == 'MYC',]))
cor(remove_na(joint_counts_CN$scaled_centered_weighted_CN[joint_counts_CN$Gene == 'MYC',]),
remove_na(joint_counts_CN$scaled_centered_DESeq[joint_counts_CN$Gene == 'MYC',]))
