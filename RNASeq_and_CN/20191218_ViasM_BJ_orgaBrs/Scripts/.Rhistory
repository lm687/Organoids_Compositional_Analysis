library(compositions)
library(CompSign)
library(QDNAseq)
library(Biobase)
library(RColorBrewer)
library(dplyr)
library(tidyverse)
library(MASS)
library(pheatmap)
library(ggdendro)
library(readxl)
library(CNTools)
library(GenomicRanges)
source("../../../../other_repos/BriTROC-cnsignatures-bfb69cd72c50/main_functions.R")
source("helper_functions.R")
n <- 60
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unique(unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals))))
chrlen = readRDS("data/chrlen.RDS")
give_short_names = function(i){
if(grepl('TCGA', i)){
paste0(strsplit(i, split = '-')[[1]][1:3], collapse='-')
}else{
i
}
}
clr_vec <- function(x){
log(x) - mean(log(x))
}
clr_mat <- function(X){
.res <- t(apply(X, 1, clr_vec))
stopifnot(dim(.res) == dim(X))
.res
}
org<- as(readRDS("data/organoid_exposures.rds"), 'matrix')
# rownames(org) <- paste0('Sample ', 1:nrow(org))
names_orgs = readxl::read_xlsx("data/NewOrganoidNaming.xlsx")
names_orgs$`new name`[match(rownames(org), paste0(names_orgs$`old name`, 'org'))]
rownames(org) = names_orgs$`new name`[match(rownames(org), paste0(names_orgs$`old name`, 'org'))]
rename_rows = function(i, new_names){
rownames(i) = new_names; return(i)}
createBarplot(rename_rows(org, gsub('Sample ', 'PDO', rownames(org))), remove_labels = FALSE, order_labels = gsub('Sample ', 'PDO', names(sort(org[,1])))) +
scale_fill_brewer(palette="Dark2")+labs(y='Exposure')+
ggtitle('Exposures for the organoids')+labs(x='')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
createBarplot(rename_rows(org, gsub('Sample ', 'PDO', rownames(org))), remove_labels = FALSE, order_labels = gsub('Sample ', 'PDO', names(sort(org[,1])))) +
scale_fill_brewer(palette="Dark2")+labs(y='Exposure')+
ggtitle('Exposures for the organoids')+labs(x='')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
exposures = readRDS("~/Desktop/ascites_exposures.rds")
dim(exposures)
ascites = read.csv("data/asorg_PDO.csv")
ascites
ascites = read.csv("data/asorg_PDO.csv")
exposures = readRDS("~/Desktop/ascites_exposures.rds")
exposures
ascites
book_ascites = readxl::read_xlsx("Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/copy_number_analysis_organoids/data/Book1.xlsx")
book_ascites = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/copy_number_analysis_organoids/data/Book1.xlsx")
book_ascites
rownames(exposures)
rownames(exposures) = book_ascites$organoid[match(rownames(exposures), book_ascites$`JBLAB-number`)]
book_ascites$organoid[match(rownames(exposures), book_ascites$`JBLAB-number`)]
match(rownames(exposures), book_ascites$`JBLAB-number`)
exposures = exposures[match(rownames(exposures), book_ascites$`JBLAB-number`),]
exposures
rownames(exposures)
apply(exposures, 1, is.na)
colSums(apply(exposures, 1, is.na))
colSums(apply(exposures, 1, is.na)) == 7
exposures = exposures[!colSums(apply(exposures, 1, is.na)) == 7,]
exposures
book_ascites$organoid[match(rownames(exposures), book_ascites$`JBLAB-number`)]
rownames(exposures)
match(rownames(exposures), book_ascites$`JBLAB-number`)
exposures
exposures = readRDS("~/Desktop/ascites_exposures.rds")
exposures
ggplot(melt(cbind(org=rownames(exposures), exposures)), aes(x=org, y=value, fill=variable))+geom_bar(stat='identity')
org == exposures
book_ascites = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/copy_number_analysis_organoids/data/Book1.xlsx")
exposures = exposures[match(book_ascites$`JBLAB-number`, rownames(exposures)),]
exposures
rownames(exposures) = book_ascites$organoid[match(book_ascites$`JBLAB-number`, rownames(exposures))]
exposures
exposures
ascites
exposures
rownames(exposures)
gsub('org', '', rownames(exposures))
ascites[gsub('org', '', rownames(exposures)),]
match(gsub('org', '', rownames(exposures)) rownames(ascites))
ascites[match(gsub('org', '', rownames(exposures)), rownames(ascites)),]
match(gsub('org', '', rownames(exposures)), rownames(ascites))
rownames(ascites)
ascites
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),]
exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),] == exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)]
exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)] == exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)]
exposures
ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)] == exposures
all.equal(ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)], exposures)
as.matrix(scites[match(gsub('org', '', rownames(exposures)))
)
as.matrix(ascites[match(gsub('org', '', rownames(exposures)))
)
as.matrix(ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)])
matched_ascites = ascites[match(gsub('org', '', rownames(exposures)), (ascites$sample)),2:ncol(ascites)]
matched_ascites[1,] == exposures[1,]
matched_ascites
exposures
exposures[1,]
matched_ascites
exposures[1,]
matched_ascites[1,]
exposures[1,]
##
joint_counts_CN_TPM = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
##
joint_counts_CN_TPM = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN_TPM)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
require(ggplot2)
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1)
joint_counts_CN = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1)
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
system('mkdir ~/Desktop/Vias/figures/')
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("~/Desktop/Vias/figures/joint_counts_CN_TMB_all.pdf")
dev.off()
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("~/Desktop/Vias/figures/joint_counts_CN_TMB_all.pdf", width=10, height=10)
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("~/Desktop/Vias/figures/joint_counts_CN_TMB_all_loglog.pdf", width=10, height=8)
topvariable = readLines("~/Desktop/Vias/top_variable.txt")
topvariable
topvariable = read.table("/Vias/top_variable.txt", comment.char = "#")
topvariable = read.table("~/Desktop//Vias/top_variable.txt", comment.char = "#")
topvariable
head(topvariable)
head(joint_counts_CN)
joint_counts_CN %>% filter(CN.gene_name %in% topvariable)
require(dplyr)
joint_counts_CN %>% filter(CN.gene_name %in% topvariable)
joint_counts_CN$topvariable$V1
topvariable$V1
joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1)
head()
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1), aes(x=CN.value, y=counts.value, col=CN.gene_name))
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1), aes(x=CN.value, y=counts.value, col=CN.gene_name))+
geom_point()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TMB_topvar.pdf")
for(i in topvariable$V1){
ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+ggtitle(i)
}
dev.off()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TMB_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+ggtitle(i))
}
dev.off()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TPM_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+geom_point()+ggtitle(i))
}
dev.off()
warnings()
i=topvariable$V1[1]
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+geom_point()+ggtitle(i))
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+
geom_point()+geom_smooth()+ggtitle(i))
head(joint_counts_CN)
require(ggrepel)
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel())
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
pdf("~/Desktop/Vias/figures/joint_counts_CN_TPM_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
rm(list = ls())
require(ggplot2)
require(ggrepel)
require(dplyr)
joint_counts_CN = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv")
head(deseq_counts)
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',')
head(deseq_counts)
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',', header = T)
head(deseq_counts)
head(melt(deseq_counts))
require(reshape2)
head(melt(deseq_counts))
deseq_counts = (melt(deseq_counts))
colnames(deseq_counts) = c('Gene', 'DESEq.sample', 'DESeq.count')
require(biomaRt)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
ensembl <- useEnsembl(biomart = "genes")
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
ensembl
rownames(deseq_counts)
deseq_counts$Gene
t2g <- getBM(
attributes = c('ensembl_gene_id', 'external_gene_name'),
values = deseq_counts$Gene,
filter = 'ensembl_gene_id',
mart = mart, useCache = FALSE)
t2g <- getBM(
attributes = c('ensembl_gene_id', 'external_gene_name'),
values = deseq_counts$Gene,
filter = 'ensembl_gene_id',
mart = ensembl, useCache = FALSE)
saveRDS(t2g, file = "~/Desktop/t2g.RDS")
entrezgene_id_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
head(entrezgene_id_matched)
head(deseq_counts$Gene)
rm(entrezgene_id_matched)
genename_ensmid_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
genename_ensmid_matched
deseq_counts$Gene = genename_ensmid_matched
joint_counts_CN$CN.gene_name
joint_counts_CN$CN.L1
joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name)
paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name)
head(deseq_counts)
readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming
deseq_counts$DESEq.sample
match(gsub("[.]", "-", deseq_counts$DESEq.sample))
match(gsub("[.]", "-", deseq_counts$DESEq.sample), joint_counts_CN$CN.L1)
gsub("[.]", "-", deseq_counts$DESEq.sample)
joint_counts_CN$CN.L1
renaming
match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)
match(renaming$sampleNameRNAseq, gsub("[.]", "-", deseq_counts$DESEq.sample))
match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)
head(renaming)
renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
joint_counts_CN$CN.gene_name
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
paste0(deseq_counts$DESEq.sample)
paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)
match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene))
deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),]
dim(deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
dim(joint_counts_CN)
head(deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN = cbind.data.frame(joint_counts_CN, deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN[1,]
joint_counts_CN[4,]
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("~/Desktop/Vias/figures/joint_counts_CN_DESeq_all.pdf", width=10, height=10)
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("~/Desktop/Vias/figures/joint_counts_CN_DESeq_all_loglog.pdf", width=10, height=8)
pdf("~/Desktop/Vias/figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
topvariable = read.table("~/Desktop//Vias/top_variable.txt", comment.char = "#")
pdf("~/Desktop/Vias/figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
plot(joint_counts_CN$counts.value, joint_counts_CN$DESeq.count)
rm(list = ls())
require(ggplot2)
require(ggrepel)
require(dplyr)
require(reshape2)
require(biomaRt)
##------------------------------------------------------------------------------------------------------------##
joint_counts_CN = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
require(ggplot2)
require(ggrepel)
require(dplyr)
require(reshape2)
require(biomaRt)
##------------------------------------------------------------------------------------------------------------##
joint_counts_CN = readRDS("../output/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
##------------------------------------------------------------------------------------------------------------##
corDfAll = read.csv("../GexVsCnGwDeseq2/corStatTable.csv")
head(corDfAll)
joint_counts_CN_TPM_subset = read.csv("../output/joint_counts_CN_TPM_subset.RDS")
joint_counts_CN_TPM_subset
joint_counts_CN_TPM_subset = readRDS("../output/joint_counts_CN_TPM_subset.RDS")
head(joint_counts_CN_TPM_subset)
joint_counts_CN
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
joint_counts_CN_TPM_subset$nearestGeneCN.gene
joint_counts_CN$CN.gene_name
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
##------------------------------------------------------------------------------------------------------------##
joint_counts_CN = readRDS("../output/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
##------------------------------------------------------------------------------------------------------------##
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',', header = T)
deseq_counts = (melt(deseq_counts))
colnames(deseq_counts) = c('Gene', 'DESEq.sample', 'DESeq.count')
# mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
# ensembl <- useEnsembl(biomart = "genes")
# ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
#
# t2g <- getBM(
#   attributes = c('ensembl_gene_id', 'external_gene_name'),
#   values = deseq_counts$Gene,
#   filter = 'ensembl_gene_id',
#   mart = ensembl, useCache = FALSE)
# saveRDS(t2g, file = "~/Desktop/t2g.RDS")
t2g = readRDS("~/Desktop/t2g.RDS")
genename_ensmid_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
deseq_counts$Gene = genename_ensmid_matched
renaming = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name))
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
joint_counts_CN = cbind.data.frame(joint_counts_CN, deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN[4,]
##------------------------------------------------------------------------------------------------------------##
corDfAll = read.csv("../GexVsCnGwDeseq2/corStatTable.csv")
joint_counts_CN_TPM_subset = readRDS("../output/joint_counts_CN_TPM_subset.RDS")
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
## only genes included in Stephane's analysis
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(c(0,1), col='blue', lty='dashed')
## only genes included in Stephane's analysis
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')
## only genes included in Stephane's analysis
,ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')
## only genes included in Stephane's analysis
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+theme_bw()+
# scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')+geom_smooth()
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(rnaseqRpkg)
library(biomaRt)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(DESeq2)
library(reshape2)
## Load file output from DESeq2, which has been created with 1_run_DE.sh
load("../objects/deaObjectFile")
deObj = `~response`
##---------------------------------------------------------------------------------------------------------------##
## Run differential expression with DESeq
# In any case, the contrast argument of the function results takes a character vector of length three: the name of the variable, the name of the factor level for the numerator of the log2 ratio, and the name of the factor level for the denominator. The contrast argument can also take other forms, as described in the help page for results and below
results <- DESeq2::results(deObj, c("response", "complete_remission_or_response", "progressive_disease"),
alpha = 0.05, format = "DataFrame")
rownames_short = sapply(rownames(results), function(i) strsplit(i, '[.]')[[1]][1])
## Re-name
mart <- useMart(biomart = "ensembl", dataset = "hsapiens_gene_ensembl")
gene_conversion <- getBM(attributes = c("external_gene_name", "ensembl_gene_id"),
filters = "ensembl_gene_id", values = rownames_short,
mart = mart)
gene_conversion = gene_conversion[match(rownames_short, gene_conversion$ensembl_gene_id),]
dim(gene_conversion)
dim(results)
results = cbind(gene_conversion, results)
results = results[order(results$log2FoldChange),]
highDA = results[1:20,]
lowDA = highDA[nrow(highDA):(nrow(highDA)-20),]
ggplot(cbind.data.frame(log2fc= results$log2FoldChange, pval=-log10(results$padj)))+
geom_point(aes(x=log2fc, y=pval))
vlcano = function (res) {
df <- data.frame(labls = res$external_gene_name, lfc = res$log2FoldChange, pv = -log10(res$padj),
isDE = ifelse(is.na(res$padj), FALSE, res$padj < 0.05))
colNonSig <- "gray32"
colSig <- "red3"
colOut <- "blue"
dotShape <- 20
upShape <- 24
outShape <- 19
xlim <- c(-1, 1) * quantile(abs(df$lfc[is.finite(df$lfc)]),
probs = 0.995) * 1.1
ylim <- c(0, quantile(df$pv[is.finite(df$pv)], probs = 0.995) *
1.1)
df$vy <- pmin(df$pv, ylim[2])
df$vx <- pmax(xlim[1], pmin(xlim[2], df$lfc))
df$outY <- df$pv > ylim[2]
df$outX <- df$lfc < xlim[1] | df$lfc > xlim[2]
df$outXY <- df$outX & df$outY
dfNonSig <- df[!df$isDE, ]
dfNonSig$vy[is.na(dfNonSig$vy)] = 0
dfSigInlier <- df[df$isDE & !df$outX & !df$outY, ]
dfSigOutlier <- df[df$isDE & (df$outX | df$outY), ]
dfSigOutlier$shape <- ifelse(dfSigOutlier$outXY, outShape,
ifelse(dfSigOutlier$outY, upShape, dotShape))
p <- ggplot() +
geom_point(data = dfNonSig, aes(x = .data$vx,   y = .data$vy),
colour = colNonSig, pch = dotShape) +
geom_point(data = dfSigInlier, aes(x = .data$vx, y = .data$vy),
colour = colSig, shape = dotShape) +
ggrepel::geom_label_repel(data=dfSigInlier, aes(x=  .data$vx, y = .data$vy, label=labls))+
geom_point(data = dfSigOutlier,  aes(x = .data$vx, y = .data$vy),
colour = colOut, shape = dfSigOutlier$shape) +
ggrepel::geom_label_repel(data=dfSigOutlier, aes(x=  .data$vx, y = .data$vy, label=labls))+
theme(legend.position = "none") + ggtitle("Volcano Plot") +
labs(x = "Log of Fold Change", y = "-log10 of FDR")+
ylim(c(0, 1.8))
return(p)
}
DE_results_TCGA = read.table("../objects/differential_all", sep = ',', header = T)
## Load the organoids DE
load("../files/deObject_SampleGroup_sensitive_vs_resistant.RData")
## e.g. JBLAB-19920 is PDO18 and has been excluded based on 3' bias
"JBLAB-19920" %in% colnames(SampleGroup)
length(colnames(SampleGroup)) ## 3' bias have been excluded
## but I am not sure why there are 14 instead of 15
"JBLAB-19939" %in% colnames(SampleGroup) ## the fourth sample with highest 3' bias
DE_results_org = DESeq2::results(SampleGroup)
joint_counts_CN
joint_counts_CN
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
require(ggplot2)
require(ggrepel)
require(dplyr)
require(reshape2)
require(biomaRt)
##------------------------------------------------------------------------------------------------------------##
joint_counts_CN = readRDS("../output/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',', header = T)
deseq_counts = (melt(deseq_counts))
colnames(deseq_counts) = c('Gene', 'DESEq.sample', 'DESeq.count')
# mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
# ensembl <- useEnsembl(biomart = "genes")
# ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
#
# t2g <- getBM(
#   attributes = c('ensembl_gene_id', 'external_gene_name'),
#   values = deseq_counts$Gene,
#   filter = 'ensembl_gene_id',
#   mart = ensembl, useCache = FALSE)
# saveRDS(t2g, file = "~/Desktop/t2g.RDS")
t2g = readRDS("~/Desktop/t2g.RDS")
genename_ensmid_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
deseq_counts$Gene = genename_ensmid_matched
renaming = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name))
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
joint_counts_CN = cbind.data.frame(joint_counts_CN, deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN[4,]
joint_counts_CN
head(joint_counts_CN)
saveRDS(joint_counts_CN, file = "../output/joint_counts_CN_TPM_DESeq2.RDS")
