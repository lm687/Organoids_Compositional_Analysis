theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO5
save_plot("../figures/PDO5.pdf", plot.PDO5)
#PDO8
plot.PDO8 <- micewlatest.df %>%
filter(mouseNumber == "466") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 466") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO8
save_plot("../figures/PDO8.pdf", plot.PDO8)
#PDO10
plot.PDO10 <- micewlatest.df %>%
filter(mouseNumber == "471") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 471") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO10
save_plot("../figures/PDO10.pdf", plot.PDO10)
#PDO12
plot.PDO12 <- micewlatest.df %>%
filter(mouseNumber == "468") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 468") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO12
save_plot("../figures/PDO12.pdf", plot.PDO12)
library(readr)
library(tidyverse)
library(dplyr)
library(cowplot)
micewlatest = read_csv("../data/19.08.2020_MiceW.csv")
micewlatest.df <- as.data.frame(micewlatest)
plot.micewlatest <- ggplot(micewlatest.df, aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 0.5) +
theme(axis.text.x = element_text(angle= 30, size = 5),strip.text.x = element_text(size = 8, colour = "red"))+
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight") +
facet_wrap(. ~ paste(pdo, mouseNumber), nrow = 2) +
panel_border()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
save_plot("../figures/19.08.2020_micew.pdf", plot.micewlatest)
#plots individually
#PDO1
plot.PDO1 <- micewlatest.df %>%
filter(mouseNumber == "472") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 472") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 100)) + scale_y_log10()
plot.PDO1
save_plot("../figures/PDO1.pdf", plot.PDO1)
#PDO2
plot.PDO2 <- micewlatest.df %>%
filter(mouseNumber == "475") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 475") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO2
save_plot("../figures/PDO2.pdf", plot.PDO2)
#PDO3
plot.PDO3 <- micewlatest.df %>%
filter(mouseNumber == "643") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 643") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO3
save_plot("../figures/PDO3.pdf", plot.PDO3)
#PDO4
plot.PDO4 <- micewlatest.df %>%
filter(mouseNumber == "642") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 642") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO4
save_plot("../figures/PDO4.pdf", plot.PDO4)
#PDO5
plot.PDO5 <- micewlatest.df %>%
filter(mouseNumber == "645") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 645") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO5
save_plot("../figures/PDO5.pdf", plot.PDO5)
#PDO8
plot.PDO8 <- micewlatest.df %>%
filter(mouseNumber == "466") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 466") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO8
save_plot("../figures/PDO8.pdf", plot.PDO8)
#PDO10
plot.PDO10 <- micewlatest.df %>%
filter(mouseNumber == "471") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 471") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO10
save_plot("../figures/PDO10.pdf", plot.PDO10)
#PDO12
plot.PDO12 <- micewlatest.df %>%
filter(mouseNumber == "468") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 468") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO12
save_plot("../figures/PDO12.pdf", plot.PDO12)
library(tidyverse)
library(readr)
PDS_PDO <- read_csv("../data/20191107-auc.csv")
View(X20191107_auc)
PDS_PDO$sample <- as.factor(PDS_PDO$sample)
PDS_PDO$sample <- as.factor(PDS_PDO$sample)
PDS_PDO.plot<- ggplot(data = PDS_PDO, aes(auc_ll5.sph, auc_ll5.org, colour = sample))+
geom_point() +
labs(x="Patient-derived spheroids", y="Patient-derived organoids")+
theme_classic() +
geom_smooth(method=lm, se=FALSE)
cor.test(PDS_PDO$auc_ll5.org, PDS_PDO$auc_ll5.sph, method = "pearson", conf.level = 0.95)
plot(PDS_PDO.plot)
passagesorganoids <- read_csv ("../data/AUCdifferentPassagesW.csv")
passagesorganoids$sample <- as.factor(passagesorganoids$sample)
passagesorganoids<-spread(passagesorganoids, key=passage, value=AUC)
passagesorganoid.plot<- ggplot(data = passagesorganoids, aes(early, late, colour = sample))+
geom_point() +
theme_classic() +
geom_smooth(method=lm)
plot(passagesorganoid.plot)
bioreporganoids <- read_csv ("../data/AUCbiolrepW.csv")
bioreporganoids$sample <- as.factor(bioreporganoids$sample)
bioreporganoids<-spread(bioreporganoids, key=replicate, value=AUC)
bioreporganoid.plot<- ggplot(data = bioreporganoids, aes(rep1, rep2, colour = sample))+
geom_point() +
theme_classic() +
geom_smooth(method=lm)
cor.test(bioreporganoids$rep1, bioreporganoids$rep2, method = "pearson", conf.level = 0.95)
plot(bioreporganoid.plot)
install.packages("googlesheets")
googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0")
remove.packages("googlesheets")
install.packages('gsheet')
library(gsheet)
gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file = gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
summary_file$`<!DOCTYPE html>`
summary_file = gsheet2text('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file = gsheet2text('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
summary_file = gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
xtable::xtable(summary_file)
##------------------------------------------------------------------------------------------------------------##
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
require(ggplot2)
require(ggrepel)
require(dplyr)
require(reshape2)
require(jcolors)
require(biomaRt)
require(gridExtra)
##------------------------------------------------------------------------------------------------------------##
##------------------------------------------------------------------------------------------------------------##
##' 3' bias samples to remove
remove_samples = rbind(c('PDO14', 'PDO16', 'PDO18'), c('54288org', '119025org', '32070org'))
##------------------------------------------------------------------------------------------------------------##
##------------------------------------------------------------------------------------------------------------##
joint_counts_CN = readRDS("../output/joint_counts_CN_TPM_20210301210511.RDS")
joint_counts_CN = joint_counts_CN %>% filter( !(counts.Var1 %in% remove_samples[2,]))
topvariable = read.table("../../top_variable.txt", comment.char = "#")
## now add DESeq counts
deseq_counts = read.table("../../../RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',', header = T)
deseq_counts = (melt(deseq_counts))
colnames(deseq_counts) = c('Gene', 'DESEq.sample', 'DESeq.count')
## Gene name conversion
# mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
# ensembl <- useEnsembl(biomart = "genes")
# ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
#
# t2g <- getBM(
#   attributes = c('ensembl_gene_id', 'external_gene_name'),
#   values = deseq_counts$Gene,
#   filter = 'ensembl_gene_id',
#   mart = ensembl, useCache = FALSE)
# saveRDS(t2g, file = "~/Desktop/t2g.RDS")
t2g = readRDS("~/Desktop/t2g.RDS")
genename_ensmid_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
deseq_counts$Gene = genename_ensmid_matched
renaming = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
joint_counts_CN = cbind.data.frame(joint_counts_CN, deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN[4,]
# saveRDS(joint_counts_CN, file = "../output/joint_counts_CN.RDS")
# corDfAll = read.csv("../GexVsCnGwDeseq2/corStatTable.csv")
corDfAll = readRDS("../output/corDfAll.RDS")
# joint_counts_CN_TPM_subset = readRDS("../output/joint_counts_CN_TPM_subset.RDS")
## add TPM
joint_counts_CN_TPM_subset = joint_counts_CN %>% filter( !(counts.Var1 %in% remove_samples[2,]))
joint_counts_CN_TPM_subset = cbind(joint_counts_CN_TPM_subset,
counts=joint_counts_CN[match(paste0(joint_counts_CN_TPM_subset$nearestGeneCN.variable, joint_counts_CN_TPM_subset$counts.Var2),
paste0(joint_counts_CN$counts.Var1, joint_counts_CN$counts.Var2)),])
plot(joint_counts_CN_TPM_subset$counts.value, joint_counts_CN_TPM_subset$counts.DESeq.count) ## we have added DESeq2
plot(joint_counts_CN_TPM_subset$counts.value, joint_counts_CN_TPM_subset$counts.counts.value)
length(table(corDfAll$GeneName))
length(table(joint_counts_CN_TPM_subset$nearestGeneCN.gene)) ## ?? we're losing genes?
# length(table(joint_counts_CN_subset$nearestGeneCN.gene)) ## ?? we're losing genes?
length(table(topvariable))
## only highly variable expressed genes
joint_counts_CN = joint_counts_CN %>% group_by(counts.Var2) %>% mutate(var_deseq=var(DESeq.count))
thres_var_GE = quantile(joint_counts_CN$var_deseq, na.rm = T, prob=0.9)
high_GEvar=joint_counts_CN %>% filter(DESeq.count > 0) %>%
filter(var_deseq > thres_var_GE)
## Link this to my weighted copy number for all genes
# joint_counts_CN = readRDS("../output/joint_counts_CN.RDS")
# joint_counts_CN = joint_counts_CN %>% filter( !(counts.Var1 %in% remove_samples[2,]))
dim(joint_counts_CN)
# x = joint_counts_CN[match(paste0(joint_counts_CN$counts.Var1, joint_counts_CN$counts.Var2),
#       paste0(joint_counts_CN$counts.Var1, joint_counts_CN$counts.Var2)),]
# plot(x$counts.value, joint_counts_CN$counts.value)
#
# head(joint_counts_CN[is.na(x$counts.value),])
# head(x[is.na(x$counts.value),])
head(corDfAll)
corDfAll_df = (melt(cbind.data.frame(gene=rownames(corDfAll),
corDfAll[,grepl('segVal_', colnames(corDfAll))])))
corDfAll_df$gene = sapply(corDfAll_df$gene, function(i) strsplit(i, '::')[[1]][2])
corDfAll_df$variable = gsub("segVal_", "", corDfAll_df$variable)
head(corDfAll_df)
joint_counts_CN_subset = cbind.data.frame(nearestGeneCN=corDfAll_df,
joint_counts_CN[match(paste0(corDfAll_df$gene, corDfAll_df$variable),
paste0(joint_counts_CN$counts.Var2, joint_counts_CN$counts.Var1)),])
# saveRDS(joint_counts_CN_subset, "../output/joint_counts_CN_subset.RDS")
## genes differentially abundant between normal tissue and cancer tissue
## colour these genes
load("../RnaSeqPip/DEAnalysis/deObject_SampleGroup.RData")
results_deseq = DESeq2::results(SampleGroup)
top_genes_normal_tumour = rownames(results_deseq)[order(results_deseq$padj, decreasing = F)[1:400]]
top_genes_normal_tumour = cbind.data.frame(ensembl=top_genes_normal_tumour, gene=t2g$external_gene_name[match(top_genes_normal_tumour, t2g$ensembl_gene_id)])
joint_counts_CN$topDiff_norm_tissue = ifelse(joint_counts_CN$CN.gene_name %in% top_genes_normal_tumour$gene,
yes = 'DE', no = 'nonDE' )
## coding
# ensembl <- useMart("ensembl",
#                    dataset = "hsapiens_gene_ensembl")
# coding_genes = getBM(attributes=c("ensembl_gene_id","external_gene_name","description"),
#                      filters='biotype', values=c('protein_coding'), mart=ensembl)
# saveRDS(coding_genes, "~/Desktop/coding_genes.RDS")
coding_genes.RDS <- readRDS("~/Desktop/coding_genes.RDS")
coding_genes$external_gene_name
## removing one outlier
joint_counts_CN_subset = joint_counts_CN_subset[-which.max(joint_counts_CN_subset$counts.value),]
##------------------------------------------------------------------------------------------------------------##
##------------------------------------------------------------------------------------------------------------##
## General plots
ggplot(joint_counts_CN %>% filter(CN.L1 == '118947org' ), aes(x=CN.value, y=counts.value))+geom_point()
## per organoid separately in facets
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("../../figures/joint_counts_CN_TPM_all.pdf", width=10, height=10)
## same, log scale
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("../../figures/joint_counts_CN_TPM_all_loglog.pdf", width=10, height=8)
## only most variable genes (when it comes to neighbouring CN)
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1), aes(x=CN.value, y=counts.value, col=CN.gene_name))+
geom_point()
pdf("../../figures/joint_counts_CN_TPM_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
##------------------------------------------------------------------------------------------------------------##
##------------------------------------------------------------------------------------------------------------##
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("../../figures/joint_counts_CN_DESeq_all.pdf", width=10, height=10)
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("../../figures/joint_counts_CN_DESeq_all_loglog.pdf", width=10, height=8)
pdf("../../figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
## raw correlation between CN and deseq count
plot(joint_counts_CN$counts.value, joint_counts_CN$DESeq.count)
##------------------------------------------------------------------------------------------------------------##
## Looking at genes in specific
ggplot(joint_counts_CN %>% filter(CN.gene_name == "CCNE1"), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle("CCNE1")+geom_label_repel()+theme_bw()
ggplot(joint_counts_CN %>% filter(CN.gene_name == "CDK12"), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle("CDK12")+geom_label_repel()+theme_bw()
##------------------------------------------------------------------------------------------------------------##
## only genes included in Stephane's analysis
## length(table(joint_counts_CN_TPM_subset$nearestGeneCN.gene))
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')
ggplot(joint_counts_CN %>% filter(DESeq.count > 0) %>%
filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')+geom_smooth()
ggplot(joint_counts_CN %>% filter(DESeq.count > 0) %>%
filter(CN.gene_name %in% joint_counts_CN_TPM_subset$nearestGeneCN.gene),
aes(x=CN.value, y=DESeq.count))+geom_point()+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')+geom_smooth()
ggplot(high_GEvar,
aes(x=CN.value, y=DESeq.count))+geom_point()+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")+
geom_abline(slope = 1, intercept = 0, col='blue', lty='dashed')+geom_smooth()
dim(joint_counts_CN_subset)
dim(joint_counts_CN_subset)
plot(joint_counts_CN_subset$CN.value,
joint_counts_CN_subset$nearestGeneCN.value)
ggplot(joint_counts_CN_subset, aes(x=CN.value, y=nearestGeneCN.value))+geom_point(alpha=0.2)+
labs(x='Weighted CN value of gene (Lena)', y='CN value of gene highly variable region nearby')+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("../../figures/scatterplot_stephane_lena.pdf", width = 7, height = 5)
ggplot(joint_counts_CN_subset, aes(x=CN.value, y=counts.value))+geom_point()+
scale_y_continuous(trans='log2')+geom_smooth()
ggplot(joint_counts_CN_subset %>% filter(counts.value > 0), aes(x=CN.value, y=counts.value))+geom_point()+
scale_y_continuous(trans='log2')+geom_smooth()+lims(x=c(0,10))
## all genes
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point()+
scale_y_continuous(trans='log2')+geom_smooth()
ggplot(joint_counts_CN, aes(x=CN.value, y=counts.value))+geom_point(alpha=0.2)+
scale_y_continuous(trans='log2')+geom_smooth(col='red')+lims(x=c(0,20))+theme_bw()+
labs(x='Weighted CN in gene', y='TPM (log2)')
ggsave("../../figures/scatterplot_CNweighted_TPM_all.pdf", width=8)
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point(alpha=0.2)+
scale_y_continuous(trans='log2')+geom_smooth(col='red')+lims(x=c(0,20))+theme_bw()+
labs(x='Weighted CN in gene', y='DEseq2 counts (log2)')
ggsave("../../figures/scatterplot_CNweighted_DEseq2counts_all.pdf", width=8)
## deseq counts and tmp seem to be quite similar
ggplot(joint_counts_CN, aes(x=counts.value, y=DESeq.count))+geom_point(alpha=0.2)
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count, col=topDiff_norm_tissue))+geom_point(alpha=0.2)+
scale_y_continuous(trans='log2')+geom_smooth(col='red')+lims(x=c(0,20))+theme_bw()+
labs(x='Weighted CN in gene', y='DEseq2 counts (log2)')+theme(legend.position = "bottom")
ggsave("../../figures/scatterplot_CNweighted_DEseq2counts_all_colourDE.pdf", width=4, height=4)
ggplot(joint_counts_CN[joint_counts_CN$topDiff_norm_tissue == 'DE',], aes(x=CN.value, y=DESeq.count, col=topDiff_norm_tissue))+geom_point(alpha=0.2)+
scale_y_continuous(trans='log2')+geom_smooth(col='red')+lims(x=c(0,20))+theme_bw()+
labs(x='Weighted CN in gene', y='DEseq2 counts (log2)')+theme(legend.position = "bottom")
ggsave("../../figures/scatterplot_CNweighted_DEseq2counts_onlyDE.pdf", width=4, height=4)
ggplot(joint_counts_CN[joint_counts_CN$counts.value > 0,],
aes(x=CN.value, y=counts.value))+geom_point(alpha=0.2)+
scale_y_continuous(trans='log2')+geom_smooth(col='red')+lims(x=c(0,20))+theme_bw()+
labs(x='Weighted CN in gene', y='TPM (log2)')+theme(legend.position = "bottom")
ggsave("../../figures/scatterplot_CNweighted_TPM_nonzero.pdf", width=8)
ggplot(joint_counts_CN_subset[joint_counts_CN_subset$counts.value > 0,],
aes(x=nearestGeneCN.value, y=counts.value))+geom_point(alpha=0.2)+
scale_y_continuous(trans='log2')+geom_smooth(col='red')+lims(x=c(0,20))+theme_bw()+
labs(x='Weighted CN in gene', y='TPM (log2)')+theme(legend.position = "bottom")
ggsave("../../figures/scatterplot_CNclosest_TPM_nonzero.pdf", width=8)
#-----------------------------------------------------------------------------------------------#
## for each gene, find the rank of both ploidy and RNASeq
## group by gene
joint_counts_CN_ranked = joint_counts_CN %>% group_by(CN.gene_name) %>%
mutate(rank_weighted_CN = order(CN.value), rank_DESeq = order(DESeq.count), rank_TPM = order(counts.value))
joint_counts_CN_normalised = joint_counts_CN %>% group_by(CN.gene_name) %>%
mutate(scaled_centered_weighted_CN = scale(CN.value), scaled_centered_DESeq = scale(DESeq.count),
scaled_centered_TPM = scale(counts.value))
joint_counts_CN_normalised_excludingnormal = joint_counts_CN %>% filter(CN.value != 2) %>%
group_by(CN.gene_name) %>%
mutate(scaled_centered_weighted_CN = scale(CN.value), scaled_centered_DESeq = scale(DESeq.count),
scaled_centered_TPM = scale(counts.value))
joint_counts_CN_normalised_highlyvar = joint_counts_CN_subset %>%
group_by(CN.gene_name) %>%
mutate(scaled_neighbour_CN=scale(nearestGeneCN.value),
scaled_centered_weighted_CN = scale(CN.value),
scaled_centered_DESeq = scale(DESeq.count),
scaled_centered_TPM = scale(counts.value))
ggplot(joint_counts_CN_normalised_highlyvar, aes(x=scaled_centered_weighted_CN,
y=scaled_centered_DESeq))+
geom_point(alpha=0.9)+
geom_smooth()+
facet_wrap(.~factor(counts.Var1,
levels=c( "119058org", "119148org", "151723org", "151761org", "151773org", "23868org",  "32077org",
"50495org", "54059org",  "54276org", '118976org', '119127org', '54327org', '119178org','118947org' )),
nrow=2, scales = "free")
ggplot(joint_counts_CN_normalised_highlyvar, aes(x=scaled_centered_weighted_CN,
y=scaled_centered_DESeq))+
geom_point(alpha=0.9)+
geom_smooth()
ggplot(joint_counts_CN_normalised_highlyvar, aes(x=scaled_neighbour_CN,
y=scaled_centered_DESeq))+
geom_point(alpha=0.9)+
geom_smooth()+
facet_wrap(.~factor(counts.Var1,
levels=c( "119058org", "119148org", "151723org", "151761org", "151773org", "23868org",  "32077org",
"50495org", "54059org",  "54276org", '118976org', '119127org', '54327org', '119178org','118947org' )),
nrow=2, scales = "free")
ggplot(joint_counts_CN_normalised_highlyvar, aes(x=nearestGeneCN.value,
y=counts.counts.value))+
geom_point(alpha=0.9)+
geom_smooth()+
facet_wrap(.~factor(counts.Var1,
levels=c( "119058org", "119148org", "151723org", "151761org", "151773org", "23868org",  "32077org",
"50495org", "54059org",  "54276org", '118976org', '119127org', '54327org', '119178org','118947org' )),
nrow=2, scales = "free")
# ggsave("../../figures/scatterplot_normCNweighted_normDESeq_perorg2.png", width=8, height=2.5)
#-----------------------------------------------------------------------------------------------#
example_centering = joint_counts_CN_normalised %>% filter(counts.Var2 == 'NOC2L') %>% dplyr::select(scaled_centered_weighted_CN)
mean(example_centering$scaled_centered_weighted_CN); sd(example_centering$scaled_centered_weighted_CN)
table(joint_counts_CN_ranked$rank_weighted_CN)
## there are genes which are duplicated - remove them
joint_counts_CN_ranked = joint_counts_CN_ranked[!(joint_counts_CN_ranked$CN.gene_name %in% joint_counts_CN_ranked$CN.gene_name[joint_counts_CN_ranked$rank_weighted_CN > length(unique(joint_counts_CN_ranked$counts.Var1))]),]
table(joint_counts_CN_ranked$rank_weighted_CN)
plot(joint_counts_CN_ranked$rank_weighted_CN, joint_counts_CN_ranked$rank_DESeq)
ggplot(joint_counts_CN_ranked, aes(rank_weighted_CN, rank_DESeq)) + geom_point()
ggplot(joint_counts_CN_ranked, aes(x = rank_weighted_CN, y = rank_DESeq)) + geom_tile()
ggplot((melt(table(joint_counts_CN_ranked$rank_weighted_CN, joint_counts_CN_ranked$rank_DESeq)/nrow(joint_counts_CN_ranked))),
aes(x=Var1, y=Var2, fill=value))+geom_raster()+scale_fill_jcolors_contin("pal2", bias = 1.75) + theme_bw()+
labs(x='Organoid rank for CN (weighted)', y='Organoid rank for gene expression (DESeq2 counts)')
ggsave("../../figures/rankplot_CNweighted_deseq.pdf", width=8)
joint_counts_CN_ranked_subsetorgs = joint_counts_CN_ranked %>% filter(! (counts.Var1 %in% c('118976org', '119127org', '54327org', '119178org', '118947org')))
ggplot((melt(table(joint_counts_CN_ranked_subsetorgs$rank_weighted_CN, joint_counts_CN_ranked_subsetorgs$rank_DESeq)/nrow(joint_counts_CN_ranked_subsetorgs))),
aes(x=Var1, y=Var2, fill=value))+geom_raster()+scale_fill_jcolors_contin("pal2", bias = 1.75) + theme_bw()+
labs(x='Organoid rank for CN (weighted)', y='Organoid rank for gene expression (DESeq2 counts)')
## is the rank of the excluded organoids any different from the rank of the included organoids?
grid.arrange(ggplot(joint_counts_CN_ranked, aes(x=(counts.Var1 %in% c('118976org', '119127org', '54327org', '119178org', '118947org')),
y= rank_weighted_CN))+geom_violin(),
ggplot(joint_counts_CN_ranked, aes(x=(counts.Var1 %in% c('118976org', '119127org', '54327org', '119178org', '118947org')),
y= rank_DESeq))+geom_violin(), nrow=1)
df <- expand.grid(x = sample(x = 1:100, size = 50), y = sample(1:100, size = 50))
# default is compatible with geom_tile()
ggplot(df, aes(x, y)) + geom_raster()
## blob, but clear trend
ggplot(joint_counts_CN_normalised %>% filter(CN.value != 2), aes(x=scaled_centered_weighted_CN, y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()
ggplot(joint_counts_CN_normalised %>% filter(CN.value != 2), aes(x=scaled_centered_weighted_CN, y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()+facet_wrap(.~(CN.value < 2), scales = "free")
ggplot(joint_counts_CN_normalised %>% filter(CN.value > 2), aes(x=scaled_centered_weighted_CN, y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()
ggsave("../../figures/scatterplot_normCNweighted_normDESeq.pdf", width=8)
ggplot(joint_counts_CN_normalised_excludingnormal %>% filter(CN.value > 2), aes(x=scaled_centered_weighted_CN, y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()+facet_wrap(.~counts.Var1)
ggsave("../../figures/scatterplot_normCNweighted_normDESeq_perorg.pdf", width=8)
ggplot(joint_counts_CN_normalised_excludingnormal %>% filter(CN.value > 2), aes(x=scaled_centered_weighted_CN,
y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()+facet_wrap(.~factor(counts.Var1,
levels=c( "119058org", "119148org", "151723org", "151761org", "151773org", "23868org",  "32077org",  "50495org",
"54059org",  "54276org", '118976org', '119127org', '54327org', '119178org', '118947org' )), nrow=2)
ggsave("../../figures/scatterplot_normCNweighted_normDESeq_perorg2.png", width=8, height=2.5)
## same when we include normal segments
ggplot(joint_counts_CN_normalised, aes(x=scaled_centered_weighted_CN,
y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()+facet_wrap(.~factor(counts.Var1,
levels=c( "119058org", "119148org", "151723org", "151761org", "151773org", "23868org",  "32077org",  "50495org",
"54059org",  "54276org", '118976org', '119127org', '54327org', '119178org', '118947org' )), nrow=2)
## same when we only include the very variable segments?
ggplot(joint_counts_CN_normalised %>% filter(CN.value > 2), aes(x=scaled_centered_weighted_CN,
y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()+facet_wrap(.~factor(counts.Var1,
levels=c( "119058org", "119148org", "151723org", "151761org", "151773org", "23868org",  "32077org",  "50495org",
"54059org",  "54276org", '118976org', '119127org', '54327org', '119178org', '118947org' )), nrow=2)
## same but normalising only with nonnormal segments
ggplot(joint_counts_CN_normalised_excludingnormal, aes(x=scaled_centered_weighted_CN, y=scaled_centered_DESeq))+
geom_point(alpha=0.002)+geom_smooth()
ggsave("../../figures/scatterplot_normCNweighted_normDESeq_nonormal.pdf", width=8)
ggsave("../../figures/scatterplot_normCNweighted_normDESeq_nonormal.png", width=4)
ggplot(joint_counts_CN_normalised_excludingnormal, aes(x=scaled_centered_weighted_CN, y=scaled_centered_TPM))+
geom_point(alpha=0.002)+geom_smooth()
ggsave("../../figures/scatterplot_normCNweighted_normTPM_nonormal.png", width=4)
ggplot(joint_counts_CN_normalised_excludingnormal, aes(x=scaled_centered_weighted_CN, y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()+facet_wrap(.~(CN.value < 2), scales = "free")
ggplot(joint_counts_CN_normalised_excludingnormal %>% filter(CN.value > 2), aes(x=scaled_centered_weighted_CN, y=scaled_centered_DESeq))+
geom_point(alpha=0.01)+geom_smooth()
ggsave("../../figures/scatterplot_normCNweighted_normDESeq_nonormal_onlyamp.png", width=4)
## only nonnormal segments, and only with Stephane's genes
ggplot(joint_counts_CN_normalised_excludingnormal %>% filter(counts.Var2 %in% unlist(topvariable)),
aes(x=scaled_centered_weighted_CN, y=scaled_centered_DESeq, col=CN.value < 2))+
geom_point(alpha=0.1)+geom_smooth()+facet_wrap(.~(CN.value < 2), scales = "free")
ggsave("../../figures/scatterplot_normCNweighted_normDESeq_nonormal_highlyvarregions.pdf", width=8)
ggplot(joint_counts_CN_normalised %>% filter(CN.value != 2), aes(x=scaled_centered_weighted_CN, y=DESeq.count))+
geom_point(alpha=0.2)+geom_smooth()+scale_y_continuous(trans = "log2")
## not great
ggplot(joint_counts_CN_normalised %>% filter(CN.value != 2), aes(x=CN.value, y=scaled_centered_DESeq))+
geom_point(alpha=0.2)+geom_smooth()+lims(x=c(0,10))
## good trend
ggplot(joint_counts_CN_normalised  %>% filter(CN.value != 2), aes(x=scaled_centered_weighted_CN, y=scaled_centered_TPM))+
geom_point(alpha=0.2)+geom_smooth()
## not great, but good trend
ggplot(joint_counts_CN_normalised_excludingnormal, aes(x=scaled_centered_weighted_CN, y=scaled_centered_TPM))+
geom_point(alpha=0.2)+geom_smooth()
save.image("../output/analyse_joing_counts_CN.RData")
