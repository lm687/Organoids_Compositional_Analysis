axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE))
if(return_grob){
return(grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE)))
}
}else{
return(list(plot_data=dend_data_inputclr0004,
dendogram_data=dendroimputclr_all_lowerinput))
}
}
dendrogram_underrepresented <- give_dendrogram_from_imputation(plot = F, exposures = exposures_generally_not_in_organoid_clades,
impute_VALUE = 0.01, return_grob = T)
give_dendrogram_from_imputation <- function(impute_VALUE, plot=T, exposures=NULL, return_grob=F, ...){
if(is.null(exposures)){
.exposures <- all_natgen[[which_natgen]]
}else{
.exposures <- exposures
}
dendroimputclr_all_lowerinput = give_dendrogram_generalised(as(compositions::clr(impute(.exposures, impute_VALUE)), 'matrix'), modify_labels=F, keep_only_PDO = F, ...)
dend_data_inputclr0004 <- dendro_data(dendroimputclr_all_lowerinput, type = "rectangle")
dend_data_inputclr0004$labels$label = as.character(dend_data_inputclr0004$labels$label)
dend_data_inputclr0004$labels$label[!grepl('PDO', dend_data_inputclr0004$labels$label)] = ""
if(plot){
p_v2_0004 <- ggplot(dend_data_inputclr0004$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_label_repel(data = dend_data_inputclr0004$labels, aes(x, y, label = gsub('Organoid ', '', label)),
hjust = 0, size = 3, vjust=0, nudge_y = -2)+
ylim(-3, 15)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_x_continuous(expand = c(extra_expand, extra_expand))+
scale_y_continuous(expand = c(0.5, 0, 0.05, 0))
heatmap_dendrogram_df_inputclr0004 = t(.exposures[rownames(.exposures)[match(gsub("Organoid ", "", label(dendroimputclr_all_lowerinput)),rownames(.exposures))],])
p2_inputclr_0004 = ggplot(melt(heatmap_dendrogram_df_inputclr0004), aes(x=Var2, y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE))
if(return_grob){
return(grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE)))
}
}else{
return(list(plot_data=dend_data_inputclr0004,
dendogram_data=dendroimputclr_all_lowerinput))
}
}
dendrogram_underrepresented <- give_dendrogram_from_imputation(plot = F, exposures = exposures_generally_not_in_organoid_clades,
impute_VALUE = 0.01, return_grob = T)
dendrogram_underrepresented
plot(dendrogram_underrepresented)
cowplot::plot_grid(dendrogram_underrepresented)
dendrogram_underrepresented
dendrogram_underrepresented
dendrogram_underrepresented <- give_dendrogram_from_imputation(plot = T, exposures = exposures_generally_not_in_organoid_clades,
impute_VALUE = 0.01, return_grob = T)
give_dendrogram_from_imputation <- function(impute_VALUE, plot=T, exposures=NULL, return_grob=F, ...){
if(!plot & return_grob){
stop('You cannot have plot=F and return_grob=T')
}
if(is.null(exposures)){
.exposures <- all_natgen[[which_natgen]]
}else{
.exposures <- exposures
}
dendroimputclr_all_lowerinput = give_dendrogram_generalised(as(compositions::clr(impute(.exposures, impute_VALUE)), 'matrix'), modify_labels=F, keep_only_PDO = F, ...)
dend_data_inputclr0004 <- dendro_data(dendroimputclr_all_lowerinput, type = "rectangle")
dend_data_inputclr0004$labels$label = as.character(dend_data_inputclr0004$labels$label)
dend_data_inputclr0004$labels$label[!grepl('PDO', dend_data_inputclr0004$labels$label)] = ""
if(plot){
p_v2_0004 <- ggplot(dend_data_inputclr0004$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_label_repel(data = dend_data_inputclr0004$labels, aes(x, y, label = gsub('Organoid ', '', label)),
hjust = 0, size = 3, vjust=0, nudge_y = -2)+
ylim(-3, 15)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_x_continuous(expand = c(extra_expand, extra_expand))+
scale_y_continuous(expand = c(0.5, 0, 0.05, 0))
heatmap_dendrogram_df_inputclr0004 = t(.exposures[rownames(.exposures)[match(gsub("Organoid ", "", label(dendroimputclr_all_lowerinput)),rownames(.exposures))],])
p2_inputclr_0004 = ggplot(melt(heatmap_dendrogram_df_inputclr0004), aes(x=Var2, y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE))
if(return_grob){
return(grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE)))
}
}else{
return(list(plot_data=dend_data_inputclr0004,
dendogram_data=dendroimputclr_all_lowerinput))
}
}
dendrogram_underrepresented
print(dendrogram_underrepresented)
cowplot::plot_grid(dendrogram_underrepresented)
library(cowplot)
pdf(paste0("figures/constantly_underrepresented_samples_tree_maximput_char", maximput_char, '.pdf'), height = 4.5, width = 5.5)
cowplot::plot_grid(dendrogram_underrepresented)
dev.off()
pdf(paste0("figures/constantly_underrepresented_samples_tree_maximput_char", maximput_char, '.pdf'),
height = 2.5, width = 5.5)
cowplot::plot_grid(dendrogram_underrepresented)
dev.off()
pdf(paste0("figures/constantly_underrepresented_samples_tree_maximput_char", maximput_char, '.pdf'),
height = 6.5, width = 5.5)
cowplot::plot_grid(dendrogram_underrepresented)
dev.off()
pdf(paste0("figures/constantly_underrepresented_samples_tree_maximput_char", maximput_char, '.pdf'),
height = 6.5, width = 10.5)
cowplot::plot_grid(dendrogram_underrepresented)
dev.off()
extra_expand
extra_expand = 0.05
pdf(paste0("figures/constantly_underrepresented_samples_tree_maximput_char", maximput_char, '.pdf'),
height = 6.5, width = 10.5)
cowplot::plot_grid(dendrogram_underrepresented)
dev.off()
extra_expand_v2 = 0.05
pdf(paste0("figures/constantly_underrepresented_samples_tree_maximput_char", maximput_char, '.pdf'),
height = 6.5, width = 10.5)
cowplot::plot_grid(dendrogram_underrepresented)
dev.off()
give_dendrogram_from_imputation <- function(impute_VALUE, plot=T, exposures=NULL, return_grob=F, expand_vec=c(0.5, 0, 0.05, 0)...){
if(!plot & return_grob){
stop('You cannot have plot=F and return_grob=T')
}
if(is.null(exposures)){
.exposures <- all_natgen[[which_natgen]]
}else{
.exposures <- exposures
}
dendroimputclr_all_lowerinput = give_dendrogram_generalised(as(compositions::clr(impute(.exposures, impute_VALUE)), 'matrix'), modify_labels=F, keep_only_PDO = F, ...)
dend_data_inputclr0004 <- dendro_data(dendroimputclr_all_lowerinput, type = "rectangle")
dend_data_inputclr0004$labels$label = as.character(dend_data_inputclr0004$labels$label)
dend_data_inputclr0004$labels$label[!grepl('PDO', dend_data_inputclr0004$labels$label)] = ""
if(plot){
p_v2_0004 <- ggplot(dend_data_inputclr0004$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_label_repel(data = dend_data_inputclr0004$labels, aes(x, y, label = gsub('Organoid ', '', label)),
hjust = 0, size = 3, vjust=0, nudge_y = -2)+
ylim(-3, 15)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_x_continuous(expand = c(extra_expand, extra_expand))+
scale_y_continuous(expand = expand_vec)
heatmap_dendrogram_df_inputclr0004 = t(.exposures[rownames(.exposures)[match(gsub("Organoid ", "", label(dendroimputclr_all_lowerinput)),rownames(.exposures))],])
p2_inputclr_0004 = ggplot(melt(heatmap_dendrogram_df_inputclr0004), aes(x=Var2, y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE))
if(return_grob){
return(grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE)))
}
}else{
return(list(plot_data=dend_data_inputclr0004,
dendogram_data=dendroimputclr_all_lowerinput))
}
}
give_dendrogram_from_imputation <- function(impute_VALUE, plot=T, exposures=NULL, return_grob=F, expand_vec=c(0.5, 0, 0.05, 0), ...){
if(!plot & return_grob){
stop('You cannot have plot=F and return_grob=T')
}
if(is.null(exposures)){
.exposures <- all_natgen[[which_natgen]]
}else{
.exposures <- exposures
}
dendroimputclr_all_lowerinput = give_dendrogram_generalised(as(compositions::clr(impute(.exposures, impute_VALUE)), 'matrix'), modify_labels=F, keep_only_PDO = F, ...)
dend_data_inputclr0004 <- dendro_data(dendroimputclr_all_lowerinput, type = "rectangle")
dend_data_inputclr0004$labels$label = as.character(dend_data_inputclr0004$labels$label)
dend_data_inputclr0004$labels$label[!grepl('PDO', dend_data_inputclr0004$labels$label)] = ""
if(plot){
p_v2_0004 <- ggplot(dend_data_inputclr0004$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_label_repel(data = dend_data_inputclr0004$labels, aes(x, y, label = gsub('Organoid ', '', label)),
hjust = 0, size = 3, vjust=0, nudge_y = -2)+
ylim(-3, 15)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_x_continuous(expand = c(extra_expand, extra_expand))+
scale_y_continuous(expand = expand_vec)
heatmap_dendrogram_df_inputclr0004 = t(.exposures[rownames(.exposures)[match(gsub("Organoid ", "", label(dendroimputclr_all_lowerinput)),rownames(.exposures))],])
p2_inputclr_0004 = ggplot(melt(heatmap_dendrogram_df_inputclr0004), aes(x=Var2, y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE))
if(return_grob){
return(grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE)))
}
}else{
return(list(plot_data=dend_data_inputclr0004,
dendogram_data=dendroimputclr_all_lowerinput))
}
}
dendrogram_underrepresented <- give_dendrogram_from_imputation(plot = T, exposures = exposures_generally_not_in_organoid_clades,
impute_VALUE = 0.01, return_grob = T,
expand_vec = c(0.05, 0, 0.05, 0))
dendrogram_underrepresented <- give_dendrogram_from_imputation(plot = T, exposures = exposures_generally_not_in_organoid_clades,
impute_VALUE = 0.01, return_grob = T,
expand_vec = c(0.05, 0, 0.05, 0))
pdf(paste0("figures/constantly_underrepresented_samples_tree_maximput_char", maximput_char, '.pdf'),
height = 6.5, width = 10.5)
cowplot::plot_grid(dendrogram_underrepresented)
dev.off()
dim(exposures_generally_not_in_organoid_clades)
dim(all_natgen[[which_natgen]])
dendrogram_underrepresented_all <- give_dendrogram_from_imputation(plot = T, exposures = all_natgen[[which_natgen]],
impute_VALUE = 0.01, return_grob = T,
expand_vec = c(0.05, 0, 0.05, 0))
dendrogram_all
dendrogram_all <- give_dendrogram_from_imputation(plot = T, exposures = all_natgen[[which_natgen]],
impute_VALUE = 0.01, return_grob = T,
expand_vec = c(0.05, 0, 0.05, 0))
cowplot::plot_grid(dendrogram_all)
which_natgen
dendrogram_all <- give_dendrogram_from_imputation(plot = T, exposures = all_natgen[[which_natgen]],
impute_VALUE = 0.01, return_grob = T,
expand_vec = c(0.5, 0, 0.05, 0))
cowplot::plot_grid(dendrogram_all)
1e-2
dendroimputclr_all = give_dendrogram_generalised(as(compositions::clr(impute(all_natgen[[which_natgen]], 1e-2)), 'matrix'), modify_labels=F, keep_only_PDO = F)
dend_data_inputclr <- dendro_data(dendroimputclr_all, type = "rectangle")
dend_data_inputclr$labels$label = as.character(dend_data_inputclr$labels$label)
dend_data_inputclr$labels$label[!grepl('PDO', dend_data_inputclr$labels$label)] = ""
p_v2 <- ggplot(dend_data_inputclr$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
# geom_text(data = dend_data$labels, aes(x, y, label = label),
#           hjust = 1, angle = 90, size = 3)+
geom_label_repel(data = dend_data_inputclr$labels, aes(x, y, label = gsub('Organoid ', '', label)),
hjust = 0, size = 3, vjust=0, nudge_y = -2)+
ylim(-3, 15)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_x_continuous(expand = c(extra_expand, extra_expand))+
scale_y_continuous(expand = c(0.5, 0, 0.05, 0))
heatmap_dendrogram_df_inputclr = t(all_natgen$UpdatedExposures[rownames(all_natgen$UpdatedExposures)[match(gsub("Organoid ", "", labels(dendroimputclr_all)),rownames(all_natgen$UpdatedExposures))],])
all_natgen$UpdatedExposures
dendroimputclr_all
labels(dendroimputclr_all)
heatmap_dendrogram_df_inputclr = t(all_natgen$UpdatedExposures[rownames(all_natgen$UpdatedExposures)[match(gsub("Organoid ", "", label(dendroimputclr_all)),rownames(all_natgen$UpdatedExposures))],])
extra_expand_v2 = .040
p2_inputclr = ggplot(melt(heatmap_dendrogram_df_inputclr), aes(x=Var2, y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
#
grid.arrange(p_v2, p2_inputclr, heights=c(2,1))
label(dendroimputclr_all)
dendroimputclr_all
dendroimputclr_all$labels
dendroimputclr_all
dendroimputclr_all$labels
dendroimputclr_all$labels == label(dendroimputclr_all)
heatmap_dendrogram_df_inputclr
colnames(heatmap_dendrogram_df_inputclr)
p2_inputclr = ggplot(melt(heatmap_dendrogram_df_inputclr), aes(x=factor(Var2, levels=colnames(heatmap_dendrogram_df_inputclr)), y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2, p2_inputclr, heights=c(2,1))
label(dendroimputclr_all)[1]
heatmap_dendrogram_df_inputclr[,1]
colnames(heatmap_dendrogram_df_inputclr)[1]
dendroimputclr_all
dendroimputclr_all$order
labels(dendroimputclr_all)[dendroimputclr_all$order]
labels(dendroimputclr_all)
label(dendroimputclr_all)[dendroimputclr_all$order]
heatmap_dendrogram_df_inputclr = t(all_natgen$UpdatedExposures[rownames(all_natgen$UpdatedExposures)[match(gsub("Organoid ", "", label(dendroimputclr_all)[dendroimputclr_all$order]),rownames(all_natgen$UpdatedExposures))],])
extra_expand_v2 = .040
p2_inputclr = ggplot(melt(heatmap_dendrogram_df_inputclr), aes(x=factor(Var2, levels=colnames(heatmap_dendrogram_df_inputclr)), y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2, p2_inputclr, heights=c(2,1))
give_dendrogram_from_imputation <- function(impute_VALUE, plot=T, exposures=NULL, return_grob=F, expand_vec=c(0.5, 0, 0.05, 0), ...){
if(!plot & return_grob){
stop('You cannot have plot=F and return_grob=T')
}
if(is.null(exposures)){
.exposures <- all_natgen[[which_natgen]]
}else{
.exposures <- exposures
}
dendroimputclr_all_lowerinput = give_dendrogram_generalised(as(compositions::clr(impute(.exposures, impute_VALUE)), 'matrix'), modify_labels=F, keep_only_PDO = F, ...)
dend_data_inputclr0004 <- dendro_data(dendroimputclr_all_lowerinput, type = "rectangle")
dend_data_inputclr0004$labels$label = as.character(dend_data_inputclr0004$labels$label)
dend_data_inputclr0004$labels$label[!grepl('PDO', dend_data_inputclr0004$labels$label)] = ""
if(plot){
p_v2_0004 <- ggplot(dend_data_inputclr0004$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_label_repel(data = dend_data_inputclr0004$labels, aes(x, y, label = gsub('Organoid ', '', label)),
hjust = 0, size = 3, vjust=0, nudge_y = -2)+
ylim(-3, 15)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_x_continuous(expand = c(extra_expand, extra_expand))+
scale_y_continuous(expand = expand_vec)
## here there used  to be a probelm in that I used "labels", but now using "label" the order needs to be changed
heatmap_dendrogram_df_inputclr0004 = t(.exposures[rownames(.exposures)[match(gsub("Organoid ", "", label(dendroimputclr_all_lowerinput)[dendroimputclr_all$order]),rownames(.exposures))],])
p2_inputclr_0004 = ggplot(melt(heatmap_dendrogram_df_inputclr0004), aes(x=Var2, y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE))
if(return_grob){
return(grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE)))
}
}else{
return(list(plot_data=dend_data_inputclr0004,
dendogram_data=dendroimputclr_all_lowerinput))
}
}
dendroimputclr_all = give_dendrogram_generalised(as(compositions::clr(impute(all_natgen[[which_natgen]], 1e-2)), 'matrix'), modify_labels=F, keep_only_PDO = F)
dendrogram_all <- give_dendrogram_from_imputation(plot = T, exposures = all_natgen[[which_natgen]],
impute_VALUE = 0.01, return_grob = T,
expand_vec = c(0.5, 0, 0.05, 0))
cowplot::plot_grid(dendrogram_all)
dendrogram_underrepresented <- give_dendrogram_from_imputation(plot = T, exposures = exposures_generally_not_in_organoid_clades,
impute_VALUE = 0.01, return_grob = T,
expand_vec = c(0.05, 0, 0.05, 0))
give_dendrogram_from_imputation <- function(impute_VALUE, plot=T, exposures=NULL, return_grob=F, expand_vec=c(0.5, 0, 0.05, 0), ...){
if(!plot & return_grob){
stop('You cannot have plot=F and return_grob=T')
}
if(is.null(exposures)){
.exposures <- all_natgen[[which_natgen]]
}else{
.exposures <- exposures
}
dendroimputclr_all_lowerinput = give_dendrogram_generalised(as(compositions::clr(impute(.exposures, impute_VALUE)), 'matrix'), modify_labels=F, keep_only_PDO = F, ...)
dend_data_inputclr0004 <- dendro_data(dendroimputclr_all_lowerinput, type = "rectangle")
dend_data_inputclr0004$labels$label = as.character(dend_data_inputclr0004$labels$label)
dend_data_inputclr0004$labels$label[!grepl('PDO', dend_data_inputclr0004$labels$label)] = ""
if(plot){
p_v2_0004 <- ggplot(dend_data_inputclr0004$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_label_repel(data = dend_data_inputclr0004$labels, aes(x, y, label = gsub('Organoid ', '', label)),
hjust = 0, size = 3, vjust=0, nudge_y = -2)+
ylim(-3, 15)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_x_continuous(expand = c(extra_expand, extra_expand))+
scale_y_continuous(expand = expand_vec)
## here there used  to be a probelm in that I used "labels", but now using "label" the order needs to be changed
heatmap_dendrogram_df_inputclr0004 = t(.exposures[rownames(.exposures)[match(gsub("Organoid ", "", label(dendroimputclr_all_lowerinput)[dendroimputclr_all_lowerinput$order]),rownames(.exposures))],])
p2_inputclr_0004 = ggplot(melt(heatmap_dendrogram_df_inputclr0004), aes(x=Var2, y=value, fill=Var1))+geom_bar(stat='identity')+theme_bw()+
theme(axis.title.x=element_blank(),  legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),  legend.position = "bottom",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank())+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(expand = c(extra_expand_v2, extra_expand_v2))+
guides(fill = guide_legend(nrow = 1))
grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE))
if(return_grob){
return(grid.arrange(p_v2_0004, p2_inputclr_0004, heights=c(2,1), top=paste0('Imputation: ', impute_VALUE)))
}
}else{
return(list(plot_data=dend_data_inputclr0004,
dendogram_data=dendroimputclr_all_lowerinput))
}
}
dendrogram_underrepresented <- give_dendrogram_from_imputation(plot = T, exposures = exposures_generally_not_in_organoid_clades,
impute_VALUE = 0.01, return_grob = T,
expand_vec = c(0.05, 0, 0.05, 0))
pdf(paste0("figures/constantly_underrepresented_samples_tree_maximput_char", maximput_char, '.pdf'),
height = 6.5, width = 10.5)
cowplot::plot_grid(dendrogram_underrepresented)
dev.off()
